

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Feb 15 01:13:11 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.10
    20                           ; Generated 31/07/2019 GMT
    21                           ; 
    22                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  000E                     	;# 
   224  000E                     	;# 
   225  000F                     	;# 
   226  0010                     	;# 
   227  0011                     	;# 
   228  0012                     	;# 
   229  0013                     	;# 
   230  0014                     	;# 
   231  0015                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001D                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  0081                     	;# 
   245  0085                     	;# 
   246  0086                     	;# 
   247  0087                     	;# 
   248  0088                     	;# 
   249  0089                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  008F                     	;# 
   254  0090                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0094                     	;# 
   261  0095                     	;# 
   262  0096                     	;# 
   263  0097                     	;# 
   264  0098                     	;# 
   265  0099                     	;# 
   266  009A                     	;# 
   267  009B                     	;# 
   268  009C                     	;# 
   269  009D                     	;# 
   270  009E                     	;# 
   271  009F                     	;# 
   272  0105                     	;# 
   273  0107                     	;# 
   274  0108                     	;# 
   275  0109                     	;# 
   276  010C                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  010F                     	;# 
   281  0185                     	;# 
   282  0187                     	;# 
   283  0188                     	;# 
   284  0189                     	;# 
   285  018C                     	;# 
   286  018D                     	;# 
   287  0000                     	;# 
   288  0001                     	;# 
   289  0002                     	;# 
   290  0003                     	;# 
   291  0004                     	;# 
   292  0005                     	;# 
   293  0006                     	;# 
   294  0007                     	;# 
   295  0008                     	;# 
   296  0009                     	;# 
   297  000A                     	;# 
   298  000B                     	;# 
   299  000C                     	;# 
   300  000D                     	;# 
   301  000E                     	;# 
   302  000E                     	;# 
   303  000F                     	;# 
   304  0010                     	;# 
   305  0011                     	;# 
   306  0012                     	;# 
   307  0013                     	;# 
   308  0014                     	;# 
   309  0015                     	;# 
   310  0015                     	;# 
   311  0016                     	;# 
   312  0017                     	;# 
   313  0018                     	;# 
   314  0019                     	;# 
   315  001A                     	;# 
   316  001B                     	;# 
   317  001B                     	;# 
   318  001C                     	;# 
   319  001D                     	;# 
   320  001E                     	;# 
   321  001F                     	;# 
   322  0081                     	;# 
   323  0085                     	;# 
   324  0086                     	;# 
   325  0087                     	;# 
   326  0088                     	;# 
   327  0089                     	;# 
   328  008C                     	;# 
   329  008D                     	;# 
   330  008E                     	;# 
   331  008F                     	;# 
   332  0090                     	;# 
   333  0091                     	;# 
   334  0092                     	;# 
   335  0093                     	;# 
   336  0093                     	;# 
   337  0093                     	;# 
   338  0094                     	;# 
   339  0095                     	;# 
   340  0096                     	;# 
   341  0097                     	;# 
   342  0098                     	;# 
   343  0099                     	;# 
   344  009A                     	;# 
   345  009B                     	;# 
   346  009C                     	;# 
   347  009D                     	;# 
   348  009E                     	;# 
   349  009F                     	;# 
   350  0105                     	;# 
   351  0107                     	;# 
   352  0108                     	;# 
   353  0109                     	;# 
   354  010C                     	;# 
   355  010C                     	;# 
   356  010D                     	;# 
   357  010E                     	;# 
   358  010F                     	;# 
   359  0185                     	;# 
   360  0187                     	;# 
   361  0188                     	;# 
   362  0189                     	;# 
   363  018C                     	;# 
   364  018D                     	;# 
   365  0013                     _SSPBUF	set	19
   366  0014                     _SSPCON	set	20
   367  0005                     _PORTA	set	5
   368  001E                     _ADRESH	set	30
   369  000B                     _INTCONbits	set	11
   370  000C                     _PIR1bits	set	12
   371  001F                     _ADCON0bits	set	31
   372  0063                     _SSPIF	set	99
   373  0066                     _ADIF	set	102
   374  0094                     _SSPSTATbits	set	148
   375  0094                     _SSPSTAT	set	148
   376  0085                     _TRISA	set	133
   377  0088                     _TRISD	set	136
   378  008C                     _PIE1bits	set	140
   379  0086                     _TRISBbits	set	134
   380  0089                     _TRISEbits	set	137
   381  0085                     _TRISAbits	set	133
   382  009F                     _ADCON1bits	set	159
   383  043B                     _TRISC3	set	1083
   384  043D                     _TRISC5	set	1085
   385  0463                     _SSPIE	set	1123
   386  0188                     _ANSEL	set	392
   387  0189                     _ANSELH	set	393
   388  0189                     _ANSELHbits	set	393
   389  0188                     _ANSELbits	set	392
   390                           
   391                           ; #config settings
   392  0000                     
   393                           	psect	cinit
   394  000F                     start_initialization:	
   395  000F                     __initialization:	
   396                           
   397                           ; Clear objects allocated to COMMON
   398  000F  01F6               	clrf	__pbssCOMMON& (0+127)
   399  0010  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   400  0011  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   401  0012  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   402  0013                     end_of_initialization:	
   403                           ;End of C runtime variable initialization code
   404                           
   405  0013                     __end_of__initialization:	
   406  0013  0183               	clrf	3
   407  0014  120A  118A  297E   	ljmp	_main	;jump to C main() function
   408                           
   409                           	psect	bssCOMMON
   410  0076                     __pbssCOMMON:	
   411  0076                     _opcion:	
   412  0076                     	ds	1
   413  0077                     _canal:	
   414  0077                     	ds	1
   415  0078                     _adc2:	
   416  0078                     	ds	1
   417  0079                     _adc1:	
   418  0079                     	ds	1
   419                           
   420                           	psect	cstackCOMMON
   421  0070                     __pcstackCOMMON:	
   422  0070                     ?_spiRead:	
   423  0070                     ??_spiRead:	
   424                           ; 1 bytes @ 0x0
   425                           
   426  0070                     ?_spiWrite:	
   427                           ; 1 bytes @ 0x0
   428                           
   429  0070                     ??_spiWrite:	
   430                           ; 1 bytes @ 0x0
   431                           
   432  0070                     ?_ADC_INTERRUPT:	
   433                           ; 1 bytes @ 0x0
   434                           
   435  0070                     ?_ISR:	
   436                           ; 1 bytes @ 0x0
   437                           
   438  0070                     ?_main:	
   439                           ; 1 bytes @ 0x0
   440                           
   441  0070                     ?_spiReceiveWait:	
   442                           ; 1 bytes @ 0x0
   443                           
   444  0070                     ??_spiReceiveWait:	
   445                           ; 1 bytes @ 0x0
   446                           
   447  0070                     spiWrite@dat:	
   448                           ; 1 bytes @ 0x0
   449                           
   450                           
   451                           ; 1 bytes @ 0x0
   452  0070                     	ds	1
   453  0071                     ??_ISR:	
   454                           
   455                           ; 1 bytes @ 0x1
   456  0071                     	ds	3
   457  0074                     ??_spiInit:	
   458  0074                     ?_ADC_CONFIG:	
   459                           ; 1 bytes @ 0x4
   460                           
   461  0074                     ??_ADC_INTERRUPT:	
   462                           ; 1 bytes @ 0x4
   463                           
   464  0074                     ADC_CONFIG@justif:	
   465                           ; 1 bytes @ 0x4
   466                           
   467  0074                     spiInit@sType:	
   468                           ; 1 bytes @ 0x4
   469                           
   470                           
   471                           ; 1 bytes @ 0x4
   472  0074                     	ds	1
   473  0075                     ADC_CONFIG@canal:	
   474                           
   475                           ; 1 bytes @ 0x5
   476  0075                     	ds	1
   477  0076                     ??_main:	
   478                           
   479                           	psect	cstackBANK0
   480  0020                     __pcstackBANK0:	
   481                           ; 1 bytes @ 0x6
   482                           
   483  0020                     ?_spiInit:	
   484  0020                     ??_ADC_CONFIG:	
   485                           ; 1 bytes @ 0x0
   486                           
   487  0020                     spiInit@sDataSample:	
   488                           ; 1 bytes @ 0x0
   489                           
   490                           
   491                           ; 1 bytes @ 0x0
   492  0020                     	ds	1
   493  0021                     spiInit@sClockIdle:	
   494                           
   495                           ; 1 bytes @ 0x1
   496  0021                     	ds	1
   497  0022                     spiInit@sTransmitEdge:	
   498                           
   499                           ; 1 bytes @ 0x2
   500  0022                     	ds	1
   501                           
   502                           	psect	maintext
   503  017E                     __pmaintext:	
   504 ;;
   505 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   506 ;;
   507 ;; *************** function _main *****************
   508 ;; Defined at:
   509 ;;		line 66 in file "slave.c"
   510 ;; Parameters:    Size  Location     Type
   511 ;;		None
   512 ;; Auto vars:     Size  Location     Type
   513 ;;		None
   514 ;; Return value:  Size  Location     Type
   515 ;;                  1    wreg      void 
   516 ;; Registers used:
   517 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   518 ;; Tracked objects:
   519 ;;		On entry : B00/0
   520 ;;		On exit  : 0/0
   521 ;;		Unchanged: 0/0
   522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   523 ;;      Params:         0       0       0       0       0
   524 ;;      Locals:         0       0       0       0       0
   525 ;;      Temps:          0       0       0       0       0
   526 ;;      Totals:         0       0       0       0       0
   527 ;;Total ram usage:        0 bytes
   528 ;; Hardware stack levels required when called:    4
   529 ;; This function calls:
   530 ;;		_ADC_CONFIG
   531 ;;		_ADC_INTERRUPT
   532 ;;		_spiInit
   533 ;; This function is called by:
   534 ;;		Startup code after reset
   535 ;; This function uses a non-reentrant model
   536 ;;
   537                           
   538                           
   539                           ;psect for function _main
   540  017E                     _main:	
   541  017E                     l1175:	
   542                           ;incstack = 0
   543                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   544                           
   545                           
   546                           ;slave.c: 68:     ANSELH = 0;
   547  017E  1683               	bsf	3,5	;RP0=1, select bank3
   548  017F  1703               	bsf	3,6	;RP1=1, select bank3
   549  0180  0189               	clrf	9	;volatile
   550                           
   551                           ;slave.c: 69:     ANSEL = 0;
   552  0181  0188               	clrf	8	;volatile
   553                           
   554                           ;slave.c: 70:     TRISD = 0;
   555  0182  1683               	bsf	3,5	;RP0=1, select bank1
   556  0183  1303               	bcf	3,6	;RP1=0, select bank1
   557  0184  0188               	clrf	8	;volatile
   558                           
   559                           ;slave.c: 72:     TRISA = 0;
   560  0185  0185               	clrf	5	;volatile
   561                           
   562                           ;slave.c: 73:      PORTA = 0;
   563  0186  1283               	bcf	3,5	;RP0=0, select bank0
   564  0187  1303               	bcf	3,6	;RP1=0, select bank0
   565  0188  0185               	clrf	5	;volatile
   566  0189                     l1177:	
   567                           
   568                           ;slave.c: 76:     ADC_CONFIG(12,0);
   569  0189  01F4               	clrf	ADC_CONFIG@justif
   570  018A  300C               	movlw	12
   571  018B  120A  118A  2017  120A  118A  	fcall	_ADC_CONFIG
   572  0190                     l1179:	
   573                           
   574                           ;slave.c: 77:     ADC_CONFIG(10,0);
   575  0190  01F4               	clrf	ADC_CONFIG@justif
   576  0191  300A               	movlw	10
   577  0192  120A  118A  2017  120A  118A  	fcall	_ADC_CONFIG
   578  0197                     l1181:	
   579                           
   580                           ;slave.c: 78:     ADC_INTERRUPT();
   581  0197  120A  118A  21D4  120A  118A  	fcall	_ADC_INTERRUPT
   582  019C                     l1183:	
   583                           
   584                           ;slave.c: 79:     ADCON0bits.GO = 1;
   585  019C  1283               	bcf	3,5	;RP0=0, select bank0
   586  019D  1303               	bcf	3,6	;RP1=0, select bank0
   587  019E  149F               	bsf	31,1	;volatile
   588  019F                     l1185:	
   589                           
   590                           ;slave.c: 82:     SSPIF = 0;
   591  019F  118C               	bcf	12,3	;volatile
   592  01A0                     l1187:	
   593                           
   594                           ;slave.c: 83:     SSPIE = 1;
   595  01A0  1683               	bsf	3,5	;RP0=1, select bank1
   596  01A1  1303               	bcf	3,6	;RP1=0, select bank1
   597  01A2  158C               	bsf	12,3	;volatile
   598  01A3                     l1189:	
   599                           
   600                           ;slave.c: 84:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, S
      +                          PI_IDLE_2_ACTIVE);
   601  01A3  1283               	bcf	3,5	;RP0=0, select bank0
   602  01A4  1303               	bcf	3,6	;RP1=0, select bank0
   603  01A5  01A0               	clrf	spiInit@sDataSample
   604  01A6  01A1               	clrf	spiInit@sClockIdle
   605  01A7  01A2               	clrf	spiInit@sTransmitEdge
   606  01A8  3024               	movlw	36
   607  01A9  120A  118A  21B6  120A  118A  	fcall	_spiInit
   608  01AE                     l1191:	
   609                           
   610                           ;slave.c: 87:         PORTA = adc1;
   611  01AE  0879               	movf	_adc1,w
   612  01AF  1283               	bcf	3,5	;RP0=0, select bank0
   613  01B0  1303               	bcf	3,6	;RP1=0, select bank0
   614  01B1  0085               	movwf	5	;volatile
   615  01B2  29AE               	goto	l1191
   616  01B3  120A  118A  280C   	ljmp	start
   617  01B6                     __end_of_main:	
   618                           
   619                           	psect	text1
   620  01B6                     __ptext1:	
   621 ;; *************** function _spiInit *****************
   622 ;; Defined at:
   623 ;;		line 12 in file "SPIS.c"
   624 ;; Parameters:    Size  Location     Type
   625 ;;  sType           1    wreg     enum E1445
   626 ;;  sDataSample     1    0[BANK0 ] enum E1453
   627 ;;  sClockIdle      1    1[BANK0 ] enum E1457
   628 ;;  sTransmitEdg    1    2[BANK0 ] enum E1461
   629 ;; Auto vars:     Size  Location     Type
   630 ;;  sType           1    4[COMMON] enum E1445
   631 ;; Return value:  Size  Location     Type
   632 ;;                  1    wreg      void 
   633 ;; Registers used:
   634 ;;		wreg, status,2, status,0
   635 ;; Tracked objects:
   636 ;;		On entry : 0/0
   637 ;;		On exit  : 0/0
   638 ;;		Unchanged: 0/0
   639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   640 ;;      Params:         0       3       0       0       0
   641 ;;      Locals:         1       0       0       0       0
   642 ;;      Temps:          0       0       0       0       0
   643 ;;      Totals:         1       3       0       0       0
   644 ;;Total ram usage:        4 bytes
   645 ;; Hardware stack levels used:    1
   646 ;; Hardware stack levels required when called:    3
   647 ;; This function calls:
   648 ;;		Nothing
   649 ;; This function is called by:
   650 ;;		_main
   651 ;; This function uses a non-reentrant model
   652 ;;
   653                           
   654                           
   655                           ;psect for function _spiInit
   656  01B6                     _spiInit:	
   657                           
   658                           ;incstack = 0
   659                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   660                           ;spiInit@sType stored from wreg
   661  01B6  00F4               	movwf	spiInit@sType
   662  01B7                     l1165:	
   663                           
   664                           ;SPIS.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sC
      +                          lockIdle, Spi_Transmit_Edge sTransmitEdge);SPIS.c: 13: {;SPIS.c: 14:     TRISC5 = 0;
   665  01B7  1683               	bsf	3,5	;RP0=1, select bank1
   666  01B8  1303               	bcf	3,6	;RP1=0, select bank1
   667  01B9  1287               	bcf	7,5	;volatile
   668                           
   669                           ;SPIS.c: 15:     if(sType & 0b00000100)
   670  01BA  1D74               	btfss	spiInit@sType,2
   671  01BB  29BD               	goto	u101
   672  01BC  29BE               	goto	u100
   673  01BD                     u101:	
   674  01BD  29C6               	goto	l1171
   675  01BE                     u100:	
   676  01BE                     l1167:	
   677                           
   678                           ;SPIS.c: 16:     {;SPIS.c: 17:         SSPSTAT = sTransmitEdge;
   679  01BE  1283               	bcf	3,5	;RP0=0, select bank0
   680  01BF  1303               	bcf	3,6	;RP1=0, select bank0
   681  01C0  0822               	movf	spiInit@sTransmitEdge,w
   682  01C1  1683               	bsf	3,5	;RP0=1, select bank1
   683  01C2  1303               	bcf	3,6	;RP1=0, select bank1
   684  01C3  0094               	movwf	20	;volatile
   685  01C4                     l1169:	
   686                           
   687                           ;SPIS.c: 18:         TRISC3 = 1;
   688  01C4  1587               	bsf	7,3	;volatile
   689                           
   690                           ;SPIS.c: 19:     }
   691  01C5  29CE               	goto	l123
   692  01C6                     l1171:	
   693                           
   694                           ;SPIS.c: 21:     {;SPIS.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   695  01C6  1283               	bcf	3,5	;RP0=0, select bank0
   696  01C7  1303               	bcf	3,6	;RP1=0, select bank0
   697  01C8  0820               	movf	spiInit@sDataSample,w
   698  01C9  0422               	iorwf	spiInit@sTransmitEdge,w
   699  01CA  1683               	bsf	3,5	;RP0=1, select bank1
   700  01CB  1303               	bcf	3,6	;RP1=0, select bank1
   701  01CC  0094               	movwf	20	;volatile
   702  01CD                     l1173:	
   703                           
   704                           ;SPIS.c: 23:         TRISC3 = 0;
   705  01CD  1187               	bcf	7,3	;volatile
   706  01CE                     l123:	
   707                           ;SPIS.c: 24:     }
   708                           
   709                           
   710                           ;SPIS.c: 26:     SSPCON = sType | sClockIdle;
   711  01CE  0874               	movf	spiInit@sType,w
   712  01CF  1283               	bcf	3,5	;RP0=0, select bank0
   713  01D0  1303               	bcf	3,6	;RP1=0, select bank0
   714  01D1  0421               	iorwf	spiInit@sClockIdle,w
   715  01D2  0094               	movwf	20	;volatile
   716  01D3                     l124:	
   717  01D3  0008               	return
   718  01D4                     __end_of_spiInit:	
   719                           
   720                           	psect	text2
   721  01D4                     __ptext2:	
   722 ;; *************** function _ADC_INTERRUPT *****************
   723 ;; Defined at:
   724 ;;		line 114 in file "ADC.c"
   725 ;; Parameters:    Size  Location     Type
   726 ;;		None
   727 ;; Auto vars:     Size  Location     Type
   728 ;;		None
   729 ;; Return value:  Size  Location     Type
   730 ;;                  1    wreg      void 
   731 ;; Registers used:
   732 ;;		None
   733 ;; Tracked objects:
   734 ;;		On entry : 0/0
   735 ;;		On exit  : 0/0
   736 ;;		Unchanged: 0/0
   737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   738 ;;      Params:         0       0       0       0       0
   739 ;;      Locals:         0       0       0       0       0
   740 ;;      Temps:          0       0       0       0       0
   741 ;;      Totals:         0       0       0       0       0
   742 ;;Total ram usage:        0 bytes
   743 ;; Hardware stack levels used:    1
   744 ;; Hardware stack levels required when called:    3
   745 ;; This function calls:
   746 ;;		Nothing
   747 ;; This function is called by:
   748 ;;		_main
   749 ;; This function uses a non-reentrant model
   750 ;;
   751                           
   752                           
   753                           ;psect for function _ADC_INTERRUPT
   754  01D4                     _ADC_INTERRUPT:	
   755  01D4                     l815:	
   756                           ;incstack = 0
   757                           ; Regs used in _ADC_INTERRUPT: []
   758                           
   759                           
   760                           ;ADC.c: 115:     PIR1bits.ADIF = 0;
   761  01D4  1283               	bcf	3,5	;RP0=0, select bank0
   762  01D5  1303               	bcf	3,6	;RP1=0, select bank0
   763  01D6  130C               	bcf	12,6	;volatile
   764                           
   765                           ;ADC.c: 116:     PIE1bits.ADIE = 1;
   766  01D7  1683               	bsf	3,5	;RP0=1, select bank1
   767  01D8  1303               	bcf	3,6	;RP1=0, select bank1
   768  01D9  170C               	bsf	12,6	;volatile
   769                           
   770                           ;ADC.c: 117:     INTCONbits.GIE = 1;
   771  01DA  178B               	bsf	11,7	;volatile
   772                           
   773                           ;ADC.c: 118:     INTCONbits.PEIE = 1;
   774  01DB  170B               	bsf	11,6	;volatile
   775  01DC                     l46:	
   776  01DC  0008               	return
   777  01DD                     __end_of_ADC_INTERRUPT:	
   778                           
   779                           	psect	text3
   780  0017                     __ptext3:	
   781 ;; *************** function _ADC_CONFIG *****************
   782 ;; Defined at:
   783 ;;		line 12 in file "ADC.c"
   784 ;; Parameters:    Size  Location     Type
   785 ;;  canal           1    wreg     unsigned char 
   786 ;;  justif          1    4[COMMON] unsigned char 
   787 ;; Auto vars:     Size  Location     Type
   788 ;;  canal           1    5[COMMON] unsigned char 
   789 ;; Return value:  Size  Location     Type
   790 ;;                  1    wreg      void 
   791 ;; Registers used:
   792 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   793 ;; Tracked objects:
   794 ;;		On entry : 0/0
   795 ;;		On exit  : 0/0
   796 ;;		Unchanged: 0/0
   797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   798 ;;      Params:         1       0       0       0       0
   799 ;;      Locals:         1       0       0       0       0
   800 ;;      Temps:          0       2       0       0       0
   801 ;;      Totals:         2       2       0       0       0
   802 ;;Total ram usage:        4 bytes
   803 ;; Hardware stack levels used:    1
   804 ;; Hardware stack levels required when called:    3
   805 ;; This function calls:
   806 ;;		Nothing
   807 ;; This function is called by:
   808 ;;		_main
   809 ;; This function uses a non-reentrant model
   810 ;;
   811                           
   812                           
   813                           ;psect for function _ADC_CONFIG
   814  0017                     _ADC_CONFIG:	
   815                           
   816                           ;incstack = 0
   817                           ; Regs used in _ADC_CONFIG: [wreg-fsr0h+status,2+status,0]
   818                           ;ADC_CONFIG@canal stored from wreg
   819  0017  00F5               	movwf	ADC_CONFIG@canal
   820  0018                     l1085:	
   821                           
   822                           ;ADC.c: 13:     ADCON0bits.ADON = 1;
   823  0018  1283               	bcf	3,5	;RP0=0, select bank0
   824  0019  1303               	bcf	3,6	;RP1=0, select bank0
   825  001A  141F               	bsf	31,0	;volatile
   826                           
   827                           ;ADC.c: 14:     ADCON0bits.GO = 1;
   828  001B  149F               	bsf	31,1	;volatile
   829  001C                     l1087:	
   830                           
   831                           ;ADC.c: 15:     ADCON0bits.ADCS = 1;
   832  001C  081F               	movf	31,w	;volatile
   833  001D  393F               	andlw	-193
   834  001E  3840               	iorlw	64
   835  001F  009F               	movwf	31	;volatile
   836  0020                     l1089:	
   837                           
   838                           ;ADC.c: 16:     ADCON1bits.VCFG0 = 0;
   839  0020  1683               	bsf	3,5	;RP0=1, select bank1
   840  0021  1303               	bcf	3,6	;RP1=0, select bank1
   841  0022  121F               	bcf	31,4	;volatile
   842  0023                     l1091:	
   843                           
   844                           ;ADC.c: 17:     ADCON1bits.VCFG1 = 0;
   845  0023  129F               	bcf	31,5	;volatile
   846                           
   847                           ;ADC.c: 19:     switch(canal){
   848  0024  28D9               	goto	l1151
   849  0025                     l24:	
   850                           ;ADC.c: 20:         case 0:
   851                           
   852                           
   853                           ;ADC.c: 21:             ANSELbits.ANS0 = 1;
   854  0025  1683               	bsf	3,5	;RP0=1, select bank3
   855  0026  1703               	bsf	3,6	;RP1=1, select bank3
   856  0027  1408               	bsf	8,0	;volatile
   857  0028                     l1093:	
   858                           
   859                           ;ADC.c: 22:             ADCON0bits.CHS = 0;
   860  0028  30C3               	movlw	-61
   861  0029  1283               	bcf	3,5	;RP0=0, select bank0
   862  002A  1303               	bcf	3,6	;RP1=0, select bank0
   863  002B  059F               	andwf	31,f	;volatile
   864  002C                     l1095:	
   865                           
   866                           ;ADC.c: 23:             TRISAbits.TRISA0 = 1;
   867  002C  1683               	bsf	3,5	;RP0=1, select bank1
   868  002D  1303               	bcf	3,6	;RP1=0, select bank1
   869  002E  1405               	bsf	5,0	;volatile
   870                           
   871                           ;ADC.c: 24:             break;
   872  002F  2917               	goto	l1155
   873  0030                     l26:	
   874                           ;ADC.c: 26:         case 1:
   875                           
   876                           
   877                           ;ADC.c: 27:             ANSELbits.ANS1 = 1;
   878  0030  1683               	bsf	3,5	;RP0=1, select bank3
   879  0031  1703               	bsf	3,6	;RP1=1, select bank3
   880  0032  1488               	bsf	8,1	;volatile
   881  0033                     l1097:	
   882                           
   883                           ;ADC.c: 28:             ADCON0bits.CHS = 1;
   884  0033  1283               	bcf	3,5	;RP0=0, select bank0
   885  0034  1303               	bcf	3,6	;RP1=0, select bank0
   886  0035  081F               	movf	31,w	;volatile
   887  0036  39C3               	andlw	-61
   888  0037  3804               	iorlw	4
   889  0038  009F               	movwf	31	;volatile
   890  0039                     l1099:	
   891                           
   892                           ;ADC.c: 29:             TRISAbits.TRISA1 = 1;
   893  0039  1683               	bsf	3,5	;RP0=1, select bank1
   894  003A  1303               	bcf	3,6	;RP1=0, select bank1
   895  003B  1485               	bsf	5,1	;volatile
   896                           
   897                           ;ADC.c: 30:             break;
   898  003C  2917               	goto	l1155
   899  003D                     l27:	
   900                           ;ADC.c: 32:         case 2:
   901                           
   902                           
   903                           ;ADC.c: 33:             ANSELbits.ANS2 = 1;
   904  003D  1683               	bsf	3,5	;RP0=1, select bank3
   905  003E  1703               	bsf	3,6	;RP1=1, select bank3
   906  003F  1508               	bsf	8,2	;volatile
   907  0040                     l1101:	
   908                           
   909                           ;ADC.c: 34:             ADCON0bits.CHS = 2;
   910  0040  1283               	bcf	3,5	;RP0=0, select bank0
   911  0041  1303               	bcf	3,6	;RP1=0, select bank0
   912  0042  081F               	movf	31,w	;volatile
   913  0043  39C3               	andlw	-61
   914  0044  3808               	iorlw	8
   915  0045  009F               	movwf	31	;volatile
   916  0046                     l1103:	
   917                           
   918                           ;ADC.c: 35:             TRISAbits.TRISA2 = 1;
   919  0046  1683               	bsf	3,5	;RP0=1, select bank1
   920  0047  1303               	bcf	3,6	;RP1=0, select bank1
   921  0048  1505               	bsf	5,2	;volatile
   922                           
   923                           ;ADC.c: 36:             break;
   924  0049  2917               	goto	l1155
   925  004A                     l28:	
   926                           ;ADC.c: 38:         case 3:
   927                           
   928                           
   929                           ;ADC.c: 39:             ANSELbits.ANS3 = 1;
   930  004A  1683               	bsf	3,5	;RP0=1, select bank3
   931  004B  1703               	bsf	3,6	;RP1=1, select bank3
   932  004C  1588               	bsf	8,3	;volatile
   933  004D                     l1105:	
   934                           
   935                           ;ADC.c: 40:             ADCON0bits.CHS = 3;
   936  004D  1283               	bcf	3,5	;RP0=0, select bank0
   937  004E  1303               	bcf	3,6	;RP1=0, select bank0
   938  004F  081F               	movf	31,w	;volatile
   939  0050  39C3               	andlw	-61
   940  0051  380C               	iorlw	12
   941  0052  009F               	movwf	31	;volatile
   942  0053                     l1107:	
   943                           
   944                           ;ADC.c: 41:             TRISAbits.TRISA3 = 1;
   945  0053  1683               	bsf	3,5	;RP0=1, select bank1
   946  0054  1303               	bcf	3,6	;RP1=0, select bank1
   947  0055  1585               	bsf	5,3	;volatile
   948                           
   949                           ;ADC.c: 42:             break;
   950  0056  2917               	goto	l1155
   951  0057                     l29:	
   952                           ;ADC.c: 44:         case 4:
   953                           
   954                           
   955                           ;ADC.c: 45:             ANSELbits.ANS4 = 1;
   956  0057  1683               	bsf	3,5	;RP0=1, select bank3
   957  0058  1703               	bsf	3,6	;RP1=1, select bank3
   958  0059  1608               	bsf	8,4	;volatile
   959  005A                     l1109:	
   960                           
   961                           ;ADC.c: 46:             ADCON0bits.CHS = 4;
   962  005A  1283               	bcf	3,5	;RP0=0, select bank0
   963  005B  1303               	bcf	3,6	;RP1=0, select bank0
   964  005C  081F               	movf	31,w	;volatile
   965  005D  39C3               	andlw	-61
   966  005E  3810               	iorlw	16
   967  005F  009F               	movwf	31	;volatile
   968  0060                     l1111:	
   969                           
   970                           ;ADC.c: 47:             TRISAbits.TRISA5 = 1;
   971  0060  1683               	bsf	3,5	;RP0=1, select bank1
   972  0061  1303               	bcf	3,6	;RP1=0, select bank1
   973  0062  1685               	bsf	5,5	;volatile
   974                           
   975                           ;ADC.c: 48:             break;
   976  0063  2917               	goto	l1155
   977  0064                     l30:	
   978                           ;ADC.c: 50:         case 5:
   979                           
   980                           
   981                           ;ADC.c: 51:             ANSELbits.ANS5 = 1;
   982  0064  1683               	bsf	3,5	;RP0=1, select bank3
   983  0065  1703               	bsf	3,6	;RP1=1, select bank3
   984  0066  1688               	bsf	8,5	;volatile
   985  0067                     l1113:	
   986                           
   987                           ;ADC.c: 52:             ADCON0bits.CHS = 5;
   988  0067  1283               	bcf	3,5	;RP0=0, select bank0
   989  0068  1303               	bcf	3,6	;RP1=0, select bank0
   990  0069  081F               	movf	31,w	;volatile
   991  006A  39C3               	andlw	-61
   992  006B  3814               	iorlw	20
   993  006C  009F               	movwf	31	;volatile
   994  006D                     l1115:	
   995                           
   996                           ;ADC.c: 53:             TRISEbits.TRISE0 = 1;
   997  006D  1683               	bsf	3,5	;RP0=1, select bank1
   998  006E  1303               	bcf	3,6	;RP1=0, select bank1
   999  006F  1409               	bsf	9,0	;volatile
  1000                           
  1001                           ;ADC.c: 54:             break;
  1002  0070  2917               	goto	l1155
  1003  0071                     l31:	
  1004                           ;ADC.c: 56:         case 6:
  1005                           
  1006                           
  1007                           ;ADC.c: 57:             ANSELbits.ANS6 = 1;
  1008  0071  1683               	bsf	3,5	;RP0=1, select bank3
  1009  0072  1703               	bsf	3,6	;RP1=1, select bank3
  1010  0073  1708               	bsf	8,6	;volatile
  1011  0074                     l1117:	
  1012                           
  1013                           ;ADC.c: 58:             ADCON0bits.CHS = 6;
  1014  0074  1283               	bcf	3,5	;RP0=0, select bank0
  1015  0075  1303               	bcf	3,6	;RP1=0, select bank0
  1016  0076  081F               	movf	31,w	;volatile
  1017  0077  39C3               	andlw	-61
  1018  0078  3818               	iorlw	24
  1019  0079  009F               	movwf	31	;volatile
  1020  007A                     l1119:	
  1021                           
  1022                           ;ADC.c: 59:             TRISEbits.TRISE1 = 1;
  1023  007A  1683               	bsf	3,5	;RP0=1, select bank1
  1024  007B  1303               	bcf	3,6	;RP1=0, select bank1
  1025  007C  1489               	bsf	9,1	;volatile
  1026                           
  1027                           ;ADC.c: 60:             break;
  1028  007D  2917               	goto	l1155
  1029  007E                     l32:	
  1030                           ;ADC.c: 62:         case 7:
  1031                           
  1032                           
  1033                           ;ADC.c: 63:             ANSELbits.ANS7 = 1;
  1034  007E  1683               	bsf	3,5	;RP0=1, select bank3
  1035  007F  1703               	bsf	3,6	;RP1=1, select bank3
  1036  0080  1788               	bsf	8,7	;volatile
  1037  0081                     l1121:	
  1038                           
  1039                           ;ADC.c: 64:             ADCON0bits.CHS = 7;
  1040  0081  1283               	bcf	3,5	;RP0=0, select bank0
  1041  0082  1303               	bcf	3,6	;RP1=0, select bank0
  1042  0083  081F               	movf	31,w	;volatile
  1043  0084  39C3               	andlw	-61
  1044  0085  381C               	iorlw	28
  1045  0086  009F               	movwf	31	;volatile
  1046  0087                     l1123:	
  1047                           
  1048                           ;ADC.c: 65:             TRISEbits.TRISE2 = 1;
  1049  0087  1683               	bsf	3,5	;RP0=1, select bank1
  1050  0088  1303               	bcf	3,6	;RP1=0, select bank1
  1051  0089  1509               	bsf	9,2	;volatile
  1052                           
  1053                           ;ADC.c: 66:             break;
  1054  008A  2917               	goto	l1155
  1055  008B                     l33:	
  1056                           ;ADC.c: 68:         case 8:
  1057                           
  1058                           
  1059                           ;ADC.c: 69:             ANSELHbits.ANS8 = 1;
  1060  008B  1683               	bsf	3,5	;RP0=1, select bank3
  1061  008C  1703               	bsf	3,6	;RP1=1, select bank3
  1062  008D  1409               	bsf	9,0	;volatile
  1063  008E                     l1125:	
  1064                           
  1065                           ;ADC.c: 70:             ADCON0bits.CHS = 8;
  1066  008E  1283               	bcf	3,5	;RP0=0, select bank0
  1067  008F  1303               	bcf	3,6	;RP1=0, select bank0
  1068  0090  081F               	movf	31,w	;volatile
  1069  0091  39C3               	andlw	-61
  1070  0092  3820               	iorlw	32
  1071  0093  009F               	movwf	31	;volatile
  1072  0094                     l1127:	
  1073                           
  1074                           ;ADC.c: 71:             TRISBbits.TRISB2 = 1;
  1075  0094  1683               	bsf	3,5	;RP0=1, select bank1
  1076  0095  1303               	bcf	3,6	;RP1=0, select bank1
  1077  0096  1506               	bsf	6,2	;volatile
  1078                           
  1079                           ;ADC.c: 72:             break;
  1080  0097  2917               	goto	l1155
  1081  0098                     l34:	
  1082                           ;ADC.c: 74:         case 9:
  1083                           
  1084                           
  1085                           ;ADC.c: 75:             ANSELHbits.ANS9 = 1;
  1086  0098  1683               	bsf	3,5	;RP0=1, select bank3
  1087  0099  1703               	bsf	3,6	;RP1=1, select bank3
  1088  009A  1489               	bsf	9,1	;volatile
  1089  009B                     l1129:	
  1090                           
  1091                           ;ADC.c: 76:             ADCON0bits.CHS = 9;
  1092  009B  1283               	bcf	3,5	;RP0=0, select bank0
  1093  009C  1303               	bcf	3,6	;RP1=0, select bank0
  1094  009D  081F               	movf	31,w	;volatile
  1095  009E  39C3               	andlw	-61
  1096  009F  3824               	iorlw	36
  1097  00A0  009F               	movwf	31	;volatile
  1098  00A1                     l1131:	
  1099                           
  1100                           ;ADC.c: 77:             TRISBbits.TRISB3 = 1;
  1101  00A1  1683               	bsf	3,5	;RP0=1, select bank1
  1102  00A2  1303               	bcf	3,6	;RP1=0, select bank1
  1103  00A3  1586               	bsf	6,3	;volatile
  1104                           
  1105                           ;ADC.c: 78:             break;
  1106  00A4  2917               	goto	l1155
  1107  00A5                     l35:	
  1108                           ;ADC.c: 80:         case 10:
  1109                           
  1110                           
  1111                           ;ADC.c: 81:             ANSELHbits.ANS10 = 1;
  1112  00A5  1683               	bsf	3,5	;RP0=1, select bank3
  1113  00A6  1703               	bsf	3,6	;RP1=1, select bank3
  1114  00A7  1509               	bsf	9,2	;volatile
  1115  00A8                     l1133:	
  1116                           
  1117                           ;ADC.c: 82:             ADCON0bits.CHS = 10;
  1118  00A8  1283               	bcf	3,5	;RP0=0, select bank0
  1119  00A9  1303               	bcf	3,6	;RP1=0, select bank0
  1120  00AA  081F               	movf	31,w	;volatile
  1121  00AB  39C3               	andlw	-61
  1122  00AC  3828               	iorlw	40
  1123  00AD  009F               	movwf	31	;volatile
  1124  00AE                     l1135:	
  1125                           
  1126                           ;ADC.c: 83:             TRISBbits.TRISB1 = 1;
  1127  00AE  1683               	bsf	3,5	;RP0=1, select bank1
  1128  00AF  1303               	bcf	3,6	;RP1=0, select bank1
  1129  00B0  1486               	bsf	6,1	;volatile
  1130                           
  1131                           ;ADC.c: 84:             break;
  1132  00B1  2917               	goto	l1155
  1133  00B2                     l36:	
  1134                           ;ADC.c: 86:         case 11:
  1135                           
  1136                           
  1137                           ;ADC.c: 87:             ANSELHbits.ANS11 = 1;
  1138  00B2  1683               	bsf	3,5	;RP0=1, select bank3
  1139  00B3  1703               	bsf	3,6	;RP1=1, select bank3
  1140  00B4  1589               	bsf	9,3	;volatile
  1141  00B5                     l1137:	
  1142                           
  1143                           ;ADC.c: 88:             ADCON0bits.CHS = 11;
  1144  00B5  1283               	bcf	3,5	;RP0=0, select bank0
  1145  00B6  1303               	bcf	3,6	;RP1=0, select bank0
  1146  00B7  081F               	movf	31,w	;volatile
  1147  00B8  39C3               	andlw	-61
  1148  00B9  382C               	iorlw	44
  1149  00BA  009F               	movwf	31	;volatile
  1150  00BB                     l1139:	
  1151                           
  1152                           ;ADC.c: 89:             TRISBbits.TRISB4 = 1;
  1153  00BB  1683               	bsf	3,5	;RP0=1, select bank1
  1154  00BC  1303               	bcf	3,6	;RP1=0, select bank1
  1155  00BD  1606               	bsf	6,4	;volatile
  1156                           
  1157                           ;ADC.c: 90:             break;
  1158  00BE  2917               	goto	l1155
  1159  00BF                     l37:	
  1160                           ;ADC.c: 92:         case 12:
  1161                           
  1162                           
  1163                           ;ADC.c: 93:             ANSELHbits.ANS12 = 1;
  1164  00BF  1683               	bsf	3,5	;RP0=1, select bank3
  1165  00C0  1703               	bsf	3,6	;RP1=1, select bank3
  1166  00C1  1609               	bsf	9,4	;volatile
  1167  00C2                     l1141:	
  1168                           
  1169                           ;ADC.c: 94:             ADCON0bits.CHS = 12;
  1170  00C2  1283               	bcf	3,5	;RP0=0, select bank0
  1171  00C3  1303               	bcf	3,6	;RP1=0, select bank0
  1172  00C4  081F               	movf	31,w	;volatile
  1173  00C5  39C3               	andlw	-61
  1174  00C6  3830               	iorlw	48
  1175  00C7  009F               	movwf	31	;volatile
  1176  00C8                     l1143:	
  1177                           
  1178                           ;ADC.c: 95:             TRISBbits.TRISB0 = 1;
  1179  00C8  1683               	bsf	3,5	;RP0=1, select bank1
  1180  00C9  1303               	bcf	3,6	;RP1=0, select bank1
  1181  00CA  1406               	bsf	6,0	;volatile
  1182                           
  1183                           ;ADC.c: 96:             break;
  1184  00CB  2917               	goto	l1155
  1185  00CC                     l38:	
  1186                           ;ADC.c: 98:         case 13:
  1187                           
  1188                           
  1189                           ;ADC.c: 99:             ANSELHbits.ANS13 = 1;
  1190  00CC  1683               	bsf	3,5	;RP0=1, select bank3
  1191  00CD  1703               	bsf	3,6	;RP1=1, select bank3
  1192  00CE  1689               	bsf	9,5	;volatile
  1193  00CF                     l1145:	
  1194                           
  1195                           ;ADC.c: 100:             ADCON0bits.CHS = 13;
  1196  00CF  1283               	bcf	3,5	;RP0=0, select bank0
  1197  00D0  1303               	bcf	3,6	;RP1=0, select bank0
  1198  00D1  081F               	movf	31,w	;volatile
  1199  00D2  39C3               	andlw	-61
  1200  00D3  3834               	iorlw	52
  1201  00D4  009F               	movwf	31	;volatile
  1202  00D5                     l1147:	
  1203                           
  1204                           ;ADC.c: 101:             TRISBbits.TRISB5 = 1;
  1205  00D5  1683               	bsf	3,5	;RP0=1, select bank1
  1206  00D6  1303               	bcf	3,6	;RP1=0, select bank1
  1207  00D7  1686               	bsf	6,5	;volatile
  1208                           
  1209                           ;ADC.c: 102:             break;
  1210  00D8  2917               	goto	l1155
  1211  00D9                     l1151:	
  1212  00D9  0875               	movf	ADC_CONFIG@canal,w
  1213  00DA  1283               	bcf	3,5	;RP0=0, select bank0
  1214  00DB  1303               	bcf	3,6	;RP1=0, select bank0
  1215  00DC  00A0               	movwf	??_ADC_CONFIG
  1216  00DD  01A1               	clrf	??_ADC_CONFIG+1
  1217                           
  1218                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1219                           ; Switch size 1, requested type "simple"
  1220                           ; Number of cases is 1, Range of values is 0 to 0
  1221                           ; switch strategies available:
  1222                           ; Name         Instructions Cycles
  1223                           ; simple_byte            4     3 (average)
  1224                           ; direct_byte           11     8 (fixed)
  1225                           ; jumptable            260     6 (fixed)
  1226                           ;	Chosen strategy is simple_byte
  1227  00DE  0821               	movf	??_ADC_CONFIG+1,w
  1228  00DF  3A00               	xorlw	0	; case 0
  1229  00E0  1903               	skipnz
  1230  00E1  28E3               	goto	l1233
  1231  00E2  2917               	goto	l1155
  1232  00E3                     l1233:	
  1233                           
  1234                           ; Switch size 1, requested type "simple"
  1235                           ; Number of cases is 14, Range of values is 0 to 13
  1236                           ; switch strategies available:
  1237                           ; Name         Instructions Cycles
  1238                           ; simple_byte           43    22 (average)
  1239                           ; direct_byte           50     8 (fixed)
  1240                           ; jumptable            260     6 (fixed)
  1241                           ;	Chosen strategy is simple_byte
  1242  00E3  0820               	movf	??_ADC_CONFIG,w
  1243  00E4  3A00               	xorlw	0	; case 0
  1244  00E5  1903               	skipnz
  1245  00E6  2825               	goto	l24
  1246  00E7  3A01               	xorlw	1	; case 1
  1247  00E8  1903               	skipnz
  1248  00E9  2830               	goto	l26
  1249  00EA  3A03               	xorlw	3	; case 2
  1250  00EB  1903               	skipnz
  1251  00EC  283D               	goto	l27
  1252  00ED  3A01               	xorlw	1	; case 3
  1253  00EE  1903               	skipnz
  1254  00EF  284A               	goto	l28
  1255  00F0  3A07               	xorlw	7	; case 4
  1256  00F1  1903               	skipnz
  1257  00F2  2857               	goto	l29
  1258  00F3  3A01               	xorlw	1	; case 5
  1259  00F4  1903               	skipnz
  1260  00F5  2864               	goto	l30
  1261  00F6  3A03               	xorlw	3	; case 6
  1262  00F7  1903               	skipnz
  1263  00F8  2871               	goto	l31
  1264  00F9  3A01               	xorlw	1	; case 7
  1265  00FA  1903               	skipnz
  1266  00FB  287E               	goto	l32
  1267  00FC  3A0F               	xorlw	15	; case 8
  1268  00FD  1903               	skipnz
  1269  00FE  288B               	goto	l33
  1270  00FF  3A01               	xorlw	1	; case 9
  1271  0100  1903               	skipnz
  1272  0101  2898               	goto	l34
  1273  0102  3A03               	xorlw	3	; case 10
  1274  0103  1903               	skipnz
  1275  0104  28A5               	goto	l35
  1276  0105  3A01               	xorlw	1	; case 11
  1277  0106  1903               	skipnz
  1278  0107  28B2               	goto	l36
  1279  0108  3A07               	xorlw	7	; case 12
  1280  0109  1903               	skipnz
  1281  010A  28BF               	goto	l37
  1282  010B  3A01               	xorlw	1	; case 13
  1283  010C  1903               	skipnz
  1284  010D  28CC               	goto	l38
  1285  010E  2917               	goto	l1155
  1286  010F                     l40:	
  1287                           ;ADC.c: 105:         case 0:
  1288                           
  1289                           
  1290                           ;ADC.c: 106:             ADCON1bits.ADFM = 0;
  1291  010F  1683               	bsf	3,5	;RP0=1, select bank1
  1292  0110  1303               	bcf	3,6	;RP1=0, select bank1
  1293  0111  139F               	bcf	31,7	;volatile
  1294                           
  1295                           ;ADC.c: 107:             break;
  1296  0112  2928               	goto	l43
  1297  0113                     l42:	
  1298                           ;ADC.c: 108:         case 1:
  1299                           
  1300                           
  1301                           ;ADC.c: 109:             ADCON1bits.ADFM = 1;
  1302  0113  1683               	bsf	3,5	;RP0=1, select bank1
  1303  0114  1303               	bcf	3,6	;RP1=0, select bank1
  1304  0115  179F               	bsf	31,7	;volatile
  1305                           
  1306                           ;ADC.c: 110:             break;
  1307  0116  2928               	goto	l43
  1308  0117                     l1155:	
  1309  0117  0874               	movf	ADC_CONFIG@justif,w
  1310  0118  1283               	bcf	3,5	;RP0=0, select bank0
  1311  0119  00A0               	movwf	??_ADC_CONFIG
  1312  011A  01A1               	clrf	??_ADC_CONFIG+1
  1313                           
  1314                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1315                           ; Switch size 1, requested type "simple"
  1316                           ; Number of cases is 1, Range of values is 0 to 0
  1317                           ; switch strategies available:
  1318                           ; Name         Instructions Cycles
  1319                           ; simple_byte            4     3 (average)
  1320                           ; direct_byte           11     8 (fixed)
  1321                           ; jumptable            260     6 (fixed)
  1322                           ;	Chosen strategy is simple_byte
  1323  011B  0821               	movf	??_ADC_CONFIG+1,w
  1324  011C  3A00               	xorlw	0	; case 0
  1325  011D  1903               	skipnz
  1326  011E  2920               	goto	l1235
  1327  011F  2928               	goto	l43
  1328  0120                     l1235:	
  1329                           
  1330                           ; Switch size 1, requested type "simple"
  1331                           ; Number of cases is 2, Range of values is 0 to 1
  1332                           ; switch strategies available:
  1333                           ; Name         Instructions Cycles
  1334                           ; simple_byte            7     4 (average)
  1335                           ; direct_byte           14     8 (fixed)
  1336                           ; jumptable            260     6 (fixed)
  1337                           ;	Chosen strategy is simple_byte
  1338  0120  0820               	movf	??_ADC_CONFIG,w
  1339  0121  3A00               	xorlw	0	; case 0
  1340  0122  1903               	skipnz
  1341  0123  290F               	goto	l40
  1342  0124  3A01               	xorlw	1	; case 1
  1343  0125  1903               	skipnz
  1344  0126  2913               	goto	l42
  1345  0127  2928               	goto	l43
  1346  0128                     l43:	
  1347  0128  0008               	return
  1348  0129                     __end_of_ADC_CONFIG:	
  1349                           
  1350                           	psect	text4
  1351  0129                     __ptext4:	
  1352 ;; *************** function _ISR *****************
  1353 ;; Defined at:
  1354 ;;		line 36 in file "slave.c"
  1355 ;; Parameters:    Size  Location     Type
  1356 ;;		None
  1357 ;; Auto vars:     Size  Location     Type
  1358 ;;		None
  1359 ;; Return value:  Size  Location     Type
  1360 ;;                  1    wreg      void 
  1361 ;; Registers used:
  1362 ;;		wreg, status,2, status,0, pclath, cstack
  1363 ;; Tracked objects:
  1364 ;;		On entry : 0/0
  1365 ;;		On exit  : 0/0
  1366 ;;		Unchanged: 0/0
  1367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1368 ;;      Params:         0       0       0       0       0
  1369 ;;      Locals:         0       0       0       0       0
  1370 ;;      Temps:          3       0       0       0       0
  1371 ;;      Totals:         3       0       0       0       0
  1372 ;;Total ram usage:        3 bytes
  1373 ;; Hardware stack levels used:    1
  1374 ;; Hardware stack levels required when called:    2
  1375 ;; This function calls:
  1376 ;;		_spiRead
  1377 ;;		_spiWrite
  1378 ;; This function is called by:
  1379 ;;		Interrupt level 1
  1380 ;; This function uses a non-reentrant model
  1381 ;;
  1382                           
  1383                           
  1384                           ;psect for function _ISR
  1385  0129                     _ISR:	
  1386  0129                     i1l835:	
  1387                           
  1388                           ;slave.c: 37:     if(PIR1bits.ADIF == 1){
  1389  0129  1283               	bcf	3,5	;RP0=0, select bank0
  1390  012A  1303               	bcf	3,6	;RP1=0, select bank0
  1391  012B  1F0C               	btfss	12,6	;volatile
  1392  012C  292E               	goto	u3_21
  1393  012D  292F               	goto	u3_20
  1394  012E                     u3_21:	
  1395  012E  2950               	goto	i1l859
  1396  012F                     u3_20:	
  1397  012F                     i1l837:	
  1398                           
  1399                           ;slave.c: 38:         if(canal == 0){
  1400  012F  0877               	movf	_canal,w
  1401  0130  1D03               	btfss	3,2
  1402  0131  2933               	goto	u4_21
  1403  0132  2934               	goto	u4_20
  1404  0133                     u4_21:	
  1405  0133  2940               	goto	i1l847
  1406  0134                     u4_20:	
  1407  0134                     i1l839:	
  1408                           
  1409                           ;slave.c: 39:             ADCON0bits.CHS = 10;
  1410  0134  081F               	movf	31,w	;volatile
  1411  0135  39C3               	andlw	-61
  1412  0136  3828               	iorlw	40
  1413  0137  009F               	movwf	31	;volatile
  1414  0138                     i1l841:	
  1415                           
  1416                           ;slave.c: 40:             adc1 = ADRESH;
  1417  0138  081E               	movf	30,w	;volatile
  1418  0139  00F1               	movwf	??_ISR
  1419  013A  0871               	movf	??_ISR,w
  1420  013B  00F9               	movwf	_adc1
  1421  013C                     i1l843:	
  1422                           
  1423                           ;slave.c: 41:             canal = 1;
  1424  013C  01F7               	clrf	_canal
  1425  013D  0AF7               	incf	_canal,f
  1426  013E                     i1l845:	
  1427                           
  1428                           ;slave.c: 42:             ADIF = 0;
  1429  013E  130C               	bcf	12,6	;volatile
  1430                           
  1431                           ;slave.c: 43:         }
  1432  013F  294F               	goto	i1l857
  1433  0140                     i1l847:	
  1434  0140  0377               	decf	_canal,w
  1435  0141  1D03               	btfss	3,2
  1436  0142  2944               	goto	u5_21
  1437  0143  2945               	goto	u5_20
  1438  0144                     u5_21:	
  1439  0144  294F               	goto	i1l857
  1440  0145                     u5_20:	
  1441  0145                     i1l849:	
  1442                           
  1443                           ;slave.c: 45:             ADCON0bits.CHS = 12;
  1444  0145  081F               	movf	31,w	;volatile
  1445  0146  39C3               	andlw	-61
  1446  0147  3830               	iorlw	48
  1447  0148  009F               	movwf	31	;volatile
  1448  0149                     i1l851:	
  1449                           
  1450                           ;slave.c: 46:             adc2 = ADRESH;
  1451  0149  081E               	movf	30,w	;volatile
  1452  014A  00F1               	movwf	??_ISR
  1453  014B  0871               	movf	??_ISR,w
  1454  014C  00F8               	movwf	_adc2
  1455  014D                     i1l853:	
  1456                           
  1457                           ;slave.c: 47:             canal = 0;
  1458  014D  01F7               	clrf	_canal
  1459  014E  293E               	goto	i1l845
  1460  014F                     i1l857:	
  1461                           
  1462                           ;slave.c: 50:         ADCON0bits.GO = 1;
  1463  014F  149F               	bsf	31,1	;volatile
  1464  0150                     i1l859:	
  1465                           
  1466                           ;slave.c: 53:     if(SSPIF==1){
  1467  0150  1D8C               	btfss	12,3	;volatile
  1468  0151  2953               	goto	u6_21
  1469  0152  2954               	goto	u6_20
  1470  0153                     u6_21:	
  1471  0153  2977               	goto	i1l99
  1472  0154                     u6_20:	
  1473  0154                     i1l861:	
  1474                           
  1475                           ;slave.c: 54:         opcion = spiRead();
  1476  0154  120A  118A  21DD  120A  118A  	fcall	_spiRead
  1477  0159  00F1               	movwf	??_ISR
  1478  015A  0871               	movf	??_ISR,w
  1479  015B  00F6               	movwf	_opcion
  1480  015C                     i1l863:	
  1481                           
  1482                           ;slave.c: 55:         if(opcion == 1){
  1483  015C  0376               	decf	_opcion,w
  1484  015D  1D03               	btfss	3,2
  1485  015E  2960               	goto	u7_21
  1486  015F  2961               	goto	u7_20
  1487  0160                     u7_21:	
  1488  0160  2968               	goto	i1l867
  1489  0161                     u7_20:	
  1490  0161                     i1l865:	
  1491                           
  1492                           ;slave.c: 56:             spiWrite(adc1);
  1493  0161  0879               	movf	_adc1,w
  1494  0162  120A  118A  21ED  120A  118A  	fcall	_spiWrite
  1495                           
  1496                           ;slave.c: 57:         }
  1497  0167  2974               	goto	i1l871
  1498  0168                     i1l867:	
  1499  0168  3002               	movlw	2
  1500  0169  0676               	xorwf	_opcion,w
  1501  016A  1D03               	btfss	3,2
  1502  016B  296D               	goto	u8_21
  1503  016C  296E               	goto	u8_20
  1504  016D                     u8_21:	
  1505  016D  2974               	goto	i1l871
  1506  016E                     u8_20:	
  1507  016E                     i1l869:	
  1508                           
  1509                           ;slave.c: 59:             spiWrite(adc2);
  1510  016E  0878               	movf	_adc2,w
  1511  016F  120A  118A  21ED  120A  118A  	fcall	_spiWrite
  1512  0174                     i1l871:	
  1513                           
  1514                           ;slave.c: 61:         SSPIF = 0;
  1515  0174  1283               	bcf	3,5	;RP0=0, select bank0
  1516  0175  1303               	bcf	3,6	;RP1=0, select bank0
  1517  0176  118C               	bcf	12,3	;volatile
  1518  0177                     i1l99:	
  1519  0177  0873               	movf	??_ISR+2,w
  1520  0178  008A               	movwf	10
  1521  0179  0E72               	swapf	(??_ISR+1)^(0+4294967168),w
  1522  017A  0083               	movwf	3
  1523  017B  0EFE               	swapf	btemp,f
  1524  017C  0E7E               	swapf	btemp,w
  1525  017D  0009               	retfie
  1526  017E                     __end_of_ISR:	
  1527                           
  1528                           	psect	intentry
  1529  0004                     __pintentry:	
  1530                           ;incstack = 0
  1531                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  1532                           
  1533  0004                     interrupt_function:	
  1534  007E                     saved_w	set	btemp
  1535  0004  00FE               	movwf	btemp
  1536  0005  0E03               	swapf	3,w
  1537  0006  00F2               	movwf	??_ISR+1
  1538  0007  080A               	movf	10,w
  1539  0008  00F3               	movwf	??_ISR+2
  1540  0009  120A  118A  2929   	ljmp	_ISR
  1541                           
  1542                           	psect	text5
  1543  01ED                     __ptext5:	
  1544 ;; *************** function _spiWrite *****************
  1545 ;; Defined at:
  1546 ;;		line 34 in file "SPIS.c"
  1547 ;; Parameters:    Size  Location     Type
  1548 ;;  dat             1    wreg     unsigned char 
  1549 ;; Auto vars:     Size  Location     Type
  1550 ;;  dat             1    0[COMMON] unsigned char 
  1551 ;; Return value:  Size  Location     Type
  1552 ;;                  1    wreg      void 
  1553 ;; Registers used:
  1554 ;;		wreg
  1555 ;; Tracked objects:
  1556 ;;		On entry : 0/0
  1557 ;;		On exit  : 0/0
  1558 ;;		Unchanged: 0/0
  1559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1560 ;;      Params:         0       0       0       0       0
  1561 ;;      Locals:         1       0       0       0       0
  1562 ;;      Temps:          0       0       0       0       0
  1563 ;;      Totals:         1       0       0       0       0
  1564 ;;Total ram usage:        1 bytes
  1565 ;; Hardware stack levels used:    1
  1566 ;; This function calls:
  1567 ;;		Nothing
  1568 ;; This function is called by:
  1569 ;;		_ISR
  1570 ;; This function uses a non-reentrant model
  1571 ;;
  1572                           
  1573                           
  1574                           ;psect for function _spiWrite
  1575  01ED                     _spiWrite:	
  1576                           
  1577                           ;incstack = 0
  1578                           ; Regs used in _spiWrite: [wreg]
  1579                           ;spiWrite@dat stored from wreg
  1580  01ED  00F0               	movwf	spiWrite@dat
  1581  01EE                     i1l823:	
  1582                           
  1583                           ;SPIS.c: 34: void spiWrite(char dat);SPIS.c: 35: {;SPIS.c: 36:     SSPBUF = dat;
  1584  01EE  0870               	movf	spiWrite@dat,w
  1585  01EF  1283               	bcf	3,5	;RP0=0, select bank0
  1586  01F0  1303               	bcf	3,6	;RP1=0, select bank0
  1587  01F1  0093               	movwf	19	;volatile
  1588  01F2                     i1l133:	
  1589  01F2  0008               	return
  1590  01F3                     __end_of_spiWrite:	
  1591                           
  1592                           	psect	text6
  1593  01DD                     __ptext6:	
  1594 ;; *************** function _spiRead *****************
  1595 ;; Defined at:
  1596 ;;		line 47 in file "SPIS.c"
  1597 ;; Parameters:    Size  Location     Type
  1598 ;;		None
  1599 ;; Auto vars:     Size  Location     Type
  1600 ;;		None
  1601 ;; Return value:  Size  Location     Type
  1602 ;;                  1    wreg      unsigned char 
  1603 ;; Registers used:
  1604 ;;		wreg, status,2, status,0, pclath, cstack
  1605 ;; Tracked objects:
  1606 ;;		On entry : 0/0
  1607 ;;		On exit  : 0/0
  1608 ;;		Unchanged: 0/0
  1609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1610 ;;      Params:         0       0       0       0       0
  1611 ;;      Locals:         0       0       0       0       0
  1612 ;;      Temps:          0       0       0       0       0
  1613 ;;      Totals:         0       0       0       0       0
  1614 ;;Total ram usage:        0 bytes
  1615 ;; Hardware stack levels used:    1
  1616 ;; Hardware stack levels required when called:    1
  1617 ;; This function calls:
  1618 ;;		_spiReceiveWait
  1619 ;; This function is called by:
  1620 ;;		_ISR
  1621 ;; This function uses a non-reentrant model
  1622 ;;
  1623                           
  1624                           
  1625                           ;psect for function _spiRead
  1626  01DD                     _spiRead:	
  1627  01DD                     i1l817:	
  1628                           ;incstack = 0
  1629                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1630                           
  1631                           
  1632                           ;SPIS.c: 49:     spiReceiveWait();
  1633  01DD  120A  118A  21E6  120A  118A  	fcall	_spiReceiveWait
  1634  01E2                     i1l819:	
  1635                           
  1636                           ;SPIS.c: 50:     return(SSPBUF);
  1637  01E2  1283               	bcf	3,5	;RP0=0, select bank0
  1638  01E3  1303               	bcf	3,6	;RP1=0, select bank0
  1639  01E4  0813               	movf	19,w	;volatile
  1640  01E5                     i1l141:	
  1641  01E5  0008               	return
  1642  01E6                     __end_of_spiRead:	
  1643                           
  1644                           	psect	text7
  1645  01E6                     __ptext7:	
  1646 ;; *************** function _spiReceiveWait *****************
  1647 ;; Defined at:
  1648 ;;		line 29 in file "SPIS.c"
  1649 ;; Parameters:    Size  Location     Type
  1650 ;;		None
  1651 ;; Auto vars:     Size  Location     Type
  1652 ;;		None
  1653 ;; Return value:  Size  Location     Type
  1654 ;;                  1    wreg      void 
  1655 ;; Registers used:
  1656 ;;		None
  1657 ;; Tracked objects:
  1658 ;;		On entry : 0/0
  1659 ;;		On exit  : 0/0
  1660 ;;		Unchanged: 0/0
  1661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1662 ;;      Params:         0       0       0       0       0
  1663 ;;      Locals:         0       0       0       0       0
  1664 ;;      Temps:          0       0       0       0       0
  1665 ;;      Totals:         0       0       0       0       0
  1666 ;;Total ram usage:        0 bytes
  1667 ;; Hardware stack levels used:    1
  1668 ;; This function calls:
  1669 ;;		Nothing
  1670 ;; This function is called by:
  1671 ;;		_spiRead
  1672 ;; This function uses a non-reentrant model
  1673 ;;
  1674                           
  1675                           
  1676                           ;psect for function _spiReceiveWait
  1677  01E6                     _spiReceiveWait:	
  1678  01E6                     i1l733:	
  1679                           ;incstack = 0
  1680                           ; Regs used in _spiReceiveWait: []
  1681                           
  1682  01E6                     i1l127:	
  1683                           ;SPIS.c: 31:     while ( !SSPSTATbits.BF );
  1684                           
  1685  01E6  1683               	bsf	3,5	;RP0=1, select bank1
  1686  01E7  1303               	bcf	3,6	;RP1=0, select bank1
  1687  01E8  1C14               	btfss	20,0	;volatile
  1688  01E9  29EB               	goto	u1_21
  1689  01EA  29EC               	goto	u1_20
  1690  01EB                     u1_21:	
  1691  01EB  29E6               	goto	i1l127
  1692  01EC                     u1_20:	
  1693  01EC                     i1l130:	
  1694  01EC  0008               	return
  1695  01ED                     __end_of_spiReceiveWait:	
  1696  007E                     btemp	set	126	;btemp
  1697  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80      3       3
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ADC_CONFIG

Critical Paths under _ISR in COMMON

    _ISR->_spiWrite

Critical Paths under _main in BANK0

    _main->_spiInit

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     698
                         _ADC_CONFIG
                      _ADC_INTERRUPT
                            _spiInit
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     456
                                              4 COMMON     1     1      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (1) _ADC_INTERRUPT                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_CONFIG                                           4     3      1     242
                                              4 COMMON     2     1      1
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  3     3      0      15
                                              1 COMMON     3     3      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (3) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (4) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_CONFIG
   _ADC_INTERRUPT
   _spiInit

 _ISR (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      3       3       5        3.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       D      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Feb 15 01:13:11 2020

     __size_of_ADC_CONFIG 0112               __CFG_CP$OFF 0000           ADC_CONFIG@canal 0075  
             _SSPSTATbits 0094                        l30 0064                        l31 0071  
                      l40 010F                        l32 007E                        l24 0025  
                      l33 008B                        l42 0113                        l34 0098  
                      l26 0030                        l43 0128                        l35 00A5  
                      l27 003D                        l36 00B2                        l28 004A  
                      l37 00BF                        l29 0057                        l38 00CC  
                      l46 01DC                       l123 01CE                       l124 01D3  
                     l815 01D4                       u100 01BE                       u101 01BD  
            __CFG_CPD$OFF 0000                       _ISR 0129          ADC_CONFIG@justif 0074  
            __CFG_LVP$OFF 0000                      ?_ISR 0070                      l1101 0040  
                    l1111 0060                      l1103 0046                      l1121 0081  
                    l1113 0067                      l1105 004D                      l1131 00A1  
                    l1123 0087                      l1115 006D                      l1107 0053  
                    l1141 00C2                      l1133 00A8                      l1125 008E  
                    l1117 0074                      l1109 005A                      l1143 00C8  
                    l1135 00AE                      l1127 0094                      l1119 007A  
                    l1151 00D9                      l1233 00E3                      l1145 00CF  
                    l1137 00B5                      l1129 009B                      l1235 0120  
                    l1147 00D5                      l1139 00BB                      l1155 0117  
                    l1091 0023                      l1171 01C6                      l1093 0028  
                    l1085 0018                      l1173 01CD                      l1165 01B7  
                    l1181 0197                      l1095 002C                      l1087 001C  
                    l1167 01BE                      l1191 01AE                      l1183 019C  
                    l1175 017E                      l1097 0033                      l1089 0020  
                    l1169 01C4                      l1185 019F                      l1177 0189  
                    l1099 0039                      l1187 01A0                      l1179 0190  
                    l1189 01A3                      _ADIF 0066                      i1l99 0177  
                    u1_20 01EC                      u1_21 01EB                      u3_20 012F  
                    u3_21 012E                      u4_20 0134                      u4_21 0133  
                    u5_20 0145                      u5_21 0144                      u6_20 0154  
                    u6_21 0153                      u7_20 0161                      u7_21 0160  
                    u8_20 016E                      u8_21 016D              __CFG_WRT$OFF 0000  
                    _adc1 0079                      _adc2 0078    __size_of_ADC_INTERRUPT 0009  
                    _main 017E                      btemp 007E                      start 000C  
           __CFG_IESO$OFF 0000                     ??_ISR 0071                     ?_main 0070  
           __CFG_WDTE$OFF 0000                     _ANSEL 0188                     i1l130 01EC  
                   i1l141 01E5                     i1l133 01F2                     i1l127 01E6  
                   i1l733 01E6                     i1l823 01EE                     i1l817 01DD  
                   i1l841 0138                     i1l819 01E2                     i1l851 0149  
                   i1l843 013C                     i1l835 0129                     i1l861 0154  
                   i1l853 014D                     i1l845 013E                     i1l837 012F  
                   i1l871 0174                     i1l863 015C                     i1l839 0134  
                   i1l847 0140                     i1l865 0161                     i1l849 0145  
                   i1l857 014F                     i1l867 0168                     i1l859 0150  
                   i1l869 016E                     _PORTA 0005                     _TRISA 0085  
                   _TRISD 0088                     _SSPIE 0463                     _SSPIF 0063  
          __CFG_FCMEN$OFF 0000                     _canal 0077            __CFG_BOREN$OFF 0000  
                   pclath 000A           __end_of_spiInit 01D4           __end_of_spiRead 01E6  
                   status 0003                     wtemp0 007E            __CFG_MCLRE$OFF 0000  
         __initialization 000F              __end_of_main 01B6             _ADC_INTERRUPT 01D4  
                  ??_main 0076              ??_ADC_CONFIG 0020                    _ADRESH 001E  
                  _ANSELH 0189                    _TRISC3 043B                    _TRISC5 043D  
                  _SSPCON 0014                    _SSPBUF 0013            __CFG_PWRTE$OFF 0000  
      __end_of_ADC_CONFIG 0129            ?_ADC_INTERRUPT 0070                    _opcion 0076  
                  saved_w 007E          __end_of_spiWrite 01F3                 ??_spiInit 0074  
               ??_spiRead 0070   __end_of__initialization 0013            __pcstackCOMMON 0070  
              __pmaintext 017E           ??_ADC_INTERRUPT 0074                __pintentry 0004  
 __size_of_spiReceiveWait 0007                   _SSPSTAT 0094                 ?_spiWrite 0070  
               _ANSELbits 0188                   __ptext1 01B6                   __ptext2 01D4  
                 __ptext3 0017                   __ptext4 0129                   __ptext5 01ED  
                 __ptext6 01DD                   __ptext7 01E6              __size_of_ISR 0055  
                 _spiInit 01B6                   _spiRead 01DD      end_of_initialization 0013  
              ??_spiWrite 0070                 _TRISAbits 0085                 _TRISBbits 0086  
               _TRISEbits 0089               spiWrite@dat 0070            _spiReceiveWait 01E6  
     start_initialization 000F               __end_of_ISR 017E  __CFG_FOSC$INTRC_NOCLKOUT 0000  
  __end_of_spiReceiveWait 01ED               __pbssCOMMON 0076                 ___latbits 0002  
           __pcstackBANK0 0020           ?_spiReceiveWait 0070     __end_of_ADC_INTERRUPT 01DD  
       __size_of_spiWrite 0006                  ?_spiInit 0020                  ?_spiRead 0070  
    spiInit@sTransmitEdge 0022         interrupt_function 0004                  _PIE1bits 008C  
      spiInit@sDataSample 0020                  _PIR1bits 000C                _ADCON0bits 001F  
              _ADCON1bits 009F                _ADC_CONFIG 0017                _ANSELHbits 0189  
        __size_of_spiInit 001E          __size_of_spiRead 0009         __CFG_BOR4V$BOR40V 0000  
           __size_of_main 0038                  _spiWrite 01ED              spiInit@sType 0074  
       spiInit@sClockIdle 0021                _INTCONbits 000B               ?_ADC_CONFIG 0074  
                intlevel1 0000          ??_spiReceiveWait 0070  
