

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Feb 15 13:10:27 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.10
    20                           ; Generated 31/07/2019 GMT
    21                           ; 
    22                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  000E                     	;# 
   224  000E                     	;# 
   225  000F                     	;# 
   226  0010                     	;# 
   227  0011                     	;# 
   228  0012                     	;# 
   229  0013                     	;# 
   230  0014                     	;# 
   231  0015                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001D                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  0081                     	;# 
   245  0085                     	;# 
   246  0086                     	;# 
   247  0087                     	;# 
   248  0088                     	;# 
   249  0089                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  008F                     	;# 
   254  0090                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0094                     	;# 
   261  0095                     	;# 
   262  0096                     	;# 
   263  0097                     	;# 
   264  0098                     	;# 
   265  0099                     	;# 
   266  009A                     	;# 
   267  009B                     	;# 
   268  009C                     	;# 
   269  009D                     	;# 
   270  009E                     	;# 
   271  009F                     	;# 
   272  0105                     	;# 
   273  0107                     	;# 
   274  0108                     	;# 
   275  0109                     	;# 
   276  010C                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  010F                     	;# 
   281  0185                     	;# 
   282  0187                     	;# 
   283  0188                     	;# 
   284  0189                     	;# 
   285  018C                     	;# 
   286  018D                     	;# 
   287  0000                     	;# 
   288  0001                     	;# 
   289  0002                     	;# 
   290  0003                     	;# 
   291  0004                     	;# 
   292  0005                     	;# 
   293  0006                     	;# 
   294  0007                     	;# 
   295  0008                     	;# 
   296  0009                     	;# 
   297  000A                     	;# 
   298  000B                     	;# 
   299  000C                     	;# 
   300  000D                     	;# 
   301  000E                     	;# 
   302  000E                     	;# 
   303  000F                     	;# 
   304  0010                     	;# 
   305  0011                     	;# 
   306  0012                     	;# 
   307  0013                     	;# 
   308  0014                     	;# 
   309  0015                     	;# 
   310  0015                     	;# 
   311  0016                     	;# 
   312  0017                     	;# 
   313  0018                     	;# 
   314  0019                     	;# 
   315  001A                     	;# 
   316  001B                     	;# 
   317  001B                     	;# 
   318  001C                     	;# 
   319  001D                     	;# 
   320  001E                     	;# 
   321  001F                     	;# 
   322  0081                     	;# 
   323  0085                     	;# 
   324  0086                     	;# 
   325  0087                     	;# 
   326  0088                     	;# 
   327  0089                     	;# 
   328  008C                     	;# 
   329  008D                     	;# 
   330  008E                     	;# 
   331  008F                     	;# 
   332  0090                     	;# 
   333  0091                     	;# 
   334  0092                     	;# 
   335  0093                     	;# 
   336  0093                     	;# 
   337  0093                     	;# 
   338  0094                     	;# 
   339  0095                     	;# 
   340  0096                     	;# 
   341  0097                     	;# 
   342  0098                     	;# 
   343  0099                     	;# 
   344  009A                     	;# 
   345  009B                     	;# 
   346  009C                     	;# 
   347  009D                     	;# 
   348  009E                     	;# 
   349  009F                     	;# 
   350  0105                     	;# 
   351  0107                     	;# 
   352  0108                     	;# 
   353  0109                     	;# 
   354  010C                     	;# 
   355  010C                     	;# 
   356  010D                     	;# 
   357  010E                     	;# 
   358  010F                     	;# 
   359  0185                     	;# 
   360  0187                     	;# 
   361  0188                     	;# 
   362  0189                     	;# 
   363  018C                     	;# 
   364  018D                     	;# 
   365  0013                     _SSPBUF	set	19
   366  0014                     _SSPCON	set	20
   367  0005                     _PORTA	set	5
   368  001E                     _ADRESH	set	30
   369  000B                     _INTCONbits	set	11
   370  000C                     _PIR1bits	set	12
   371  001F                     _ADCON0bits	set	31
   372  0063                     _SSPIF	set	99
   373  0066                     _ADIF	set	102
   374  0094                     _SSPSTATbits	set	148
   375  0094                     _SSPSTAT	set	148
   376  0085                     _TRISA	set	133
   377  0088                     _TRISD	set	136
   378  008C                     _PIE1bits	set	140
   379  0086                     _TRISBbits	set	134
   380  0089                     _TRISEbits	set	137
   381  0085                     _TRISAbits	set	133
   382  009F                     _ADCON1bits	set	159
   383  043B                     _TRISC3	set	1083
   384  043D                     _TRISC5	set	1085
   385  0463                     _SSPIE	set	1123
   386  0188                     _ANSEL	set	392
   387  0189                     _ANSELH	set	393
   388  0189                     _ANSELHbits	set	393
   389  0188                     _ANSELbits	set	392
   390                           
   391                           ; #config settings
   392  0000                     
   393                           	psect	cinit
   394  000F                     start_initialization:	
   395  000F                     __initialization:	
   396                           
   397                           ; Clear objects allocated to COMMON
   398  000F  01F6               	clrf	__pbssCOMMON& (0+127)
   399  0010  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   400  0011  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   401  0012  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   402  0013                     end_of_initialization:	
   403                           ;End of C runtime variable initialization code
   404                           
   405  0013                     __end_of__initialization:	
   406  0013  0183               	clrf	3
   407  0014  120A  118A  2984   	ljmp	_main	;jump to C main() function
   408                           
   409                           	psect	bssCOMMON
   410  0076                     __pbssCOMMON:	
   411  0076                     _opcion:	
   412  0076                     	ds	1
   413  0077                     _canal:	
   414  0077                     	ds	1
   415  0078                     _adc2:	
   416  0078                     	ds	1
   417  0079                     _adc1:	
   418  0079                     	ds	1
   419                           
   420                           	psect	cstackCOMMON
   421  0070                     __pcstackCOMMON:	
   422  0070                     ?_spiRead:	
   423  0070                     ??_spiRead:	
   424                           ; 1 bytes @ 0x0
   425                           
   426  0070                     ?_spiWrite:	
   427                           ; 1 bytes @ 0x0
   428                           
   429  0070                     ??_spiWrite:	
   430                           ; 1 bytes @ 0x0
   431                           
   432  0070                     ?_ADC_INTERRUPT:	
   433                           ; 1 bytes @ 0x0
   434                           
   435  0070                     ?_ISR:	
   436                           ; 1 bytes @ 0x0
   437                           
   438  0070                     ?_main:	
   439                           ; 1 bytes @ 0x0
   440                           
   441  0070                     ?_spiReceiveWait:	
   442                           ; 1 bytes @ 0x0
   443                           
   444  0070                     ??_spiReceiveWait:	
   445                           ; 1 bytes @ 0x0
   446                           
   447  0070                     spiWrite@dat:	
   448                           ; 1 bytes @ 0x0
   449                           
   450                           
   451                           ; 1 bytes @ 0x0
   452  0070                     	ds	1
   453  0071                     ??_ISR:	
   454                           
   455                           ; 1 bytes @ 0x1
   456  0071                     	ds	3
   457  0074                     ??_spiInit:	
   458  0074                     ?_ADC_CONFIG:	
   459                           ; 1 bytes @ 0x4
   460                           
   461  0074                     ??_ADC_INTERRUPT:	
   462                           ; 1 bytes @ 0x4
   463                           
   464  0074                     ADC_CONFIG@justif:	
   465                           ; 1 bytes @ 0x4
   466                           
   467  0074                     spiInit@sType:	
   468                           ; 1 bytes @ 0x4
   469                           
   470                           
   471                           ; 1 bytes @ 0x4
   472  0074                     	ds	1
   473  0075                     ADC_CONFIG@canal:	
   474                           
   475                           ; 1 bytes @ 0x5
   476  0075                     	ds	1
   477  0076                     ??_main:	
   478                           
   479                           	psect	cstackBANK0
   480  0020                     __pcstackBANK0:	
   481                           ; 1 bytes @ 0x6
   482                           
   483  0020                     ?_spiInit:	
   484  0020                     ??_ADC_CONFIG:	
   485                           ; 1 bytes @ 0x0
   486                           
   487  0020                     spiInit@sDataSample:	
   488                           ; 1 bytes @ 0x0
   489                           
   490                           
   491                           ; 1 bytes @ 0x0
   492  0020                     	ds	1
   493  0021                     spiInit@sClockIdle:	
   494                           
   495                           ; 1 bytes @ 0x1
   496  0021                     	ds	1
   497  0022                     spiInit@sTransmitEdge:	
   498                           
   499                           ; 1 bytes @ 0x2
   500  0022                     	ds	1
   501                           
   502                           	psect	maintext
   503  0184                     __pmaintext:	
   504 ;;
   505 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   506 ;;
   507 ;; *************** function _main *****************
   508 ;; Defined at:
   509 ;;		line 67 in file "slave.c"
   510 ;; Parameters:    Size  Location     Type
   511 ;;		None
   512 ;; Auto vars:     Size  Location     Type
   513 ;;		None
   514 ;; Return value:  Size  Location     Type
   515 ;;                  1    wreg      void 
   516 ;; Registers used:
   517 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   518 ;; Tracked objects:
   519 ;;		On entry : B00/0
   520 ;;		On exit  : 0/0
   521 ;;		Unchanged: 0/0
   522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   523 ;;      Params:         0       0       0       0       0
   524 ;;      Locals:         0       0       0       0       0
   525 ;;      Temps:          0       0       0       0       0
   526 ;;      Totals:         0       0       0       0       0
   527 ;;Total ram usage:        0 bytes
   528 ;; Hardware stack levels required when called:    4
   529 ;; This function calls:
   530 ;;		_ADC_CONFIG
   531 ;;		_ADC_INTERRUPT
   532 ;;		_spiInit
   533 ;; This function is called by:
   534 ;;		Startup code after reset
   535 ;; This function uses a non-reentrant model
   536 ;;
   537                           
   538                           
   539                           ;psect for function _main
   540  0184                     _main:	
   541  0184                     l1171:	
   542                           ;incstack = 0
   543                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   544                           
   545                           
   546                           ;slave.c: 69:     ANSELH = 0;
   547  0184  1683               	bsf	3,5	;RP0=1, select bank3
   548  0185  1703               	bsf	3,6	;RP1=1, select bank3
   549  0186  0189               	clrf	9	;volatile
   550                           
   551                           ;slave.c: 70:     ANSEL = 0;
   552  0187  0188               	clrf	8	;volatile
   553                           
   554                           ;slave.c: 71:     TRISD = 0;
   555  0188  1683               	bsf	3,5	;RP0=1, select bank1
   556  0189  1303               	bcf	3,6	;RP1=0, select bank1
   557  018A  0188               	clrf	8	;volatile
   558                           
   559                           ;slave.c: 73:     TRISA = 0;
   560  018B  0185               	clrf	5	;volatile
   561                           
   562                           ;slave.c: 74:     PORTA = 0;
   563  018C  1283               	bcf	3,5	;RP0=0, select bank0
   564  018D  1303               	bcf	3,6	;RP1=0, select bank0
   565  018E  0185               	clrf	5	;volatile
   566  018F                     l1173:	
   567                           
   568                           ;slave.c: 77:     ADC_CONFIG(10,0);
   569  018F  01F4               	clrf	ADC_CONFIG@justif
   570  0190  300A               	movlw	10
   571  0191  120A  118A  2017  120A  118A  	fcall	_ADC_CONFIG
   572  0196                     l1175:	
   573                           
   574                           ;slave.c: 78:     ADC_CONFIG(12,0);
   575  0196  01F4               	clrf	ADC_CONFIG@justif
   576  0197  300C               	movlw	12
   577  0198  120A  118A  2017  120A  118A  	fcall	_ADC_CONFIG
   578  019D                     l1177:	
   579                           
   580                           ;slave.c: 79:     ADC_INTERRUPT();
   581  019D  120A  118A  21D6  120A  118A  	fcall	_ADC_INTERRUPT
   582  01A2                     l1179:	
   583                           
   584                           ;slave.c: 80:     ADCON0bits.GO = 1;
   585  01A2  1283               	bcf	3,5	;RP0=0, select bank0
   586  01A3  1303               	bcf	3,6	;RP1=0, select bank0
   587  01A4  149F               	bsf	31,1	;volatile
   588  01A5                     l1181:	
   589                           
   590                           ;slave.c: 83:     SSPIF = 0;
   591  01A5  118C               	bcf	12,3	;volatile
   592  01A6                     l1183:	
   593                           
   594                           ;slave.c: 84:     SSPIE = 1;
   595  01A6  1683               	bsf	3,5	;RP0=1, select bank1
   596  01A7  1303               	bcf	3,6	;RP1=0, select bank1
   597  01A8  158C               	bsf	12,3	;volatile
   598  01A9                     l1185:	
   599                           
   600                           ;slave.c: 85:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, S
      +                          PI_IDLE_2_ACTIVE);
   601  01A9  1283               	bcf	3,5	;RP0=0, select bank0
   602  01AA  1303               	bcf	3,6	;RP1=0, select bank0
   603  01AB  01A0               	clrf	spiInit@sDataSample
   604  01AC  01A1               	clrf	spiInit@sClockIdle
   605  01AD  01A2               	clrf	spiInit@sTransmitEdge
   606  01AE  3024               	movlw	36
   607  01AF  120A  118A  21B8  120A  118A  	fcall	_spiInit
   608  01B4                     l104:	
   609                           ;slave.c: 87:     while(1){
   610                           
   611  01B4                     l105:	
   612                           ;slave.c: 91:     }
   613                           
   614  01B4  29B4               	goto	l104
   615  01B5  120A  118A  280C   	ljmp	start
   616  01B8                     __end_of_main:	
   617                           
   618                           	psect	text1
   619  01B8                     __ptext1:	
   620 ;; *************** function _spiInit *****************
   621 ;; Defined at:
   622 ;;		line 12 in file "SPIS.c"
   623 ;; Parameters:    Size  Location     Type
   624 ;;  sType           1    wreg     enum E1445
   625 ;;  sDataSample     1    0[BANK0 ] enum E1453
   626 ;;  sClockIdle      1    1[BANK0 ] enum E1457
   627 ;;  sTransmitEdg    1    2[BANK0 ] enum E1461
   628 ;; Auto vars:     Size  Location     Type
   629 ;;  sType           1    4[COMMON] enum E1445
   630 ;; Return value:  Size  Location     Type
   631 ;;                  1    wreg      void 
   632 ;; Registers used:
   633 ;;		wreg, status,2, status,0
   634 ;; Tracked objects:
   635 ;;		On entry : 0/0
   636 ;;		On exit  : 0/0
   637 ;;		Unchanged: 0/0
   638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   639 ;;      Params:         0       3       0       0       0
   640 ;;      Locals:         1       0       0       0       0
   641 ;;      Temps:          0       0       0       0       0
   642 ;;      Totals:         1       3       0       0       0
   643 ;;Total ram usage:        4 bytes
   644 ;; Hardware stack levels used:    1
   645 ;; Hardware stack levels required when called:    3
   646 ;; This function calls:
   647 ;;		Nothing
   648 ;; This function is called by:
   649 ;;		_main
   650 ;; This function uses a non-reentrant model
   651 ;;
   652                           
   653                           
   654                           ;psect for function _spiInit
   655  01B8                     _spiInit:	
   656                           
   657                           ;incstack = 0
   658                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   659                           ;spiInit@sType stored from wreg
   660  01B8  00F4               	movwf	spiInit@sType
   661  01B9                     l1161:	
   662                           
   663                           ;SPIS.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sC
      +                          lockIdle, Spi_Transmit_Edge sTransmitEdge);SPIS.c: 13: {;SPIS.c: 14:     TRISC5 = 0;
   664  01B9  1683               	bsf	3,5	;RP0=1, select bank1
   665  01BA  1303               	bcf	3,6	;RP1=0, select bank1
   666  01BB  1287               	bcf	7,5	;volatile
   667                           
   668                           ;SPIS.c: 15:     if(sType & 0b00000100)
   669  01BC  1D74               	btfss	spiInit@sType,2
   670  01BD  29BF               	goto	u101
   671  01BE  29C0               	goto	u100
   672  01BF                     u101:	
   673  01BF  29C8               	goto	l1167
   674  01C0                     u100:	
   675  01C0                     l1163:	
   676                           
   677                           ;SPIS.c: 16:     {;SPIS.c: 17:         SSPSTAT = sTransmitEdge;
   678  01C0  1283               	bcf	3,5	;RP0=0, select bank0
   679  01C1  1303               	bcf	3,6	;RP1=0, select bank0
   680  01C2  0822               	movf	spiInit@sTransmitEdge,w
   681  01C3  1683               	bsf	3,5	;RP0=1, select bank1
   682  01C4  1303               	bcf	3,6	;RP1=0, select bank1
   683  01C5  0094               	movwf	20	;volatile
   684  01C6                     l1165:	
   685                           
   686                           ;SPIS.c: 18:         TRISC3 = 1;
   687  01C6  1587               	bsf	7,3	;volatile
   688                           
   689                           ;SPIS.c: 19:     }
   690  01C7  29D0               	goto	l123
   691  01C8                     l1167:	
   692                           
   693                           ;SPIS.c: 21:     {;SPIS.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   694  01C8  1283               	bcf	3,5	;RP0=0, select bank0
   695  01C9  1303               	bcf	3,6	;RP1=0, select bank0
   696  01CA  0820               	movf	spiInit@sDataSample,w
   697  01CB  0422               	iorwf	spiInit@sTransmitEdge,w
   698  01CC  1683               	bsf	3,5	;RP0=1, select bank1
   699  01CD  1303               	bcf	3,6	;RP1=0, select bank1
   700  01CE  0094               	movwf	20	;volatile
   701  01CF                     l1169:	
   702                           
   703                           ;SPIS.c: 23:         TRISC3 = 0;
   704  01CF  1187               	bcf	7,3	;volatile
   705  01D0                     l123:	
   706                           ;SPIS.c: 24:     }
   707                           
   708                           
   709                           ;SPIS.c: 26:     SSPCON = sType | sClockIdle;
   710  01D0  0874               	movf	spiInit@sType,w
   711  01D1  1283               	bcf	3,5	;RP0=0, select bank0
   712  01D2  1303               	bcf	3,6	;RP1=0, select bank0
   713  01D3  0421               	iorwf	spiInit@sClockIdle,w
   714  01D4  0094               	movwf	20	;volatile
   715  01D5                     l124:	
   716  01D5  0008               	return
   717  01D6                     __end_of_spiInit:	
   718                           
   719                           	psect	text2
   720  01D6                     __ptext2:	
   721 ;; *************** function _ADC_INTERRUPT *****************
   722 ;; Defined at:
   723 ;;		line 114 in file "ADC.c"
   724 ;; Parameters:    Size  Location     Type
   725 ;;		None
   726 ;; Auto vars:     Size  Location     Type
   727 ;;		None
   728 ;; Return value:  Size  Location     Type
   729 ;;                  1    wreg      void 
   730 ;; Registers used:
   731 ;;		None
   732 ;; Tracked objects:
   733 ;;		On entry : 0/0
   734 ;;		On exit  : 0/0
   735 ;;		Unchanged: 0/0
   736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   737 ;;      Params:         0       0       0       0       0
   738 ;;      Locals:         0       0       0       0       0
   739 ;;      Temps:          0       0       0       0       0
   740 ;;      Totals:         0       0       0       0       0
   741 ;;Total ram usage:        0 bytes
   742 ;; Hardware stack levels used:    1
   743 ;; Hardware stack levels required when called:    3
   744 ;; This function calls:
   745 ;;		Nothing
   746 ;; This function is called by:
   747 ;;		_main
   748 ;; This function uses a non-reentrant model
   749 ;;
   750                           
   751                           
   752                           ;psect for function _ADC_INTERRUPT
   753  01D6                     _ADC_INTERRUPT:	
   754  01D6                     l815:	
   755                           ;incstack = 0
   756                           ; Regs used in _ADC_INTERRUPT: []
   757                           
   758                           
   759                           ;ADC.c: 115:     PIR1bits.ADIF = 0;
   760  01D6  1283               	bcf	3,5	;RP0=0, select bank0
   761  01D7  1303               	bcf	3,6	;RP1=0, select bank0
   762  01D8  130C               	bcf	12,6	;volatile
   763                           
   764                           ;ADC.c: 116:     PIE1bits.ADIE = 1;
   765  01D9  1683               	bsf	3,5	;RP0=1, select bank1
   766  01DA  1303               	bcf	3,6	;RP1=0, select bank1
   767  01DB  170C               	bsf	12,6	;volatile
   768                           
   769                           ;ADC.c: 117:     INTCONbits.GIE = 1;
   770  01DC  178B               	bsf	11,7	;volatile
   771                           
   772                           ;ADC.c: 118:     INTCONbits.PEIE = 1;
   773  01DD  170B               	bsf	11,6	;volatile
   774  01DE                     l46:	
   775  01DE  0008               	return
   776  01DF                     __end_of_ADC_INTERRUPT:	
   777                           
   778                           	psect	text3
   779  0017                     __ptext3:	
   780 ;; *************** function _ADC_CONFIG *****************
   781 ;; Defined at:
   782 ;;		line 12 in file "ADC.c"
   783 ;; Parameters:    Size  Location     Type
   784 ;;  canal           1    wreg     unsigned char 
   785 ;;  justif          1    4[COMMON] unsigned char 
   786 ;; Auto vars:     Size  Location     Type
   787 ;;  canal           1    5[COMMON] unsigned char 
   788 ;; Return value:  Size  Location     Type
   789 ;;                  1    wreg      void 
   790 ;; Registers used:
   791 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   792 ;; Tracked objects:
   793 ;;		On entry : 0/0
   794 ;;		On exit  : 0/0
   795 ;;		Unchanged: 0/0
   796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   797 ;;      Params:         1       0       0       0       0
   798 ;;      Locals:         1       0       0       0       0
   799 ;;      Temps:          0       2       0       0       0
   800 ;;      Totals:         2       2       0       0       0
   801 ;;Total ram usage:        4 bytes
   802 ;; Hardware stack levels used:    1
   803 ;; Hardware stack levels required when called:    3
   804 ;; This function calls:
   805 ;;		Nothing
   806 ;; This function is called by:
   807 ;;		_main
   808 ;; This function uses a non-reentrant model
   809 ;;
   810                           
   811                           
   812                           ;psect for function _ADC_CONFIG
   813  0017                     _ADC_CONFIG:	
   814                           
   815                           ;incstack = 0
   816                           ; Regs used in _ADC_CONFIG: [wreg-fsr0h+status,2+status,0]
   817                           ;ADC_CONFIG@canal stored from wreg
   818  0017  00F5               	movwf	ADC_CONFIG@canal
   819  0018                     l1081:	
   820                           
   821                           ;ADC.c: 13:     ADCON0bits.ADON = 1;
   822  0018  1283               	bcf	3,5	;RP0=0, select bank0
   823  0019  1303               	bcf	3,6	;RP1=0, select bank0
   824  001A  141F               	bsf	31,0	;volatile
   825                           
   826                           ;ADC.c: 14:     ADCON0bits.GO = 1;
   827  001B  149F               	bsf	31,1	;volatile
   828  001C                     l1083:	
   829                           
   830                           ;ADC.c: 15:     ADCON0bits.ADCS = 1;
   831  001C  081F               	movf	31,w	;volatile
   832  001D  393F               	andlw	-193
   833  001E  3840               	iorlw	64
   834  001F  009F               	movwf	31	;volatile
   835  0020                     l1085:	
   836                           
   837                           ;ADC.c: 16:     ADCON1bits.VCFG0 = 0;
   838  0020  1683               	bsf	3,5	;RP0=1, select bank1
   839  0021  1303               	bcf	3,6	;RP1=0, select bank1
   840  0022  121F               	bcf	31,4	;volatile
   841  0023                     l1087:	
   842                           
   843                           ;ADC.c: 17:     ADCON1bits.VCFG1 = 0;
   844  0023  129F               	bcf	31,5	;volatile
   845                           
   846                           ;ADC.c: 19:     switch(canal){
   847  0024  28D9               	goto	l1147
   848  0025                     l24:	
   849                           ;ADC.c: 20:         case 0:
   850                           
   851                           
   852                           ;ADC.c: 21:             ANSELbits.ANS0 = 1;
   853  0025  1683               	bsf	3,5	;RP0=1, select bank3
   854  0026  1703               	bsf	3,6	;RP1=1, select bank3
   855  0027  1408               	bsf	8,0	;volatile
   856  0028                     l1089:	
   857                           
   858                           ;ADC.c: 22:             ADCON0bits.CHS = 0;
   859  0028  30C3               	movlw	-61
   860  0029  1283               	bcf	3,5	;RP0=0, select bank0
   861  002A  1303               	bcf	3,6	;RP1=0, select bank0
   862  002B  059F               	andwf	31,f	;volatile
   863  002C                     l1091:	
   864                           
   865                           ;ADC.c: 23:             TRISAbits.TRISA0 = 1;
   866  002C  1683               	bsf	3,5	;RP0=1, select bank1
   867  002D  1303               	bcf	3,6	;RP1=0, select bank1
   868  002E  1405               	bsf	5,0	;volatile
   869                           
   870                           ;ADC.c: 24:             break;
   871  002F  2917               	goto	l1151
   872  0030                     l26:	
   873                           ;ADC.c: 26:         case 1:
   874                           
   875                           
   876                           ;ADC.c: 27:             ANSELbits.ANS1 = 1;
   877  0030  1683               	bsf	3,5	;RP0=1, select bank3
   878  0031  1703               	bsf	3,6	;RP1=1, select bank3
   879  0032  1488               	bsf	8,1	;volatile
   880  0033                     l1093:	
   881                           
   882                           ;ADC.c: 28:             ADCON0bits.CHS = 1;
   883  0033  1283               	bcf	3,5	;RP0=0, select bank0
   884  0034  1303               	bcf	3,6	;RP1=0, select bank0
   885  0035  081F               	movf	31,w	;volatile
   886  0036  39C3               	andlw	-61
   887  0037  3804               	iorlw	4
   888  0038  009F               	movwf	31	;volatile
   889  0039                     l1095:	
   890                           
   891                           ;ADC.c: 29:             TRISAbits.TRISA1 = 1;
   892  0039  1683               	bsf	3,5	;RP0=1, select bank1
   893  003A  1303               	bcf	3,6	;RP1=0, select bank1
   894  003B  1485               	bsf	5,1	;volatile
   895                           
   896                           ;ADC.c: 30:             break;
   897  003C  2917               	goto	l1151
   898  003D                     l27:	
   899                           ;ADC.c: 32:         case 2:
   900                           
   901                           
   902                           ;ADC.c: 33:             ANSELbits.ANS2 = 1;
   903  003D  1683               	bsf	3,5	;RP0=1, select bank3
   904  003E  1703               	bsf	3,6	;RP1=1, select bank3
   905  003F  1508               	bsf	8,2	;volatile
   906  0040                     l1097:	
   907                           
   908                           ;ADC.c: 34:             ADCON0bits.CHS = 2;
   909  0040  1283               	bcf	3,5	;RP0=0, select bank0
   910  0041  1303               	bcf	3,6	;RP1=0, select bank0
   911  0042  081F               	movf	31,w	;volatile
   912  0043  39C3               	andlw	-61
   913  0044  3808               	iorlw	8
   914  0045  009F               	movwf	31	;volatile
   915  0046                     l1099:	
   916                           
   917                           ;ADC.c: 35:             TRISAbits.TRISA2 = 1;
   918  0046  1683               	bsf	3,5	;RP0=1, select bank1
   919  0047  1303               	bcf	3,6	;RP1=0, select bank1
   920  0048  1505               	bsf	5,2	;volatile
   921                           
   922                           ;ADC.c: 36:             break;
   923  0049  2917               	goto	l1151
   924  004A                     l28:	
   925                           ;ADC.c: 38:         case 3:
   926                           
   927                           
   928                           ;ADC.c: 39:             ANSELbits.ANS3 = 1;
   929  004A  1683               	bsf	3,5	;RP0=1, select bank3
   930  004B  1703               	bsf	3,6	;RP1=1, select bank3
   931  004C  1588               	bsf	8,3	;volatile
   932  004D                     l1101:	
   933                           
   934                           ;ADC.c: 40:             ADCON0bits.CHS = 3;
   935  004D  1283               	bcf	3,5	;RP0=0, select bank0
   936  004E  1303               	bcf	3,6	;RP1=0, select bank0
   937  004F  081F               	movf	31,w	;volatile
   938  0050  39C3               	andlw	-61
   939  0051  380C               	iorlw	12
   940  0052  009F               	movwf	31	;volatile
   941  0053                     l1103:	
   942                           
   943                           ;ADC.c: 41:             TRISAbits.TRISA3 = 1;
   944  0053  1683               	bsf	3,5	;RP0=1, select bank1
   945  0054  1303               	bcf	3,6	;RP1=0, select bank1
   946  0055  1585               	bsf	5,3	;volatile
   947                           
   948                           ;ADC.c: 42:             break;
   949  0056  2917               	goto	l1151
   950  0057                     l29:	
   951                           ;ADC.c: 44:         case 4:
   952                           
   953                           
   954                           ;ADC.c: 45:             ANSELbits.ANS4 = 1;
   955  0057  1683               	bsf	3,5	;RP0=1, select bank3
   956  0058  1703               	bsf	3,6	;RP1=1, select bank3
   957  0059  1608               	bsf	8,4	;volatile
   958  005A                     l1105:	
   959                           
   960                           ;ADC.c: 46:             ADCON0bits.CHS = 4;
   961  005A  1283               	bcf	3,5	;RP0=0, select bank0
   962  005B  1303               	bcf	3,6	;RP1=0, select bank0
   963  005C  081F               	movf	31,w	;volatile
   964  005D  39C3               	andlw	-61
   965  005E  3810               	iorlw	16
   966  005F  009F               	movwf	31	;volatile
   967  0060                     l1107:	
   968                           
   969                           ;ADC.c: 47:             TRISAbits.TRISA5 = 1;
   970  0060  1683               	bsf	3,5	;RP0=1, select bank1
   971  0061  1303               	bcf	3,6	;RP1=0, select bank1
   972  0062  1685               	bsf	5,5	;volatile
   973                           
   974                           ;ADC.c: 48:             break;
   975  0063  2917               	goto	l1151
   976  0064                     l30:	
   977                           ;ADC.c: 50:         case 5:
   978                           
   979                           
   980                           ;ADC.c: 51:             ANSELbits.ANS5 = 1;
   981  0064  1683               	bsf	3,5	;RP0=1, select bank3
   982  0065  1703               	bsf	3,6	;RP1=1, select bank3
   983  0066  1688               	bsf	8,5	;volatile
   984  0067                     l1109:	
   985                           
   986                           ;ADC.c: 52:             ADCON0bits.CHS = 5;
   987  0067  1283               	bcf	3,5	;RP0=0, select bank0
   988  0068  1303               	bcf	3,6	;RP1=0, select bank0
   989  0069  081F               	movf	31,w	;volatile
   990  006A  39C3               	andlw	-61
   991  006B  3814               	iorlw	20
   992  006C  009F               	movwf	31	;volatile
   993  006D                     l1111:	
   994                           
   995                           ;ADC.c: 53:             TRISEbits.TRISE0 = 1;
   996  006D  1683               	bsf	3,5	;RP0=1, select bank1
   997  006E  1303               	bcf	3,6	;RP1=0, select bank1
   998  006F  1409               	bsf	9,0	;volatile
   999                           
  1000                           ;ADC.c: 54:             break;
  1001  0070  2917               	goto	l1151
  1002  0071                     l31:	
  1003                           ;ADC.c: 56:         case 6:
  1004                           
  1005                           
  1006                           ;ADC.c: 57:             ANSELbits.ANS6 = 1;
  1007  0071  1683               	bsf	3,5	;RP0=1, select bank3
  1008  0072  1703               	bsf	3,6	;RP1=1, select bank3
  1009  0073  1708               	bsf	8,6	;volatile
  1010  0074                     l1113:	
  1011                           
  1012                           ;ADC.c: 58:             ADCON0bits.CHS = 6;
  1013  0074  1283               	bcf	3,5	;RP0=0, select bank0
  1014  0075  1303               	bcf	3,6	;RP1=0, select bank0
  1015  0076  081F               	movf	31,w	;volatile
  1016  0077  39C3               	andlw	-61
  1017  0078  3818               	iorlw	24
  1018  0079  009F               	movwf	31	;volatile
  1019  007A                     l1115:	
  1020                           
  1021                           ;ADC.c: 59:             TRISEbits.TRISE1 = 1;
  1022  007A  1683               	bsf	3,5	;RP0=1, select bank1
  1023  007B  1303               	bcf	3,6	;RP1=0, select bank1
  1024  007C  1489               	bsf	9,1	;volatile
  1025                           
  1026                           ;ADC.c: 60:             break;
  1027  007D  2917               	goto	l1151
  1028  007E                     l32:	
  1029                           ;ADC.c: 62:         case 7:
  1030                           
  1031                           
  1032                           ;ADC.c: 63:             ANSELbits.ANS7 = 1;
  1033  007E  1683               	bsf	3,5	;RP0=1, select bank3
  1034  007F  1703               	bsf	3,6	;RP1=1, select bank3
  1035  0080  1788               	bsf	8,7	;volatile
  1036  0081                     l1117:	
  1037                           
  1038                           ;ADC.c: 64:             ADCON0bits.CHS = 7;
  1039  0081  1283               	bcf	3,5	;RP0=0, select bank0
  1040  0082  1303               	bcf	3,6	;RP1=0, select bank0
  1041  0083  081F               	movf	31,w	;volatile
  1042  0084  39C3               	andlw	-61
  1043  0085  381C               	iorlw	28
  1044  0086  009F               	movwf	31	;volatile
  1045  0087                     l1119:	
  1046                           
  1047                           ;ADC.c: 65:             TRISEbits.TRISE2 = 1;
  1048  0087  1683               	bsf	3,5	;RP0=1, select bank1
  1049  0088  1303               	bcf	3,6	;RP1=0, select bank1
  1050  0089  1509               	bsf	9,2	;volatile
  1051                           
  1052                           ;ADC.c: 66:             break;
  1053  008A  2917               	goto	l1151
  1054  008B                     l33:	
  1055                           ;ADC.c: 68:         case 8:
  1056                           
  1057                           
  1058                           ;ADC.c: 69:             ANSELHbits.ANS8 = 1;
  1059  008B  1683               	bsf	3,5	;RP0=1, select bank3
  1060  008C  1703               	bsf	3,6	;RP1=1, select bank3
  1061  008D  1409               	bsf	9,0	;volatile
  1062  008E                     l1121:	
  1063                           
  1064                           ;ADC.c: 70:             ADCON0bits.CHS = 8;
  1065  008E  1283               	bcf	3,5	;RP0=0, select bank0
  1066  008F  1303               	bcf	3,6	;RP1=0, select bank0
  1067  0090  081F               	movf	31,w	;volatile
  1068  0091  39C3               	andlw	-61
  1069  0092  3820               	iorlw	32
  1070  0093  009F               	movwf	31	;volatile
  1071  0094                     l1123:	
  1072                           
  1073                           ;ADC.c: 71:             TRISBbits.TRISB2 = 1;
  1074  0094  1683               	bsf	3,5	;RP0=1, select bank1
  1075  0095  1303               	bcf	3,6	;RP1=0, select bank1
  1076  0096  1506               	bsf	6,2	;volatile
  1077                           
  1078                           ;ADC.c: 72:             break;
  1079  0097  2917               	goto	l1151
  1080  0098                     l34:	
  1081                           ;ADC.c: 74:         case 9:
  1082                           
  1083                           
  1084                           ;ADC.c: 75:             ANSELHbits.ANS9 = 1;
  1085  0098  1683               	bsf	3,5	;RP0=1, select bank3
  1086  0099  1703               	bsf	3,6	;RP1=1, select bank3
  1087  009A  1489               	bsf	9,1	;volatile
  1088  009B                     l1125:	
  1089                           
  1090                           ;ADC.c: 76:             ADCON0bits.CHS = 9;
  1091  009B  1283               	bcf	3,5	;RP0=0, select bank0
  1092  009C  1303               	bcf	3,6	;RP1=0, select bank0
  1093  009D  081F               	movf	31,w	;volatile
  1094  009E  39C3               	andlw	-61
  1095  009F  3824               	iorlw	36
  1096  00A0  009F               	movwf	31	;volatile
  1097  00A1                     l1127:	
  1098                           
  1099                           ;ADC.c: 77:             TRISBbits.TRISB3 = 1;
  1100  00A1  1683               	bsf	3,5	;RP0=1, select bank1
  1101  00A2  1303               	bcf	3,6	;RP1=0, select bank1
  1102  00A3  1586               	bsf	6,3	;volatile
  1103                           
  1104                           ;ADC.c: 78:             break;
  1105  00A4  2917               	goto	l1151
  1106  00A5                     l35:	
  1107                           ;ADC.c: 80:         case 10:
  1108                           
  1109                           
  1110                           ;ADC.c: 81:             ANSELHbits.ANS10 = 1;
  1111  00A5  1683               	bsf	3,5	;RP0=1, select bank3
  1112  00A6  1703               	bsf	3,6	;RP1=1, select bank3
  1113  00A7  1509               	bsf	9,2	;volatile
  1114  00A8                     l1129:	
  1115                           
  1116                           ;ADC.c: 82:             ADCON0bits.CHS = 10;
  1117  00A8  1283               	bcf	3,5	;RP0=0, select bank0
  1118  00A9  1303               	bcf	3,6	;RP1=0, select bank0
  1119  00AA  081F               	movf	31,w	;volatile
  1120  00AB  39C3               	andlw	-61
  1121  00AC  3828               	iorlw	40
  1122  00AD  009F               	movwf	31	;volatile
  1123  00AE                     l1131:	
  1124                           
  1125                           ;ADC.c: 83:             TRISBbits.TRISB1 = 1;
  1126  00AE  1683               	bsf	3,5	;RP0=1, select bank1
  1127  00AF  1303               	bcf	3,6	;RP1=0, select bank1
  1128  00B0  1486               	bsf	6,1	;volatile
  1129                           
  1130                           ;ADC.c: 84:             break;
  1131  00B1  2917               	goto	l1151
  1132  00B2                     l36:	
  1133                           ;ADC.c: 86:         case 11:
  1134                           
  1135                           
  1136                           ;ADC.c: 87:             ANSELHbits.ANS11 = 1;
  1137  00B2  1683               	bsf	3,5	;RP0=1, select bank3
  1138  00B3  1703               	bsf	3,6	;RP1=1, select bank3
  1139  00B4  1589               	bsf	9,3	;volatile
  1140  00B5                     l1133:	
  1141                           
  1142                           ;ADC.c: 88:             ADCON0bits.CHS = 11;
  1143  00B5  1283               	bcf	3,5	;RP0=0, select bank0
  1144  00B6  1303               	bcf	3,6	;RP1=0, select bank0
  1145  00B7  081F               	movf	31,w	;volatile
  1146  00B8  39C3               	andlw	-61
  1147  00B9  382C               	iorlw	44
  1148  00BA  009F               	movwf	31	;volatile
  1149  00BB                     l1135:	
  1150                           
  1151                           ;ADC.c: 89:             TRISBbits.TRISB4 = 1;
  1152  00BB  1683               	bsf	3,5	;RP0=1, select bank1
  1153  00BC  1303               	bcf	3,6	;RP1=0, select bank1
  1154  00BD  1606               	bsf	6,4	;volatile
  1155                           
  1156                           ;ADC.c: 90:             break;
  1157  00BE  2917               	goto	l1151
  1158  00BF                     l37:	
  1159                           ;ADC.c: 92:         case 12:
  1160                           
  1161                           
  1162                           ;ADC.c: 93:             ANSELHbits.ANS12 = 1;
  1163  00BF  1683               	bsf	3,5	;RP0=1, select bank3
  1164  00C0  1703               	bsf	3,6	;RP1=1, select bank3
  1165  00C1  1609               	bsf	9,4	;volatile
  1166  00C2                     l1137:	
  1167                           
  1168                           ;ADC.c: 94:             ADCON0bits.CHS = 12;
  1169  00C2  1283               	bcf	3,5	;RP0=0, select bank0
  1170  00C3  1303               	bcf	3,6	;RP1=0, select bank0
  1171  00C4  081F               	movf	31,w	;volatile
  1172  00C5  39C3               	andlw	-61
  1173  00C6  3830               	iorlw	48
  1174  00C7  009F               	movwf	31	;volatile
  1175  00C8                     l1139:	
  1176                           
  1177                           ;ADC.c: 95:             TRISBbits.TRISB0 = 1;
  1178  00C8  1683               	bsf	3,5	;RP0=1, select bank1
  1179  00C9  1303               	bcf	3,6	;RP1=0, select bank1
  1180  00CA  1406               	bsf	6,0	;volatile
  1181                           
  1182                           ;ADC.c: 96:             break;
  1183  00CB  2917               	goto	l1151
  1184  00CC                     l38:	
  1185                           ;ADC.c: 98:         case 13:
  1186                           
  1187                           
  1188                           ;ADC.c: 99:             ANSELHbits.ANS13 = 1;
  1189  00CC  1683               	bsf	3,5	;RP0=1, select bank3
  1190  00CD  1703               	bsf	3,6	;RP1=1, select bank3
  1191  00CE  1689               	bsf	9,5	;volatile
  1192  00CF                     l1141:	
  1193                           
  1194                           ;ADC.c: 100:             ADCON0bits.CHS = 13;
  1195  00CF  1283               	bcf	3,5	;RP0=0, select bank0
  1196  00D0  1303               	bcf	3,6	;RP1=0, select bank0
  1197  00D1  081F               	movf	31,w	;volatile
  1198  00D2  39C3               	andlw	-61
  1199  00D3  3834               	iorlw	52
  1200  00D4  009F               	movwf	31	;volatile
  1201  00D5                     l1143:	
  1202                           
  1203                           ;ADC.c: 101:             TRISBbits.TRISB5 = 1;
  1204  00D5  1683               	bsf	3,5	;RP0=1, select bank1
  1205  00D6  1303               	bcf	3,6	;RP1=0, select bank1
  1206  00D7  1686               	bsf	6,5	;volatile
  1207                           
  1208                           ;ADC.c: 102:             break;
  1209  00D8  2917               	goto	l1151
  1210  00D9                     l1147:	
  1211  00D9  0875               	movf	ADC_CONFIG@canal,w
  1212  00DA  1283               	bcf	3,5	;RP0=0, select bank0
  1213  00DB  1303               	bcf	3,6	;RP1=0, select bank0
  1214  00DC  00A0               	movwf	??_ADC_CONFIG
  1215  00DD  01A1               	clrf	??_ADC_CONFIG+1
  1216                           
  1217                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1218                           ; Switch size 1, requested type "simple"
  1219                           ; Number of cases is 1, Range of values is 0 to 0
  1220                           ; switch strategies available:
  1221                           ; Name         Instructions Cycles
  1222                           ; simple_byte            4     3 (average)
  1223                           ; direct_byte           11     8 (fixed)
  1224                           ; jumptable            260     6 (fixed)
  1225                           ;	Chosen strategy is simple_byte
  1226  00DE  0821               	movf	??_ADC_CONFIG+1,w
  1227  00DF  3A00               	xorlw	0	; case 0
  1228  00E0  1903               	skipnz
  1229  00E1  28E3               	goto	l1227
  1230  00E2  2917               	goto	l1151
  1231  00E3                     l1227:	
  1232                           
  1233                           ; Switch size 1, requested type "simple"
  1234                           ; Number of cases is 14, Range of values is 0 to 13
  1235                           ; switch strategies available:
  1236                           ; Name         Instructions Cycles
  1237                           ; simple_byte           43    22 (average)
  1238                           ; direct_byte           50     8 (fixed)
  1239                           ; jumptable            260     6 (fixed)
  1240                           ;	Chosen strategy is simple_byte
  1241  00E3  0820               	movf	??_ADC_CONFIG,w
  1242  00E4  3A00               	xorlw	0	; case 0
  1243  00E5  1903               	skipnz
  1244  00E6  2825               	goto	l24
  1245  00E7  3A01               	xorlw	1	; case 1
  1246  00E8  1903               	skipnz
  1247  00E9  2830               	goto	l26
  1248  00EA  3A03               	xorlw	3	; case 2
  1249  00EB  1903               	skipnz
  1250  00EC  283D               	goto	l27
  1251  00ED  3A01               	xorlw	1	; case 3
  1252  00EE  1903               	skipnz
  1253  00EF  284A               	goto	l28
  1254  00F0  3A07               	xorlw	7	; case 4
  1255  00F1  1903               	skipnz
  1256  00F2  2857               	goto	l29
  1257  00F3  3A01               	xorlw	1	; case 5
  1258  00F4  1903               	skipnz
  1259  00F5  2864               	goto	l30
  1260  00F6  3A03               	xorlw	3	; case 6
  1261  00F7  1903               	skipnz
  1262  00F8  2871               	goto	l31
  1263  00F9  3A01               	xorlw	1	; case 7
  1264  00FA  1903               	skipnz
  1265  00FB  287E               	goto	l32
  1266  00FC  3A0F               	xorlw	15	; case 8
  1267  00FD  1903               	skipnz
  1268  00FE  288B               	goto	l33
  1269  00FF  3A01               	xorlw	1	; case 9
  1270  0100  1903               	skipnz
  1271  0101  2898               	goto	l34
  1272  0102  3A03               	xorlw	3	; case 10
  1273  0103  1903               	skipnz
  1274  0104  28A5               	goto	l35
  1275  0105  3A01               	xorlw	1	; case 11
  1276  0106  1903               	skipnz
  1277  0107  28B2               	goto	l36
  1278  0108  3A07               	xorlw	7	; case 12
  1279  0109  1903               	skipnz
  1280  010A  28BF               	goto	l37
  1281  010B  3A01               	xorlw	1	; case 13
  1282  010C  1903               	skipnz
  1283  010D  28CC               	goto	l38
  1284  010E  2917               	goto	l1151
  1285  010F                     l40:	
  1286                           ;ADC.c: 105:         case 0:
  1287                           
  1288                           
  1289                           ;ADC.c: 106:             ADCON1bits.ADFM = 0;
  1290  010F  1683               	bsf	3,5	;RP0=1, select bank1
  1291  0110  1303               	bcf	3,6	;RP1=0, select bank1
  1292  0111  139F               	bcf	31,7	;volatile
  1293                           
  1294                           ;ADC.c: 107:             break;
  1295  0112  2928               	goto	l43
  1296  0113                     l42:	
  1297                           ;ADC.c: 108:         case 1:
  1298                           
  1299                           
  1300                           ;ADC.c: 109:             ADCON1bits.ADFM = 1;
  1301  0113  1683               	bsf	3,5	;RP0=1, select bank1
  1302  0114  1303               	bcf	3,6	;RP1=0, select bank1
  1303  0115  179F               	bsf	31,7	;volatile
  1304                           
  1305                           ;ADC.c: 110:             break;
  1306  0116  2928               	goto	l43
  1307  0117                     l1151:	
  1308  0117  0874               	movf	ADC_CONFIG@justif,w
  1309  0118  1283               	bcf	3,5	;RP0=0, select bank0
  1310  0119  00A0               	movwf	??_ADC_CONFIG
  1311  011A  01A1               	clrf	??_ADC_CONFIG+1
  1312                           
  1313                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1314                           ; Switch size 1, requested type "simple"
  1315                           ; Number of cases is 1, Range of values is 0 to 0
  1316                           ; switch strategies available:
  1317                           ; Name         Instructions Cycles
  1318                           ; simple_byte            4     3 (average)
  1319                           ; direct_byte           11     8 (fixed)
  1320                           ; jumptable            260     6 (fixed)
  1321                           ;	Chosen strategy is simple_byte
  1322  011B  0821               	movf	??_ADC_CONFIG+1,w
  1323  011C  3A00               	xorlw	0	; case 0
  1324  011D  1903               	skipnz
  1325  011E  2920               	goto	l1229
  1326  011F  2928               	goto	l43
  1327  0120                     l1229:	
  1328                           
  1329                           ; Switch size 1, requested type "simple"
  1330                           ; Number of cases is 2, Range of values is 0 to 1
  1331                           ; switch strategies available:
  1332                           ; Name         Instructions Cycles
  1333                           ; simple_byte            7     4 (average)
  1334                           ; direct_byte           14     8 (fixed)
  1335                           ; jumptable            260     6 (fixed)
  1336                           ;	Chosen strategy is simple_byte
  1337  0120  0820               	movf	??_ADC_CONFIG,w
  1338  0121  3A00               	xorlw	0	; case 0
  1339  0122  1903               	skipnz
  1340  0123  290F               	goto	l40
  1341  0124  3A01               	xorlw	1	; case 1
  1342  0125  1903               	skipnz
  1343  0126  2913               	goto	l42
  1344  0127  2928               	goto	l43
  1345  0128                     l43:	
  1346  0128  0008               	return
  1347  0129                     __end_of_ADC_CONFIG:	
  1348                           
  1349                           	psect	text4
  1350  0129                     __ptext4:	
  1351 ;; *************** function _ISR *****************
  1352 ;; Defined at:
  1353 ;;		line 36 in file "slave.c"
  1354 ;; Parameters:    Size  Location     Type
  1355 ;;		None
  1356 ;; Auto vars:     Size  Location     Type
  1357 ;;		None
  1358 ;; Return value:  Size  Location     Type
  1359 ;;                  1    wreg      void 
  1360 ;; Registers used:
  1361 ;;		wreg, status,2, status,0, pclath, cstack
  1362 ;; Tracked objects:
  1363 ;;		On entry : 0/0
  1364 ;;		On exit  : 0/0
  1365 ;;		Unchanged: 0/0
  1366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1367 ;;      Params:         0       0       0       0       0
  1368 ;;      Locals:         0       0       0       0       0
  1369 ;;      Temps:          3       0       0       0       0
  1370 ;;      Totals:         3       0       0       0       0
  1371 ;;Total ram usage:        3 bytes
  1372 ;; Hardware stack levels used:    1
  1373 ;; Hardware stack levels required when called:    2
  1374 ;; This function calls:
  1375 ;;		_spiRead
  1376 ;;		_spiWrite
  1377 ;; This function is called by:
  1378 ;;		Interrupt level 1
  1379 ;; This function uses a non-reentrant model
  1380 ;;
  1381                           
  1382                           
  1383                           ;psect for function _ISR
  1384  0129                     _ISR:	
  1385  0129                     i1l835:	
  1386                           
  1387                           ;slave.c: 37:     if(PIR1bits.ADIF == 1){
  1388  0129  1283               	bcf	3,5	;RP0=0, select bank0
  1389  012A  1303               	bcf	3,6	;RP1=0, select bank0
  1390  012B  1F0C               	btfss	12,6	;volatile
  1391  012C  292E               	goto	u3_21
  1392  012D  292F               	goto	u3_20
  1393  012E                     u3_21:	
  1394  012E  2950               	goto	i1l859
  1395  012F                     u3_20:	
  1396  012F                     i1l837:	
  1397                           
  1398                           ;slave.c: 38:         if(canal == 0){
  1399  012F  0877               	movf	_canal,w
  1400  0130  1D03               	btfss	3,2
  1401  0131  2933               	goto	u4_21
  1402  0132  2934               	goto	u4_20
  1403  0133                     u4_21:	
  1404  0133  2940               	goto	i1l847
  1405  0134                     u4_20:	
  1406  0134                     i1l839:	
  1407                           
  1408                           ;slave.c: 39:             ADCON0bits.CHS = 10;
  1409  0134  081F               	movf	31,w	;volatile
  1410  0135  39C3               	andlw	-61
  1411  0136  3828               	iorlw	40
  1412  0137  009F               	movwf	31	;volatile
  1413  0138                     i1l841:	
  1414                           
  1415                           ;slave.c: 40:             adc1 = ADRESH;
  1416  0138  081E               	movf	30,w	;volatile
  1417  0139  00F1               	movwf	??_ISR
  1418  013A  0871               	movf	??_ISR,w
  1419  013B  00F9               	movwf	_adc1
  1420  013C                     i1l843:	
  1421                           
  1422                           ;slave.c: 41:             canal = 1;
  1423  013C  01F7               	clrf	_canal
  1424  013D  0AF7               	incf	_canal,f
  1425  013E                     i1l845:	
  1426                           
  1427                           ;slave.c: 42:             ADIF = 0;
  1428  013E  130C               	bcf	12,6	;volatile
  1429                           
  1430                           ;slave.c: 43:         }
  1431  013F  294F               	goto	i1l857
  1432  0140                     i1l847:	
  1433  0140  0377               	decf	_canal,w
  1434  0141  1D03               	btfss	3,2
  1435  0142  2944               	goto	u5_21
  1436  0143  2945               	goto	u5_20
  1437  0144                     u5_21:	
  1438  0144  294F               	goto	i1l857
  1439  0145                     u5_20:	
  1440  0145                     i1l849:	
  1441                           
  1442                           ;slave.c: 45:             ADCON0bits.CHS = 12;
  1443  0145  081F               	movf	31,w	;volatile
  1444  0146  39C3               	andlw	-61
  1445  0147  3830               	iorlw	48
  1446  0148  009F               	movwf	31	;volatile
  1447  0149                     i1l851:	
  1448                           
  1449                           ;slave.c: 46:             adc2 = ADRESH;
  1450  0149  081E               	movf	30,w	;volatile
  1451  014A  00F1               	movwf	??_ISR
  1452  014B  0871               	movf	??_ISR,w
  1453  014C  00F8               	movwf	_adc2
  1454  014D                     i1l853:	
  1455                           
  1456                           ;slave.c: 47:             canal = 0;
  1457  014D  01F7               	clrf	_canal
  1458  014E  293E               	goto	i1l845
  1459  014F                     i1l857:	
  1460                           
  1461                           ;slave.c: 50:         ADCON0bits.GO = 1;
  1462  014F  149F               	bsf	31,1	;volatile
  1463  0150                     i1l859:	
  1464                           
  1465                           ;slave.c: 53:     if(SSPIF==1){
  1466  0150  1D8C               	btfss	12,3	;volatile
  1467  0151  2953               	goto	u6_21
  1468  0152  2954               	goto	u6_20
  1469  0153                     u6_21:	
  1470  0153  297D               	goto	i1l99
  1471  0154                     u6_20:	
  1472  0154                     i1l861:	
  1473                           
  1474                           ;slave.c: 54:         opcion = spiRead();
  1475  0154  120A  118A  21DF  120A  118A  	fcall	_spiRead
  1476  0159  00F1               	movwf	??_ISR
  1477  015A  0871               	movf	??_ISR,w
  1478  015B  00F6               	movwf	_opcion
  1479                           
  1480                           ;slave.c: 55:         spiWrite(adc2);
  1481  015C  0878               	movf	_adc2,w
  1482  015D  120A  118A  21EF  120A  118A  	fcall	_spiWrite
  1483  0162                     i1l863:	
  1484                           
  1485                           ;slave.c: 56:         if(opcion == 0x01){
  1486  0162  0376               	decf	_opcion,w
  1487  0163  1D03               	btfss	3,2
  1488  0164  2966               	goto	u7_21
  1489  0165  2967               	goto	u7_20
  1490  0166                     u7_21:	
  1491  0166  296E               	goto	i1l867
  1492  0167                     u7_20:	
  1493  0167                     i1l865:	
  1494                           
  1495                           ;slave.c: 57:             spiWrite(adc1);
  1496  0167  0879               	movf	_adc1,w
  1497  0168  120A  118A  21EF  120A  118A  	fcall	_spiWrite
  1498                           
  1499                           ;slave.c: 58:         }
  1500  016D  297A               	goto	i1l871
  1501  016E                     i1l867:	
  1502  016E  3002               	movlw	2
  1503  016F  0676               	xorwf	_opcion,w
  1504  0170  1D03               	btfss	3,2
  1505  0171  2973               	goto	u8_21
  1506  0172  2974               	goto	u8_20
  1507  0173                     u8_21:	
  1508  0173  297A               	goto	i1l871
  1509  0174                     u8_20:	
  1510  0174                     i1l869:	
  1511                           
  1512                           ;slave.c: 60:             spiWrite(adc2);
  1513  0174  0878               	movf	_adc2,w
  1514  0175  120A  118A  21EF  120A  118A  	fcall	_spiWrite
  1515  017A                     i1l871:	
  1516                           
  1517                           ;slave.c: 62:         SSPIF = 0;
  1518  017A  1283               	bcf	3,5	;RP0=0, select bank0
  1519  017B  1303               	bcf	3,6	;RP1=0, select bank0
  1520  017C  118C               	bcf	12,3	;volatile
  1521  017D                     i1l99:	
  1522  017D  0873               	movf	??_ISR+2,w
  1523  017E  008A               	movwf	10
  1524  017F  0E72               	swapf	(??_ISR+1)^(0+4294967168),w
  1525  0180  0083               	movwf	3
  1526  0181  0EFE               	swapf	btemp,f
  1527  0182  0E7E               	swapf	btemp,w
  1528  0183  0009               	retfie
  1529  0184                     __end_of_ISR:	
  1530                           
  1531                           	psect	intentry
  1532  0004                     __pintentry:	
  1533                           ;incstack = 0
  1534                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  1535                           
  1536  0004                     interrupt_function:	
  1537  007E                     saved_w	set	btemp
  1538  0004  00FE               	movwf	btemp
  1539  0005  0E03               	swapf	3,w
  1540  0006  00F2               	movwf	??_ISR+1
  1541  0007  080A               	movf	10,w
  1542  0008  00F3               	movwf	??_ISR+2
  1543  0009  120A  118A  2929   	ljmp	_ISR
  1544                           
  1545                           	psect	text5
  1546  01EF                     __ptext5:	
  1547 ;; *************** function _spiWrite *****************
  1548 ;; Defined at:
  1549 ;;		line 34 in file "SPIS.c"
  1550 ;; Parameters:    Size  Location     Type
  1551 ;;  dat             1    wreg     unsigned char 
  1552 ;; Auto vars:     Size  Location     Type
  1553 ;;  dat             1    0[COMMON] unsigned char 
  1554 ;; Return value:  Size  Location     Type
  1555 ;;                  1    wreg      void 
  1556 ;; Registers used:
  1557 ;;		wreg
  1558 ;; Tracked objects:
  1559 ;;		On entry : 0/0
  1560 ;;		On exit  : 0/0
  1561 ;;		Unchanged: 0/0
  1562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1563 ;;      Params:         0       0       0       0       0
  1564 ;;      Locals:         1       0       0       0       0
  1565 ;;      Temps:          0       0       0       0       0
  1566 ;;      Totals:         1       0       0       0       0
  1567 ;;Total ram usage:        1 bytes
  1568 ;; Hardware stack levels used:    1
  1569 ;; This function calls:
  1570 ;;		Nothing
  1571 ;; This function is called by:
  1572 ;;		_ISR
  1573 ;; This function uses a non-reentrant model
  1574 ;;
  1575                           
  1576                           
  1577                           ;psect for function _spiWrite
  1578  01EF                     _spiWrite:	
  1579                           
  1580                           ;incstack = 0
  1581                           ; Regs used in _spiWrite: [wreg]
  1582                           ;spiWrite@dat stored from wreg
  1583  01EF  00F0               	movwf	spiWrite@dat
  1584  01F0                     i1l823:	
  1585                           
  1586                           ;SPIS.c: 34: void spiWrite(char dat);SPIS.c: 35: {;SPIS.c: 36:     SSPBUF = dat;
  1587  01F0  0870               	movf	spiWrite@dat,w
  1588  01F1  1283               	bcf	3,5	;RP0=0, select bank0
  1589  01F2  1303               	bcf	3,6	;RP1=0, select bank0
  1590  01F3  0093               	movwf	19	;volatile
  1591  01F4                     i1l133:	
  1592  01F4  0008               	return
  1593  01F5                     __end_of_spiWrite:	
  1594                           
  1595                           	psect	text6
  1596  01DF                     __ptext6:	
  1597 ;; *************** function _spiRead *****************
  1598 ;; Defined at:
  1599 ;;		line 47 in file "SPIS.c"
  1600 ;; Parameters:    Size  Location     Type
  1601 ;;		None
  1602 ;; Auto vars:     Size  Location     Type
  1603 ;;		None
  1604 ;; Return value:  Size  Location     Type
  1605 ;;                  1    wreg      unsigned char 
  1606 ;; Registers used:
  1607 ;;		wreg, status,2, status,0, pclath, cstack
  1608 ;; Tracked objects:
  1609 ;;		On entry : 0/0
  1610 ;;		On exit  : 0/0
  1611 ;;		Unchanged: 0/0
  1612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1613 ;;      Params:         0       0       0       0       0
  1614 ;;      Locals:         0       0       0       0       0
  1615 ;;      Temps:          0       0       0       0       0
  1616 ;;      Totals:         0       0       0       0       0
  1617 ;;Total ram usage:        0 bytes
  1618 ;; Hardware stack levels used:    1
  1619 ;; Hardware stack levels required when called:    1
  1620 ;; This function calls:
  1621 ;;		_spiReceiveWait
  1622 ;; This function is called by:
  1623 ;;		_ISR
  1624 ;; This function uses a non-reentrant model
  1625 ;;
  1626                           
  1627                           
  1628                           ;psect for function _spiRead
  1629  01DF                     _spiRead:	
  1630  01DF                     i1l817:	
  1631                           ;incstack = 0
  1632                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1633                           
  1634                           
  1635                           ;SPIS.c: 49:     spiReceiveWait();
  1636  01DF  120A  118A  21E8  120A  118A  	fcall	_spiReceiveWait
  1637  01E4                     i1l819:	
  1638                           
  1639                           ;SPIS.c: 50:     return(SSPBUF);
  1640  01E4  1283               	bcf	3,5	;RP0=0, select bank0
  1641  01E5  1303               	bcf	3,6	;RP1=0, select bank0
  1642  01E6  0813               	movf	19,w	;volatile
  1643  01E7                     i1l141:	
  1644  01E7  0008               	return
  1645  01E8                     __end_of_spiRead:	
  1646                           
  1647                           	psect	text7
  1648  01E8                     __ptext7:	
  1649 ;; *************** function _spiReceiveWait *****************
  1650 ;; Defined at:
  1651 ;;		line 29 in file "SPIS.c"
  1652 ;; Parameters:    Size  Location     Type
  1653 ;;		None
  1654 ;; Auto vars:     Size  Location     Type
  1655 ;;		None
  1656 ;; Return value:  Size  Location     Type
  1657 ;;                  1    wreg      void 
  1658 ;; Registers used:
  1659 ;;		None
  1660 ;; Tracked objects:
  1661 ;;		On entry : 0/0
  1662 ;;		On exit  : 0/0
  1663 ;;		Unchanged: 0/0
  1664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1665 ;;      Params:         0       0       0       0       0
  1666 ;;      Locals:         0       0       0       0       0
  1667 ;;      Temps:          0       0       0       0       0
  1668 ;;      Totals:         0       0       0       0       0
  1669 ;;Total ram usage:        0 bytes
  1670 ;; Hardware stack levels used:    1
  1671 ;; This function calls:
  1672 ;;		Nothing
  1673 ;; This function is called by:
  1674 ;;		_spiRead
  1675 ;; This function uses a non-reentrant model
  1676 ;;
  1677                           
  1678                           
  1679                           ;psect for function _spiReceiveWait
  1680  01E8                     _spiReceiveWait:	
  1681  01E8                     i1l733:	
  1682                           ;incstack = 0
  1683                           ; Regs used in _spiReceiveWait: []
  1684                           
  1685  01E8                     i1l127:	
  1686                           ;SPIS.c: 31:     while ( !SSPSTATbits.BF );
  1687                           
  1688  01E8  1683               	bsf	3,5	;RP0=1, select bank1
  1689  01E9  1303               	bcf	3,6	;RP1=0, select bank1
  1690  01EA  1C14               	btfss	20,0	;volatile
  1691  01EB  29ED               	goto	u1_21
  1692  01EC  29EE               	goto	u1_20
  1693  01ED                     u1_21:	
  1694  01ED  29E8               	goto	i1l127
  1695  01EE                     u1_20:	
  1696  01EE                     i1l130:	
  1697  01EE  0008               	return
  1698  01EF                     __end_of_spiReceiveWait:	
  1699  007E                     btemp	set	126	;btemp
  1700  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80      3       3
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ADC_CONFIG

Critical Paths under _ISR in COMMON

    _ISR->_spiWrite

Critical Paths under _main in BANK0

    _main->_spiInit

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     698
                         _ADC_CONFIG
                      _ADC_INTERRUPT
                            _spiInit
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     456
                                              4 COMMON     1     1      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (1) _ADC_INTERRUPT                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_CONFIG                                           4     3      1     242
                                              4 COMMON     2     1      1
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  3     3      0      15
                                              1 COMMON     3     3      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (3) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (4) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_CONFIG
   _ADC_INTERRUPT
   _spiInit

 _ISR (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      3       3       5        3.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       D      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Feb 15 13:10:27 2020

     __size_of_ADC_CONFIG 0112               __CFG_CP$OFF 0000           ADC_CONFIG@canal 0075  
             _SSPSTATbits 0094                        l30 0064                        l31 0071  
                      l40 010F                        l32 007E                        l24 0025  
                      l33 008B                        l42 0113                        l34 0098  
                      l26 0030                        l43 0128                        l35 00A5  
                      l27 003D                        l36 00B2                        l28 004A  
                      l37 00BF                        l29 0057                        l38 00CC  
                      l46 01DE                       l104 01B4                       l105 01B4  
                     l123 01D0                       l124 01D5                       l815 01D6  
                     u100 01C0                       u101 01BF              __CFG_CPD$OFF 0000  
                     _ISR 0129          ADC_CONFIG@justif 0074              __CFG_LVP$OFF 0000  
                    ?_ISR 0070                      l1101 004D                      l1111 006D  
                    l1103 0053                      l1121 008E                      l1113 0074  
                    l1105 005A                      l1131 00AE                      l1123 0094  
                    l1115 007A                      l1107 0060                      l1141 00CF  
                    l1133 00B5                      l1125 009B                      l1117 0081  
                    l1109 0067                      l1143 00D5                      l1135 00BB  
                    l1127 00A1                      l1119 0087                      l1151 0117  
                    l1137 00C2                      l1129 00A8                      l1081 0018  
                    l1161 01B9                      l1227 00E3                      l1139 00C8  
                    l1091 002C                      l1147 00D9                      l1083 001C  
                    l1163 01C0                      l1171 0184                      l1229 0120  
                    l1093 0033                      l1085 0020                      l1165 01C6  
                    l1181 01A5                      l1173 018F                      l1095 0039  
                    l1087 0023                      l1167 01C8                      l1183 01A6  
                    l1175 0196                      l1097 0040                      l1089 0028  
                    l1169 01CF                      l1185 01A9                      l1177 019D  
                    l1099 0046                      l1179 01A2                      _ADIF 0066  
                    i1l99 017D                      u1_20 01EE                      u1_21 01ED  
                    u3_20 012F                      u3_21 012E                      u4_20 0134  
                    u4_21 0133                      u5_20 0145                      u5_21 0144  
                    u6_20 0154                      u6_21 0153                      u7_20 0167  
                    u7_21 0166                      u8_20 0174                      u8_21 0173  
            __CFG_WRT$OFF 0000                      _adc1 0079                      _adc2 0078  
  __size_of_ADC_INTERRUPT 0009                      _main 0184                      btemp 007E  
                    start 000C             __CFG_IESO$OFF 0000                     ??_ISR 0071  
                   ?_main 0070             __CFG_WDTE$OFF 0000                     _ANSEL 0188  
                   i1l130 01EE                     i1l141 01E7                     i1l133 01F4  
                   i1l127 01E8                     i1l733 01E8                     i1l823 01F0  
                   i1l817 01DF                     i1l841 0138                     i1l819 01E4  
                   i1l851 0149                     i1l843 013C                     i1l835 0129  
                   i1l861 0154                     i1l853 014D                     i1l845 013E  
                   i1l837 012F                     i1l871 017A                     i1l863 0162  
                   i1l839 0134                     i1l847 0140                     i1l865 0167  
                   i1l849 0145                     i1l857 014F                     i1l867 016E  
                   i1l859 0150                     i1l869 0174                     _PORTA 0005  
                   _TRISA 0085                     _TRISD 0088                     _SSPIE 0463  
                   _SSPIF 0063            __CFG_FCMEN$OFF 0000                     _canal 0077  
          __CFG_BOREN$OFF 0000                     pclath 000A           __end_of_spiInit 01D6  
         __end_of_spiRead 01E8                     status 0003                     wtemp0 007E  
          __CFG_MCLRE$OFF 0000           __initialization 000F              __end_of_main 01B8  
           _ADC_INTERRUPT 01D6                    ??_main 0076              ??_ADC_CONFIG 0020  
                  _ADRESH 001E                    _ANSELH 0189                    _TRISC3 043B  
                  _TRISC5 043D                    _SSPCON 0014                    _SSPBUF 0013  
          __CFG_PWRTE$OFF 0000        __end_of_ADC_CONFIG 0129            ?_ADC_INTERRUPT 0070  
                  _opcion 0076                    saved_w 007E          __end_of_spiWrite 01F5  
               ??_spiInit 0074                 ??_spiRead 0070   __end_of__initialization 0013  
          __pcstackCOMMON 0070                __pmaintext 0184           ??_ADC_INTERRUPT 0074  
              __pintentry 0004   __size_of_spiReceiveWait 0007                   _SSPSTAT 0094  
               ?_spiWrite 0070                 _ANSELbits 0188                   __ptext1 01B8  
                 __ptext2 01D6                   __ptext3 0017                   __ptext4 0129  
                 __ptext5 01EF                   __ptext6 01DF                   __ptext7 01E8  
            __size_of_ISR 005B                   _spiInit 01B8                   _spiRead 01DF  
    end_of_initialization 0013                ??_spiWrite 0070                 _TRISAbits 0085  
               _TRISBbits 0086                 _TRISEbits 0089               spiWrite@dat 0070  
          _spiReceiveWait 01E8       start_initialization 000F               __end_of_ISR 0184  
__CFG_FOSC$INTRC_NOCLKOUT 0000    __end_of_spiReceiveWait 01EF               __pbssCOMMON 0076  
               ___latbits 0002             __pcstackBANK0 0020           ?_spiReceiveWait 0070  
   __end_of_ADC_INTERRUPT 01DF         __size_of_spiWrite 0006                  ?_spiInit 0020  
                ?_spiRead 0070      spiInit@sTransmitEdge 0022         interrupt_function 0004  
                _PIE1bits 008C        spiInit@sDataSample 0020                  _PIR1bits 000C  
              _ADCON0bits 001F                _ADCON1bits 009F                _ADC_CONFIG 0017  
              _ANSELHbits 0189          __size_of_spiInit 001E          __size_of_spiRead 0009  
       __CFG_BOR4V$BOR40V 0000             __size_of_main 0034                  _spiWrite 01EF  
            spiInit@sType 0074         spiInit@sClockIdle 0021                _INTCONbits 000B  
             ?_ADC_CONFIG 0074                  intlevel1 0000          ??_spiReceiveWait 0070  
