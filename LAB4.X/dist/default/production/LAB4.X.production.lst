

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Feb 17 13:06:21 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.10
    20                           ; Generated 31/07/2019 GMT
    21                           ; 
    22                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  000E                     	;# 
   224  000E                     	;# 
   225  000F                     	;# 
   226  0010                     	;# 
   227  0011                     	;# 
   228  0012                     	;# 
   229  0013                     	;# 
   230  0014                     	;# 
   231  0015                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001D                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  0081                     	;# 
   245  0085                     	;# 
   246  0086                     	;# 
   247  0087                     	;# 
   248  0088                     	;# 
   249  0089                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  008F                     	;# 
   254  0090                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0094                     	;# 
   261  0095                     	;# 
   262  0096                     	;# 
   263  0097                     	;# 
   264  0098                     	;# 
   265  0099                     	;# 
   266  009A                     	;# 
   267  009B                     	;# 
   268  009C                     	;# 
   269  009D                     	;# 
   270  009E                     	;# 
   271  009F                     	;# 
   272  0105                     	;# 
   273  0107                     	;# 
   274  0108                     	;# 
   275  0109                     	;# 
   276  010C                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  010F                     	;# 
   281  0185                     	;# 
   282  0187                     	;# 
   283  0188                     	;# 
   284  0189                     	;# 
   285  018C                     	;# 
   286  018D                     	;# 
   287  0000                     	;# 
   288  0001                     	;# 
   289  0002                     	;# 
   290  0003                     	;# 
   291  0004                     	;# 
   292  0005                     	;# 
   293  0006                     	;# 
   294  0007                     	;# 
   295  0008                     	;# 
   296  0009                     	;# 
   297  000A                     	;# 
   298  000B                     	;# 
   299  000C                     	;# 
   300  000D                     	;# 
   301  000E                     	;# 
   302  000E                     	;# 
   303  000F                     	;# 
   304  0010                     	;# 
   305  0011                     	;# 
   306  0012                     	;# 
   307  0013                     	;# 
   308  0014                     	;# 
   309  0015                     	;# 
   310  0015                     	;# 
   311  0016                     	;# 
   312  0017                     	;# 
   313  0018                     	;# 
   314  0019                     	;# 
   315  001A                     	;# 
   316  001B                     	;# 
   317  001B                     	;# 
   318  001C                     	;# 
   319  001D                     	;# 
   320  001E                     	;# 
   321  001F                     	;# 
   322  0081                     	;# 
   323  0085                     	;# 
   324  0086                     	;# 
   325  0087                     	;# 
   326  0088                     	;# 
   327  0089                     	;# 
   328  008C                     	;# 
   329  008D                     	;# 
   330  008E                     	;# 
   331  008F                     	;# 
   332  0090                     	;# 
   333  0091                     	;# 
   334  0092                     	;# 
   335  0093                     	;# 
   336  0093                     	;# 
   337  0093                     	;# 
   338  0094                     	;# 
   339  0095                     	;# 
   340  0096                     	;# 
   341  0097                     	;# 
   342  0098                     	;# 
   343  0099                     	;# 
   344  009A                     	;# 
   345  009B                     	;# 
   346  009C                     	;# 
   347  009D                     	;# 
   348  009E                     	;# 
   349  009F                     	;# 
   350  0105                     	;# 
   351  0107                     	;# 
   352  0108                     	;# 
   353  0109                     	;# 
   354  010C                     	;# 
   355  010C                     	;# 
   356  010D                     	;# 
   357  010E                     	;# 
   358  010F                     	;# 
   359  0185                     	;# 
   360  0187                     	;# 
   361  0188                     	;# 
   362  0189                     	;# 
   363  018C                     	;# 
   364  018D                     	;# 
   365  0013                     _SSPBUF	set	19
   366  0014                     _SSPCON	set	20
   367  0005                     _PORTA	set	5
   368  0006                     _PORTB	set	6
   369  001A                     _RCREG	set	26
   370  0019                     _TXREG	set	25
   371  0065                     _RCIF	set	101
   372  00C4                     _CREN	set	196
   373  00C7                     _SPEN	set	199
   374  0094                     _SSPSTATbits	set	148
   375  0094                     _SSPSTAT	set	148
   376  0085                     _TRISA	set	133
   377  0086                     _TRISB	set	134
   378  0099                     _SPBRG	set	153
   379  043B                     _TRISC3	set	1083
   380  043D                     _TRISC5	set	1085
   381  04C1                     _TRMT	set	1217
   382  04C5                     _TXEN	set	1221
   383  043E                     _TRISC6	set	1086
   384  043F                     _TRISC7	set	1087
   385  04C4                     _SYNC	set	1220
   386  04C2                     _BRGH	set	1218
   387  0188                     _ANSEL	set	392
   388  0189                     _ANSELH	set	393
   389                           
   390                           ; #config settings
   391  0000                     
   392                           	psect	cinit
   393  07FB                     start_initialization:	
   394  07FB                     __initialization:	
   395                           
   396                           ; Clear objects allocated to COMMON
   397  07FB  01FD               	clrf	__pbssCOMMON& (0+127)
   398  07FC                     end_of_initialization:	
   399                           ;End of C runtime variable initialization code
   400                           
   401  07FC                     __end_of__initialization:	
   402  07FC  0183               	clrf	3
   403  07FD  120A  118A  2E02   	ljmp	_main	;jump to C main() function
   404                           
   405                           	psect	bssCOMMON
   406  007D                     __pbssCOMMON:	
   407  007D                     _valeido:	
   408  007D                     	ds	1
   409                           
   410                           	psect	cstackCOMMON
   411  0070                     __pcstackCOMMON:	
   412  0070                     ?_spiInit:	
   413  0070                     ?_spiWrite:	
   414                           ; 1 bytes @ 0x0
   415                           
   416  0070                     ??_spiWrite:	
   417                           ; 1 bytes @ 0x0
   418                           
   419  0070                     ?_spiRead:	
   420                           ; 1 bytes @ 0x0
   421                           
   422  0070                     ??_spiRead:	
   423                           ; 1 bytes @ 0x0
   424                           
   425  0070                     ?_UART_Write:	
   426                           ; 1 bytes @ 0x0
   427                           
   428  0070                     ??_UART_Write:	
   429                           ; 1 bytes @ 0x0
   430                           
   431  0070                     ?_UART_Read:	
   432                           ; 1 bytes @ 0x0
   433                           
   434  0070                     ??_UART_Read:	
   435                           ; 1 bytes @ 0x0
   436                           
   437  0070                     ?_main:	
   438                           ; 1 bytes @ 0x0
   439                           
   440  0070                     ?_spiReceiveWait:	
   441                           ; 1 bytes @ 0x0
   442                           
   443  0070                     ??_spiReceiveWait:	
   444                           ; 1 bytes @ 0x0
   445                           
   446  0070                     ?___aldiv:	
   447                           ; 1 bytes @ 0x0
   448                           
   449  0070                     spiInit@sDataSample:	
   450                           ; 4 bytes @ 0x0
   451                           
   452  0070                     spiWrite@dat:	
   453                           ; 1 bytes @ 0x0
   454                           
   455  0070                     ___aldiv@divisor:	
   456                           ; 1 bytes @ 0x0
   457                           
   458                           
   459                           ; 4 bytes @ 0x0
   460  0070                     	ds	1
   461  0071                     spiInit@sClockIdle:	
   462                           
   463                           ; 1 bytes @ 0x1
   464  0071                     	ds	1
   465  0072                     UART_Write@data:	
   466  0072                     spiInit@sTransmitEdge:	
   467                           ; 1 bytes @ 0x2
   468                           
   469                           
   470                           ; 1 bytes @ 0x2
   471  0072                     	ds	1
   472  0073                     ??_spiInit:	
   473  0073                     spiInit@sType:	
   474                           ; 1 bytes @ 0x3
   475                           
   476                           
   477                           ; 1 bytes @ 0x3
   478  0073                     	ds	1
   479  0074                     ___aldiv@dividend:	
   480                           
   481                           ; 4 bytes @ 0x4
   482  0074                     	ds	4
   483  0078                     ??___aldiv:	
   484                           
   485                           ; 1 bytes @ 0x8
   486  0078                     	ds	1
   487  0079                     UART_Init@x:	
   488                           
   489                           ; 2 bytes @ 0x9
   490  0079                     	ds	2
   491  007B                     ??_main:	
   492                           
   493                           ; 1 bytes @ 0xB
   494  007B                     	ds	2
   495                           
   496                           	psect	cstackBANK0
   497  0020                     __pcstackBANK0:	
   498  0020                     ___aldiv@counter:	
   499                           
   500                           ; 1 bytes @ 0x0
   501  0020                     	ds	1
   502  0021                     ___aldiv@sign:	
   503                           
   504                           ; 1 bytes @ 0x1
   505  0021                     	ds	1
   506  0022                     ___aldiv@quotient:	
   507                           
   508                           ; 4 bytes @ 0x2
   509  0022                     	ds	4
   510  0026                     ?_UART_Init:	
   511  0026                     UART_Init@baudrate:	
   512                           ; 1 bytes @ 0x6
   513                           
   514                           
   515                           ; 4 bytes @ 0x6
   516  0026                     	ds	4
   517  002A                     ??_UART_Init:	
   518                           
   519                           ; 1 bytes @ 0xA
   520  002A                     	ds	12
   521  0036                     main@COMPU:	
   522                           
   523                           ; 2 bytes @ 0x16
   524  0036                     	ds	2
   525  0038                     main@POT1:	
   526                           
   527                           ; 1 bytes @ 0x18
   528  0038                     	ds	1
   529  0039                     main@POT2:	
   530                           
   531                           ; 1 bytes @ 0x19
   532  0039                     	ds	1
   533                           
   534                           	psect	maintext
   535  0602                     __pmaintext:	
   536 ;;
   537 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   538 ;;
   539 ;; *************** function _main *****************
   540 ;; Defined at:
   541 ;;		line 32 in file "MASTER.c"
   542 ;; Parameters:    Size  Location     Type
   543 ;;		None
   544 ;; Auto vars:     Size  Location     Type
   545 ;;  COMPU           2   22[BANK0 ] unsigned int 
   546 ;;  POT2            1   25[BANK0 ] unsigned char 
   547 ;;  POT1            1   24[BANK0 ] unsigned char 
   548 ;; Return value:  Size  Location     Type
   549 ;;                  1    wreg      void 
   550 ;; Registers used:
   551 ;;		wreg, status,2, status,0, pclath, cstack
   552 ;; Tracked objects:
   553 ;;		On entry : B00/0
   554 ;;		On exit  : 0/0
   555 ;;		Unchanged: 0/0
   556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   557 ;;      Params:         0       0       0       0       0
   558 ;;      Locals:         0       4       0       0       0
   559 ;;      Temps:          2       0       0       0       0
   560 ;;      Totals:         2       4       0       0       0
   561 ;;Total ram usage:        6 bytes
   562 ;; Hardware stack levels required when called:    2
   563 ;; This function calls:
   564 ;;		_UART_Init
   565 ;;		_UART_Read
   566 ;;		_UART_Write
   567 ;;		_spiInit
   568 ;;		_spiRead
   569 ;;		_spiWrite
   570 ;; This function is called by:
   571 ;;		Startup code after reset
   572 ;; This function uses a non-reentrant model
   573 ;;
   574                           
   575                           
   576                           ;psect for function _main
   577  0602                     _main:	
   578  0602                     l961:	
   579                           ;incstack = 0
   580                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   581                           
   582                           
   583                           ;MASTER.c: 34:     ANSELH = 0;
   584  0602  1683               	bsf	3,5	;RP0=1, select bank3
   585  0603  1703               	bsf	3,6	;RP1=1, select bank3
   586  0604  0189               	clrf	9	;volatile
   587                           
   588                           ;MASTER.c: 35:     ANSEL = 0;
   589  0605  0188               	clrf	8	;volatile
   590                           
   591                           ;MASTER.c: 36:     TRISB = 0;
   592  0606  1683               	bsf	3,5	;RP0=1, select bank1
   593  0607  1303               	bcf	3,6	;RP1=0, select bank1
   594  0608  0186               	clrf	6	;volatile
   595                           
   596                           ;MASTER.c: 37:     PORTB = 0;
   597  0609  1283               	bcf	3,5	;RP0=0, select bank0
   598  060A  1303               	bcf	3,6	;RP1=0, select bank0
   599  060B  0186               	clrf	6	;volatile
   600                           
   601                           ;MASTER.c: 38:     TRISA = 0;
   602  060C  1683               	bsf	3,5	;RP0=1, select bank1
   603  060D  1303               	bcf	3,6	;RP1=0, select bank1
   604  060E  0185               	clrf	5	;volatile
   605                           
   606                           ;MASTER.c: 39:     PORTA = 0;
   607  060F  1283               	bcf	3,5	;RP0=0, select bank0
   608  0610  1303               	bcf	3,6	;RP1=0, select bank0
   609  0611  0185               	clrf	5	;volatile
   610  0612                     l963:	
   611                           
   612                           ;MASTER.c: 41:     UART_Init(9600);
   613  0612  3000               	movlw	0
   614  0613  00A9               	movwf	UART_Init@baudrate+3
   615  0614  3000               	movlw	0
   616  0615  00A8               	movwf	UART_Init@baudrate+2
   617  0616  3025               	movlw	37
   618  0617  00A7               	movwf	UART_Init@baudrate+1
   619  0618  3080               	movlw	128
   620  0619  00A6               	movwf	UART_Init@baudrate
   621  061A  120A  118A  2721  120A  118A  	fcall	_UART_Init
   622  061F                     l965:	
   623                           
   624                           ;MASTER.c: 42:     unsigned char POT1;;MASTER.c: 43:     unsigned char POT2;;MASTER.c: 4
      +                          4:     uint16_t COMPU;;MASTER.c: 46:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MI
      +                          DDLE, SPI_CLOCK_IDLE_LOW, SPI_IDLE_2_ACTIVE);
   625  061F  01F0               	clrf	spiInit@sDataSample
   626  0620  01F1               	clrf	spiInit@sClockIdle
   627  0621  01F2               	clrf	spiInit@sTransmitEdge
   628  0622  3020               	movlw	32
   629  0623  120A  118A  25EC  120A  118A  	fcall	_spiInit
   630  0628                     l967:	
   631                           
   632                           ;MASTER.c: 50:         UART_Write(POT1);
   633  0628  1283               	bcf	3,5	;RP0=0, select bank0
   634  0629  1303               	bcf	3,6	;RP1=0, select bank0
   635  062A  0838               	movf	main@POT1,w
   636  062B  120A  118A  25D7  120A  118A  	fcall	_UART_Write
   637  0630                     l969:	
   638                           
   639                           ;MASTER.c: 51:         _delay((unsigned long)((10)*(8000000/4000.0)));
   640  0630  301A               	movlw	26
   641  0631  00FC               	movwf	??_main+1
   642  0632  30F8               	movlw	248
   643  0633  00FB               	movwf	??_main
   644  0634                     u477:	
   645  0634  0BFB               	decfsz	??_main,f
   646  0635  2E34               	goto	u477
   647  0636  0BFC               	decfsz	??_main+1,f
   648  0637  2E34               	goto	u477
   649  0638  0000               	nop
   650  0639                     l971:	
   651                           
   652                           ;MASTER.c: 52:         UART_Write(POT2);
   653  0639  1283               	bcf	3,5	;RP0=0, select bank0
   654  063A  1303               	bcf	3,6	;RP1=0, select bank0
   655  063B  0839               	movf	main@POT2,w
   656  063C  120A  118A  25D7  120A  118A  	fcall	_UART_Write
   657  0641                     l973:	
   658                           
   659                           ;MASTER.c: 57:         COMPU = UART_Read();
   660  0641  120A  118A  25CB  120A  118A  	fcall	_UART_Read
   661  0646  00FB               	movwf	??_main
   662  0647  01FC               	clrf	??_main+1
   663  0648  087B               	movf	??_main,w
   664  0649  1283               	bcf	3,5	;RP0=0, select bank0
   665  064A  1303               	bcf	3,6	;RP1=0, select bank0
   666  064B  00B6               	movwf	main@COMPU
   667  064C  087C               	movf	??_main+1,w
   668  064D  00B7               	movwf	main@COMPU+1
   669  064E                     l975:	
   670                           
   671                           ;MASTER.c: 58:         PORTB = COMPU;
   672  064E  0836               	movf	main@COMPU,w
   673  064F  0086               	movwf	6	;volatile
   674  0650                     l977:	
   675                           
   676                           ;MASTER.c: 62:         spiWrite(0x01);
   677  0650  3001               	movlw	1
   678  0651  120A  118A  25B5  120A  118A  	fcall	_spiWrite
   679  0656                     l979:	
   680                           
   681                           ;MASTER.c: 63:         POT1 = spiRead();
   682  0656  120A  118A  25C2  120A  118A  	fcall	_spiRead
   683  065B  00FB               	movwf	??_main
   684  065C  087B               	movf	??_main,w
   685  065D  1283               	bcf	3,5	;RP0=0, select bank0
   686  065E  1303               	bcf	3,6	;RP1=0, select bank0
   687  065F  00B8               	movwf	main@POT1
   688  0660                     l981:	
   689                           
   690                           ;MASTER.c: 66:         _delay((unsigned long)((0.8)*(8000000/4000.0)));
   691  0660  30E4               	movlw	228
   692  0661  00FB               	movwf	??_main
   693  0662                     u487:	
   694  0662  2E63               	nop2
   695  0663  2E64               	nop2
   696  0664  0BFB               	decfsz	??_main,f
   697  0665  2E62               	goto	u487
   698  0666  2E67               	nop2
   699  0667  0000               	nop
   700  0668                     l983:	
   701                           
   702                           ;MASTER.c: 69:         spiWrite(0x02);
   703  0668  3002               	movlw	2
   704  0669  120A  118A  25B5  120A  118A  	fcall	_spiWrite
   705  066E                     l985:	
   706                           
   707                           ;MASTER.c: 70:         POT2 = spiRead();
   708  066E  120A  118A  25C2  120A  118A  	fcall	_spiRead
   709  0673  00FB               	movwf	??_main
   710  0674  087B               	movf	??_main,w
   711  0675  1283               	bcf	3,5	;RP0=0, select bank0
   712  0676  1303               	bcf	3,6	;RP1=0, select bank0
   713  0677  00B9               	movwf	main@POT2
   714  0678                     l987:	
   715                           
   716                           ;MASTER.c: 72:         _delay((unsigned long)((0.8)*(8000000/4000.0)));
   717  0678  30E4               	movlw	228
   718  0679  00FB               	movwf	??_main
   719  067A                     u497:	
   720  067A  2E7B               	nop2
   721  067B  2E7C               	nop2
   722  067C  0BFB               	decfsz	??_main,f
   723  067D  2E7A               	goto	u497
   724  067E  2E7F               	nop2
   725  067F  0000               	nop
   726  0680  2E28               	goto	l967
   727  0681  120A  118A  2800   	ljmp	start
   728  0684                     __end_of_main:	
   729                           
   730                           	psect	text1
   731  05B5                     __ptext1:	
   732 ;; *************** function _spiWrite *****************
   733 ;; Defined at:
   734 ;;		line 34 in file "SPIM.c"
   735 ;; Parameters:    Size  Location     Type
   736 ;;  dat             1    wreg     unsigned char 
   737 ;; Auto vars:     Size  Location     Type
   738 ;;  dat             1    0[COMMON] unsigned char 
   739 ;; Return value:  Size  Location     Type
   740 ;;                  1    wreg      void 
   741 ;; Registers used:
   742 ;;		wreg
   743 ;; Tracked objects:
   744 ;;		On entry : 0/0
   745 ;;		On exit  : 0/0
   746 ;;		Unchanged: 0/0
   747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   748 ;;      Params:         0       0       0       0       0
   749 ;;      Locals:         1       0       0       0       0
   750 ;;      Temps:          0       0       0       0       0
   751 ;;      Totals:         1       0       0       0       0
   752 ;;Total ram usage:        1 bytes
   753 ;; Hardware stack levels used:    1
   754 ;; This function calls:
   755 ;;		Nothing
   756 ;; This function is called by:
   757 ;;		_main
   758 ;; This function uses a non-reentrant model
   759 ;;
   760                           
   761                           
   762                           ;psect for function _spiWrite
   763  05B5                     _spiWrite:	
   764                           
   765                           ;incstack = 0
   766                           ; Regs used in _spiWrite: [wreg]
   767                           ;spiWrite@dat stored from wreg
   768  05B5  00F0               	movwf	spiWrite@dat
   769  05B6                     l945:	
   770                           
   771                           ;SPIM.c: 34: void spiWrite(char dat);SPIM.c: 35: {;SPIM.c: 36:     SSPBUF = dat;
   772  05B6  0870               	movf	spiWrite@dat,w
   773  05B7  1283               	bcf	3,5	;RP0=0, select bank0
   774  05B8  1303               	bcf	3,6	;RP1=0, select bank0
   775  05B9  0093               	movwf	19	;volatile
   776  05BA                     l115:	
   777  05BA  0008               	return
   778  05BB                     __end_of_spiWrite:	
   779                           
   780                           	psect	text2
   781  05C2                     __ptext2:	
   782 ;; *************** function _spiRead *****************
   783 ;; Defined at:
   784 ;;		line 47 in file "SPIM.c"
   785 ;; Parameters:    Size  Location     Type
   786 ;;		None
   787 ;; Auto vars:     Size  Location     Type
   788 ;;		None
   789 ;; Return value:  Size  Location     Type
   790 ;;                  1    wreg      unsigned char 
   791 ;; Registers used:
   792 ;;		wreg, status,2, status,0, pclath, cstack
   793 ;; Tracked objects:
   794 ;;		On entry : 0/0
   795 ;;		On exit  : 0/0
   796 ;;		Unchanged: 0/0
   797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   798 ;;      Params:         0       0       0       0       0
   799 ;;      Locals:         0       0       0       0       0
   800 ;;      Temps:          0       0       0       0       0
   801 ;;      Totals:         0       0       0       0       0
   802 ;;Total ram usage:        0 bytes
   803 ;; Hardware stack levels used:    1
   804 ;; Hardware stack levels required when called:    1
   805 ;; This function calls:
   806 ;;		_spiReceiveWait
   807 ;; This function is called by:
   808 ;;		_main
   809 ;; This function uses a non-reentrant model
   810 ;;
   811                           
   812                           
   813                           ;psect for function _spiRead
   814  05C2                     _spiRead:	
   815  05C2                     l947:	
   816                           ;incstack = 0
   817                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
   818                           
   819                           
   820                           ;SPIM.c: 49:     spiReceiveWait();
   821  05C2  120A  118A  25BB  120A  118A  	fcall	_spiReceiveWait
   822  05C7                     l949:	
   823                           
   824                           ;SPIM.c: 50:     return(SSPBUF);
   825  05C7  1283               	bcf	3,5	;RP0=0, select bank0
   826  05C8  1303               	bcf	3,6	;RP1=0, select bank0
   827  05C9  0813               	movf	19,w	;volatile
   828  05CA                     l123:	
   829  05CA  0008               	return
   830  05CB                     __end_of_spiRead:	
   831                           
   832                           	psect	text3
   833  05BB                     __ptext3:	
   834 ;; *************** function _spiReceiveWait *****************
   835 ;; Defined at:
   836 ;;		line 29 in file "SPIM.c"
   837 ;; Parameters:    Size  Location     Type
   838 ;;		None
   839 ;; Auto vars:     Size  Location     Type
   840 ;;		None
   841 ;; Return value:  Size  Location     Type
   842 ;;                  1    wreg      void 
   843 ;; Registers used:
   844 ;;		None
   845 ;; Tracked objects:
   846 ;;		On entry : 0/0
   847 ;;		On exit  : 0/0
   848 ;;		Unchanged: 0/0
   849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   850 ;;      Params:         0       0       0       0       0
   851 ;;      Locals:         0       0       0       0       0
   852 ;;      Temps:          0       0       0       0       0
   853 ;;      Totals:         0       0       0       0       0
   854 ;;Total ram usage:        0 bytes
   855 ;; Hardware stack levels used:    1
   856 ;; This function calls:
   857 ;;		Nothing
   858 ;; This function is called by:
   859 ;;		_spiRead
   860 ;; This function uses a non-reentrant model
   861 ;;
   862                           
   863                           
   864                           ;psect for function _spiReceiveWait
   865  05BB                     _spiReceiveWait:	
   866  05BB                     l857:	
   867                           ;incstack = 0
   868                           ; Regs used in _spiReceiveWait: []
   869                           
   870  05BB                     l109:	
   871                           ;SPIM.c: 31:     while ( !SSPSTATbits.BF );
   872                           
   873  05BB  1683               	bsf	3,5	;RP0=1, select bank1
   874  05BC  1303               	bcf	3,6	;RP1=0, select bank1
   875  05BD  1C14               	btfss	20,0	;volatile
   876  05BE  2DC0               	goto	u241
   877  05BF  2DC1               	goto	u240
   878  05C0                     u241:	
   879  05C0  2DBB               	goto	l109
   880  05C1                     u240:	
   881  05C1                     l112:	
   882  05C1  0008               	return
   883  05C2                     __end_of_spiReceiveWait:	
   884                           
   885                           	psect	text4
   886  05EC                     __ptext4:	
   887 ;; *************** function _spiInit *****************
   888 ;; Defined at:
   889 ;;		line 12 in file "SPIM.c"
   890 ;; Parameters:    Size  Location     Type
   891 ;;  sType           1    wreg     enum E1264
   892 ;;  sDataSample     1    0[COMMON] enum E1272
   893 ;;  sClockIdle      1    1[COMMON] enum E1276
   894 ;;  sTransmitEdg    1    2[COMMON] enum E1280
   895 ;; Auto vars:     Size  Location     Type
   896 ;;  sType           1    3[COMMON] enum E1264
   897 ;; Return value:  Size  Location     Type
   898 ;;                  1    wreg      void 
   899 ;; Registers used:
   900 ;;		wreg, status,2, status,0
   901 ;; Tracked objects:
   902 ;;		On entry : 0/0
   903 ;;		On exit  : 0/0
   904 ;;		Unchanged: 0/0
   905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   906 ;;      Params:         3       0       0       0       0
   907 ;;      Locals:         1       0       0       0       0
   908 ;;      Temps:          0       0       0       0       0
   909 ;;      Totals:         4       0       0       0       0
   910 ;;Total ram usage:        4 bytes
   911 ;; Hardware stack levels used:    1
   912 ;; This function calls:
   913 ;;		Nothing
   914 ;; This function is called by:
   915 ;;		_main
   916 ;; This function uses a non-reentrant model
   917 ;;
   918                           
   919                           
   920                           ;psect for function _spiInit
   921  05EC                     _spiInit:	
   922                           
   923                           ;incstack = 0
   924                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   925                           ;spiInit@sType stored from wreg
   926  05EC  00F3               	movwf	spiInit@sType
   927  05ED                     l935:	
   928                           
   929                           ;SPIM.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sC
      +                          lockIdle, Spi_Transmit_Edge sTransmitEdge);SPIM.c: 13: {;SPIM.c: 14:     TRISC5 = 0;
   930  05ED  1683               	bsf	3,5	;RP0=1, select bank1
   931  05EE  1303               	bcf	3,6	;RP1=0, select bank1
   932  05EF  1287               	bcf	7,5	;volatile
   933                           
   934                           ;SPIM.c: 15:     if(sType & 0b00000100)
   935  05F0  1D73               	btfss	spiInit@sType,2
   936  05F1  2DF3               	goto	u451
   937  05F2  2DF4               	goto	u450
   938  05F3                     u451:	
   939  05F3  2DF8               	goto	l941
   940  05F4                     u450:	
   941  05F4                     l937:	
   942                           
   943                           ;SPIM.c: 16:     {;SPIM.c: 17:         SSPSTAT = sTransmitEdge;
   944  05F4  0872               	movf	spiInit@sTransmitEdge,w
   945  05F5  0094               	movwf	20	;volatile
   946  05F6                     l939:	
   947                           
   948                           ;SPIM.c: 18:         TRISC3 = 1;
   949  05F6  1587               	bsf	7,3	;volatile
   950                           
   951                           ;SPIM.c: 19:     }
   952  05F7  2DFC               	goto	l105
   953  05F8                     l941:	
   954                           
   955                           ;SPIM.c: 21:     {;SPIM.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   956  05F8  0870               	movf	spiInit@sDataSample,w
   957  05F9  0472               	iorwf	spiInit@sTransmitEdge,w
   958  05FA  0094               	movwf	20	;volatile
   959  05FB                     l943:	
   960                           
   961                           ;SPIM.c: 23:         TRISC3 = 0;
   962  05FB  1187               	bcf	7,3	;volatile
   963  05FC                     l105:	
   964                           ;SPIM.c: 24:     }
   965                           
   966                           
   967                           ;SPIM.c: 26:     SSPCON = sType | sClockIdle;
   968  05FC  0873               	movf	spiInit@sType,w
   969  05FD  0471               	iorwf	spiInit@sClockIdle,w
   970  05FE  1283               	bcf	3,5	;RP0=0, select bank0
   971  05FF  1303               	bcf	3,6	;RP1=0, select bank0
   972  0600  0094               	movwf	20	;volatile
   973  0601                     l106:	
   974  0601  0008               	return
   975  0602                     __end_of_spiInit:	
   976                           
   977                           	psect	text5
   978  05D7                     __ptext5:	
   979 ;; *************** function _UART_Write *****************
   980 ;; Defined at:
   981 ;;		line 39 in file "RXTX.c"
   982 ;; Parameters:    Size  Location     Type
   983 ;;  data            1    wreg     unsigned char 
   984 ;; Auto vars:     Size  Location     Type
   985 ;;  data            1    2[COMMON] unsigned char 
   986 ;; Return value:  Size  Location     Type
   987 ;;                  1    wreg      void 
   988 ;; Registers used:
   989 ;;		wreg
   990 ;; Tracked objects:
   991 ;;		On entry : 0/0
   992 ;;		On exit  : 0/0
   993 ;;		Unchanged: 0/0
   994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   995 ;;      Params:         0       0       0       0       0
   996 ;;      Locals:         1       0       0       0       0
   997 ;;      Temps:          2       0       0       0       0
   998 ;;      Totals:         3       0       0       0       0
   999 ;;Total ram usage:        3 bytes
  1000 ;; Hardware stack levels used:    1
  1001 ;; This function calls:
  1002 ;;		Nothing
  1003 ;; This function is called by:
  1004 ;;		_main
  1005 ;; This function uses a non-reentrant model
  1006 ;;
  1007                           
  1008                           
  1009                           ;psect for function _UART_Write
  1010  05D7                     _UART_Write:	
  1011                           
  1012                           ;incstack = 0
  1013                           ; Regs used in _UART_Write: [wreg]
  1014                           ;UART_Write@data stored from wreg
  1015  05D7  00F2               	movwf	UART_Write@data
  1016  05D8                     l925:	
  1017  05D8                     l36:	
  1018                           ;RXTX.c: 39: void UART_Write(char data);RXTX.c: 40: {;RXTX.c: 41:   while(!TRMT);
  1019                           
  1020  05D8  1683               	bsf	3,5	;RP0=1, select bank1
  1021  05D9  1303               	bcf	3,6	;RP1=0, select bank1
  1022  05DA  1C98               	btfss	24,1	;volatile
  1023  05DB  2DDD               	goto	u431
  1024  05DC  2DDE               	goto	u430
  1025  05DD                     u431:	
  1026  05DD  2DD8               	goto	l36
  1027  05DE                     u430:	
  1028  05DE                     l927:	
  1029                           
  1030                           ;RXTX.c: 42:   TXREG = data;
  1031  05DE  0872               	movf	UART_Write@data,w
  1032  05DF  1283               	bcf	3,5	;RP0=0, select bank0
  1033  05E0  1303               	bcf	3,6	;RP1=0, select bank0
  1034  05E1  0099               	movwf	25	;volatile
  1035                           
  1036                           ;RXTX.c: 43:   _delay((unsigned long)((100)*(4000000/4000.0)));
  1037  05E2  3082               	movlw	130
  1038  05E3  00F1               	movwf	??_UART_Write+1
  1039  05E4  30DD               	movlw	221
  1040  05E5  00F0               	movwf	??_UART_Write
  1041  05E6                     u507:	
  1042  05E6  0BF0               	decfsz	??_UART_Write,f
  1043  05E7  2DE6               	goto	u507
  1044  05E8  0BF1               	decfsz	??_UART_Write+1,f
  1045  05E9  2DE6               	goto	u507
  1046  05EA  2DEB               	nop2
  1047  05EB                     l39:	
  1048  05EB  0008               	return
  1049  05EC                     __end_of_UART_Write:	
  1050                           
  1051                           	psect	text6
  1052  05CB                     __ptext6:	
  1053 ;; *************** function _UART_Read *****************
  1054 ;; Defined at:
  1055 ;;		line 56 in file "RXTX.c"
  1056 ;; Parameters:    Size  Location     Type
  1057 ;;		None
  1058 ;; Auto vars:     Size  Location     Type
  1059 ;;		None
  1060 ;; Return value:  Size  Location     Type
  1061 ;;                  1    wreg      unsigned char 
  1062 ;; Registers used:
  1063 ;;		wreg
  1064 ;; Tracked objects:
  1065 ;;		On entry : 0/0
  1066 ;;		On exit  : 0/0
  1067 ;;		Unchanged: 0/0
  1068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1069 ;;      Params:         0       0       0       0       0
  1070 ;;      Locals:         0       0       0       0       0
  1071 ;;      Temps:          1       0       0       0       0
  1072 ;;      Totals:         1       0       0       0       0
  1073 ;;Total ram usage:        1 bytes
  1074 ;; Hardware stack levels used:    1
  1075 ;; This function calls:
  1076 ;;		Nothing
  1077 ;; This function is called by:
  1078 ;;		_main
  1079 ;;		_UART_Read_Text
  1080 ;; This function uses a non-reentrant model
  1081 ;;
  1082                           
  1083                           
  1084                           ;psect for function _UART_Read
  1085  05CB                     _UART_Read:	
  1086  05CB                     l929:	
  1087                           ;incstack = 0
  1088                           ; Regs used in _UART_Read: [wreg]
  1089                           
  1090                           
  1091                           ;RXTX.c: 58:     if(RCIF==1){
  1092  05CB  1283               	bcf	3,5	;RP0=0, select bank0
  1093  05CC  1303               	bcf	3,6	;RP1=0, select bank0
  1094  05CD  1E8C               	btfss	12,5	;volatile
  1095  05CE  2DD0               	goto	u441
  1096  05CF  2DD1               	goto	u440
  1097  05D0                     u441:	
  1098  05D0  2DD5               	goto	l48
  1099  05D1                     u440:	
  1100  05D1                     l931:	
  1101                           
  1102                           ;RXTX.c: 59:         valeido=RCREG;
  1103  05D1  081A               	movf	26,w	;volatile
  1104  05D2  00F0               	movwf	??_UART_Read
  1105  05D3  0870               	movf	??_UART_Read,w
  1106  05D4  00FD               	movwf	_valeido
  1107  05D5                     l48:	
  1108                           ;RXTX.c: 60:     }
  1109                           
  1110                           
  1111                           ;RXTX.c: 65:   return valeido;
  1112  05D5  087D               	movf	_valeido,w
  1113  05D6                     l49:	
  1114  05D6  0008               	return
  1115  05D7                     __end_of_UART_Read:	
  1116                           
  1117                           	psect	text7
  1118  0721                     __ptext7:	
  1119 ;; *************** function _UART_Init *****************
  1120 ;; Defined at:
  1121 ;;		line 16 in file "RXTX.c"
  1122 ;; Parameters:    Size  Location     Type
  1123 ;;  baudrate        4    6[BANK0 ] const long 
  1124 ;; Auto vars:     Size  Location     Type
  1125 ;;  x               2    9[COMMON] unsigned int 
  1126 ;; Return value:  Size  Location     Type
  1127 ;;                  1    wreg      unsigned char 
  1128 ;; Registers used:
  1129 ;;		wreg, status,2, status,0, pclath, cstack
  1130 ;; Tracked objects:
  1131 ;;		On entry : 0/0
  1132 ;;		On exit  : 0/0
  1133 ;;		Unchanged: 0/0
  1134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1135 ;;      Params:         0       4       0       0       0
  1136 ;;      Locals:         2       0       0       0       0
  1137 ;;      Temps:          0      12       0       0       0
  1138 ;;      Totals:         2      16       0       0       0
  1139 ;;Total ram usage:       18 bytes
  1140 ;; Hardware stack levels used:    1
  1141 ;; Hardware stack levels required when called:    1
  1142 ;; This function calls:
  1143 ;;		___aldiv
  1144 ;; This function is called by:
  1145 ;;		_main
  1146 ;; This function uses a non-reentrant model
  1147 ;;
  1148                           
  1149                           
  1150                           ;psect for function _UART_Init
  1151  0721                     _UART_Init:	
  1152  0721                     l899:	
  1153                           ;incstack = 0
  1154                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  1155                           
  1156                           
  1157                           ;RXTX.c: 16: char UART_Init(const long int baudrate);RXTX.c: 17: {;RXTX.c: 18:   unsigne
      +                          d int x;;RXTX.c: 19:   x = (4000000 - baudrate*64)/(baudrate*64);
  1158  0721  1283               	bcf	3,5	;RP0=0, select bank0
  1159  0722  1303               	bcf	3,6	;RP1=0, select bank0
  1160  0723  0826               	movf	UART_Init@baudrate,w
  1161  0724  00AA               	movwf	??_UART_Init
  1162  0725  0827               	movf	UART_Init@baudrate+1,w
  1163  0726  00AB               	movwf	??_UART_Init+1
  1164  0727  0828               	movf	UART_Init@baudrate+2,w
  1165  0728  00AC               	movwf	??_UART_Init+2
  1166  0729  0829               	movf	UART_Init@baudrate+3,w
  1167  072A  00AD               	movwf	??_UART_Init+3
  1168  072B  3006               	movlw	6
  1169  072C                     u355:	
  1170  072C  1003               	clrc
  1171  072D  0DAA               	rlf	??_UART_Init,f
  1172  072E  0DAB               	rlf	??_UART_Init+1,f
  1173  072F  0DAC               	rlf	??_UART_Init+2,f
  1174  0730  0DAD               	rlf	??_UART_Init+3,f
  1175  0731                     u350:	
  1176  0731  3EFF               	addlw	-1
  1177  0732  1D03               	skipz
  1178  0733  2F2C               	goto	u355
  1179  0734  082D               	movf	??_UART_Init+3,w
  1180  0735  00F3               	movwf	___aldiv@divisor+3
  1181  0736  082C               	movf	??_UART_Init+2,w
  1182  0737  00F2               	movwf	___aldiv@divisor+2
  1183  0738  082B               	movf	??_UART_Init+1,w
  1184  0739  00F1               	movwf	___aldiv@divisor+1
  1185  073A  082A               	movf	??_UART_Init,w
  1186  073B  00F0               	movwf	___aldiv@divisor
  1187  073C  0826               	movf	UART_Init@baudrate,w
  1188  073D  00AE               	movwf	??_UART_Init+4
  1189  073E  0827               	movf	UART_Init@baudrate+1,w
  1190  073F  00AF               	movwf	??_UART_Init+5
  1191  0740  0828               	movf	UART_Init@baudrate+2,w
  1192  0741  00B0               	movwf	??_UART_Init+6
  1193  0742  0829               	movf	UART_Init@baudrate+3,w
  1194  0743  00B1               	movwf	??_UART_Init+7
  1195  0744  3006               	movlw	6
  1196  0745                     u365:	
  1197  0745  1003               	clrc
  1198  0746  0DAE               	rlf	??_UART_Init+4,f
  1199  0747  0DAF               	rlf	??_UART_Init+5,f
  1200  0748  0DB0               	rlf	??_UART_Init+6,f
  1201  0749  0DB1               	rlf	??_UART_Init+7,f
  1202  074A                     u360:	
  1203  074A  3EFF               	addlw	-1
  1204  074B  1D03               	skipz
  1205  074C  2F45               	goto	u365
  1206  074D  3000               	movlw	0
  1207  074E  00B2               	movwf	??_UART_Init+8
  1208  074F  3009               	movlw	9
  1209  0750  00B3               	movwf	??_UART_Init+9
  1210  0751  303D               	movlw	61
  1211  0752  00B4               	movwf	??_UART_Init+10
  1212  0753  3000               	movlw	0
  1213  0754  00B5               	movwf	??_UART_Init+11
  1214  0755  082E               	movf	??_UART_Init+4,w
  1215  0756  02B2               	subwf	??_UART_Init+8,f
  1216  0757  082F               	movf	??_UART_Init+5,w
  1217  0758  1C03               	skipc
  1218  0759  0F2F               	incfsz	??_UART_Init+5,w
  1219  075A  2F5C               	goto	u371
  1220  075B  2F5D               	goto	u372
  1221  075C                     u371:	
  1222  075C  02B3               	subwf	??_UART_Init+9,f
  1223  075D                     u372:	
  1224  075D  0830               	movf	??_UART_Init+6,w
  1225  075E  1C03               	skipc
  1226  075F  0F30               	incfsz	??_UART_Init+6,w
  1227  0760  2F62               	goto	u373
  1228  0761  2F63               	goto	u374
  1229  0762                     u373:	
  1230  0762  02B4               	subwf	??_UART_Init+10,f
  1231  0763                     u374:	
  1232  0763  0831               	movf	??_UART_Init+7,w
  1233  0764  1C03               	skipc
  1234  0765  0F31               	incfsz	??_UART_Init+7,w
  1235  0766  2F68               	goto	u375
  1236  0767  2F69               	goto	u376
  1237  0768                     u375:	
  1238  0768  02B5               	subwf	??_UART_Init+11,f
  1239  0769                     u376:	
  1240  0769  0835               	movf	??_UART_Init+11,w
  1241  076A  00F7               	movwf	___aldiv@dividend+3
  1242  076B  0834               	movf	??_UART_Init+10,w
  1243  076C  00F6               	movwf	___aldiv@dividend+2
  1244  076D  0833               	movf	??_UART_Init+9,w
  1245  076E  00F5               	movwf	___aldiv@dividend+1
  1246  076F  0832               	movf	??_UART_Init+8,w
  1247  0770  00F4               	movwf	___aldiv@dividend
  1248  0771  120A  118A  2684  120A  118A  	fcall	___aldiv
  1249  0776  0871               	movf	?___aldiv+1,w
  1250  0777  00FA               	movwf	UART_Init@x+1
  1251  0778  0870               	movf	?___aldiv,w
  1252  0779  00F9               	movwf	UART_Init@x
  1253  077A                     l901:	
  1254                           
  1255                           ;RXTX.c: 20:   if(x>255)
  1256  077A  3001               	movlw	1
  1257  077B  027A               	subwf	UART_Init@x+1,w
  1258  077C  3000               	movlw	0
  1259  077D  1903               	skipnz
  1260  077E  0279               	subwf	UART_Init@x,w
  1261  077F  1C03               	skipc
  1262  0780  2F82               	goto	u381
  1263  0781  2F83               	goto	u380
  1264  0782                     u381:	
  1265  0782  2FDF               	goto	l907
  1266  0783                     u380:	
  1267  0783                     l903:	
  1268                           
  1269                           ;RXTX.c: 21:   {;RXTX.c: 22:     x = (4000000 - baudrate*16)/(baudrate*16);
  1270  0783  1283               	bcf	3,5	;RP0=0, select bank0
  1271  0784  1303               	bcf	3,6	;RP1=0, select bank0
  1272  0785  0826               	movf	UART_Init@baudrate,w
  1273  0786  00AA               	movwf	??_UART_Init
  1274  0787  0827               	movf	UART_Init@baudrate+1,w
  1275  0788  00AB               	movwf	??_UART_Init+1
  1276  0789  0828               	movf	UART_Init@baudrate+2,w
  1277  078A  00AC               	movwf	??_UART_Init+2
  1278  078B  0829               	movf	UART_Init@baudrate+3,w
  1279  078C  00AD               	movwf	??_UART_Init+3
  1280  078D  3004               	movlw	4
  1281  078E                     u395:	
  1282  078E  1003               	clrc
  1283  078F  0DAA               	rlf	??_UART_Init,f
  1284  0790  0DAB               	rlf	??_UART_Init+1,f
  1285  0791  0DAC               	rlf	??_UART_Init+2,f
  1286  0792  0DAD               	rlf	??_UART_Init+3,f
  1287  0793                     u390:	
  1288  0793  3EFF               	addlw	-1
  1289  0794  1D03               	skipz
  1290  0795  2F8E               	goto	u395
  1291  0796  082D               	movf	??_UART_Init+3,w
  1292  0797  00F3               	movwf	___aldiv@divisor+3
  1293  0798  082C               	movf	??_UART_Init+2,w
  1294  0799  00F2               	movwf	___aldiv@divisor+2
  1295  079A  082B               	movf	??_UART_Init+1,w
  1296  079B  00F1               	movwf	___aldiv@divisor+1
  1297  079C  082A               	movf	??_UART_Init,w
  1298  079D  00F0               	movwf	___aldiv@divisor
  1299  079E  0826               	movf	UART_Init@baudrate,w
  1300  079F  00AE               	movwf	??_UART_Init+4
  1301  07A0  0827               	movf	UART_Init@baudrate+1,w
  1302  07A1  00AF               	movwf	??_UART_Init+5
  1303  07A2  0828               	movf	UART_Init@baudrate+2,w
  1304  07A3  00B0               	movwf	??_UART_Init+6
  1305  07A4  0829               	movf	UART_Init@baudrate+3,w
  1306  07A5  00B1               	movwf	??_UART_Init+7
  1307  07A6  3004               	movlw	4
  1308  07A7                     u405:	
  1309  07A7  1003               	clrc
  1310  07A8  0DAE               	rlf	??_UART_Init+4,f
  1311  07A9  0DAF               	rlf	??_UART_Init+5,f
  1312  07AA  0DB0               	rlf	??_UART_Init+6,f
  1313  07AB  0DB1               	rlf	??_UART_Init+7,f
  1314  07AC                     u400:	
  1315  07AC  3EFF               	addlw	-1
  1316  07AD  1D03               	skipz
  1317  07AE  2FA7               	goto	u405
  1318  07AF  3000               	movlw	0
  1319  07B0  00B2               	movwf	??_UART_Init+8
  1320  07B1  3009               	movlw	9
  1321  07B2  00B3               	movwf	??_UART_Init+9
  1322  07B3  303D               	movlw	61
  1323  07B4  00B4               	movwf	??_UART_Init+10
  1324  07B5  3000               	movlw	0
  1325  07B6  00B5               	movwf	??_UART_Init+11
  1326  07B7  082E               	movf	??_UART_Init+4,w
  1327  07B8  02B2               	subwf	??_UART_Init+8,f
  1328  07B9  082F               	movf	??_UART_Init+5,w
  1329  07BA  1C03               	skipc
  1330  07BB  0F2F               	incfsz	??_UART_Init+5,w
  1331  07BC  2FBE               	goto	u411
  1332  07BD  2FBF               	goto	u412
  1333  07BE                     u411:	
  1334  07BE  02B3               	subwf	??_UART_Init+9,f
  1335  07BF                     u412:	
  1336  07BF  0830               	movf	??_UART_Init+6,w
  1337  07C0  1C03               	skipc
  1338  07C1  0F30               	incfsz	??_UART_Init+6,w
  1339  07C2  2FC4               	goto	u413
  1340  07C3  2FC5               	goto	u414
  1341  07C4                     u413:	
  1342  07C4  02B4               	subwf	??_UART_Init+10,f
  1343  07C5                     u414:	
  1344  07C5  0831               	movf	??_UART_Init+7,w
  1345  07C6  1C03               	skipc
  1346  07C7  0F31               	incfsz	??_UART_Init+7,w
  1347  07C8  2FCA               	goto	u415
  1348  07C9  2FCB               	goto	u416
  1349  07CA                     u415:	
  1350  07CA  02B5               	subwf	??_UART_Init+11,f
  1351  07CB                     u416:	
  1352  07CB  0835               	movf	??_UART_Init+11,w
  1353  07CC  00F7               	movwf	___aldiv@dividend+3
  1354  07CD  0834               	movf	??_UART_Init+10,w
  1355  07CE  00F6               	movwf	___aldiv@dividend+2
  1356  07CF  0833               	movf	??_UART_Init+9,w
  1357  07D0  00F5               	movwf	___aldiv@dividend+1
  1358  07D1  0832               	movf	??_UART_Init+8,w
  1359  07D2  00F4               	movwf	___aldiv@dividend
  1360  07D3  120A  118A  2684  120A  118A  	fcall	___aldiv
  1361  07D8  0871               	movf	?___aldiv+1,w
  1362  07D9  00FA               	movwf	UART_Init@x+1
  1363  07DA  0870               	movf	?___aldiv,w
  1364  07DB  00F9               	movwf	UART_Init@x
  1365  07DC                     l905:	
  1366                           
  1367                           ;RXTX.c: 23:     BRGH = 1;
  1368  07DC  1683               	bsf	3,5	;RP0=1, select bank1
  1369  07DD  1303               	bcf	3,6	;RP1=0, select bank1
  1370  07DE  1518               	bsf	24,2	;volatile
  1371  07DF                     l907:	
  1372                           
  1373                           ;RXTX.c: 25:   if(x<256)
  1374  07DF  3001               	movlw	1
  1375  07E0  027A               	subwf	UART_Init@x+1,w
  1376  07E1  3000               	movlw	0
  1377  07E2  1903               	skipnz
  1378  07E3  0279               	subwf	UART_Init@x,w
  1379  07E4  1803               	skipnc
  1380  07E5  2FE7               	goto	u421
  1381  07E6  2FE8               	goto	u420
  1382  07E7                     u421:	
  1383  07E7  2FFA               	goto	l33
  1384  07E8                     u420:	
  1385  07E8                     l909:	
  1386                           
  1387                           ;RXTX.c: 26:   {;RXTX.c: 27:     SPBRG = x;
  1388  07E8  0879               	movf	UART_Init@x,w
  1389  07E9  1683               	bsf	3,5	;RP0=1, select bank1
  1390  07EA  1303               	bcf	3,6	;RP1=0, select bank1
  1391  07EB  0099               	movwf	25	;volatile
  1392  07EC                     l911:	
  1393                           
  1394                           ;RXTX.c: 28:     SYNC = 0;
  1395  07EC  1218               	bcf	24,4	;volatile
  1396  07ED                     l913:	
  1397                           
  1398                           ;RXTX.c: 29:     SPEN = 1;
  1399  07ED  1283               	bcf	3,5	;RP0=0, select bank0
  1400  07EE  1303               	bcf	3,6	;RP1=0, select bank0
  1401  07EF  1798               	bsf	24,7	;volatile
  1402  07F0                     l915:	
  1403                           
  1404                           ;RXTX.c: 30:     TRISC7 = 1;
  1405  07F0  1683               	bsf	3,5	;RP0=1, select bank1
  1406  07F1  1303               	bcf	3,6	;RP1=0, select bank1
  1407  07F2  1787               	bsf	7,7	;volatile
  1408  07F3                     l917:	
  1409                           
  1410                           ;RXTX.c: 31:     TRISC6 = 1;
  1411  07F3  1707               	bsf	7,6	;volatile
  1412  07F4                     l919:	
  1413                           
  1414                           ;RXTX.c: 32:     CREN = 1;
  1415  07F4  1283               	bcf	3,5	;RP0=0, select bank0
  1416  07F5  1303               	bcf	3,6	;RP1=0, select bank0
  1417  07F6  1618               	bsf	24,4	;volatile
  1418  07F7                     l921:	
  1419                           
  1420                           ;RXTX.c: 33:     TXEN = 1;
  1421  07F7  1683               	bsf	3,5	;RP0=1, select bank1
  1422  07F8  1303               	bcf	3,6	;RP1=0, select bank1
  1423  07F9  1698               	bsf	24,5	;volatile
  1424  07FA                     l33:	
  1425  07FA  0008               	return
  1426  07FB                     __end_of_UART_Init:	
  1427                           
  1428                           	psect	text8
  1429  0684                     __ptext8:	
  1430 ;; *************** function ___aldiv *****************
  1431 ;; Defined at:
  1432 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\aldiv.c"
  1433 ;; Parameters:    Size  Location     Type
  1434 ;;  divisor         4    0[COMMON] long 
  1435 ;;  dividend        4    4[COMMON] long 
  1436 ;; Auto vars:     Size  Location     Type
  1437 ;;  quotient        4    2[BANK0 ] long 
  1438 ;;  sign            1    1[BANK0 ] unsigned char 
  1439 ;;  counter         1    0[BANK0 ] unsigned char 
  1440 ;; Return value:  Size  Location     Type
  1441 ;;                  4    0[COMMON] long 
  1442 ;; Registers used:
  1443 ;;		wreg, status,2, status,0
  1444 ;; Tracked objects:
  1445 ;;		On entry : 0/0
  1446 ;;		On exit  : 0/0
  1447 ;;		Unchanged: 0/0
  1448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1449 ;;      Params:         8       0       0       0       0
  1450 ;;      Locals:         0       6       0       0       0
  1451 ;;      Temps:          1       0       0       0       0
  1452 ;;      Totals:         9       6       0       0       0
  1453 ;;Total ram usage:       15 bytes
  1454 ;; Hardware stack levels used:    1
  1455 ;; This function calls:
  1456 ;;		Nothing
  1457 ;; This function is called by:
  1458 ;;		_UART_Init
  1459 ;; This function uses a non-reentrant model
  1460 ;;
  1461                           
  1462                           
  1463                           ;psect for function ___aldiv
  1464  0684                     ___aldiv:	
  1465  0684                     l859:	
  1466                           ;incstack = 0
  1467                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1468                           
  1469  0684  1283               	bcf	3,5	;RP0=0, select bank0
  1470  0685  1303               	bcf	3,6	;RP1=0, select bank0
  1471  0686  01A1               	clrf	___aldiv@sign
  1472  0687                     l861:	
  1473  0687  1FF3               	btfss	___aldiv@divisor+3,7
  1474  0688  2E8A               	goto	u251
  1475  0689  2E8B               	goto	u250
  1476  068A                     u251:	
  1477  068A  2E98               	goto	l274
  1478  068B                     u250:	
  1479  068B                     l863:	
  1480  068B  09F0               	comf	___aldiv@divisor,f
  1481  068C  09F1               	comf	___aldiv@divisor+1,f
  1482  068D  09F2               	comf	___aldiv@divisor+2,f
  1483  068E  09F3               	comf	___aldiv@divisor+3,f
  1484  068F  0AF0               	incf	___aldiv@divisor,f
  1485  0690  1903               	skipnz
  1486  0691  0AF1               	incf	___aldiv@divisor+1,f
  1487  0692  1903               	skipnz
  1488  0693  0AF2               	incf	___aldiv@divisor+2,f
  1489  0694  1903               	skipnz
  1490  0695  0AF3               	incf	___aldiv@divisor+3,f
  1491  0696  01A1               	clrf	___aldiv@sign
  1492  0697  0AA1               	incf	___aldiv@sign,f
  1493  0698                     l274:	
  1494  0698  1FF7               	btfss	___aldiv@dividend+3,7
  1495  0699  2E9B               	goto	u261
  1496  069A  2E9C               	goto	u260
  1497  069B                     u261:	
  1498  069B  2EAB               	goto	l869
  1499  069C                     u260:	
  1500  069C                     l865:	
  1501  069C  09F4               	comf	___aldiv@dividend,f
  1502  069D  09F5               	comf	___aldiv@dividend+1,f
  1503  069E  09F6               	comf	___aldiv@dividend+2,f
  1504  069F  09F7               	comf	___aldiv@dividend+3,f
  1505  06A0  0AF4               	incf	___aldiv@dividend,f
  1506  06A1  1903               	skipnz
  1507  06A2  0AF5               	incf	___aldiv@dividend+1,f
  1508  06A3  1903               	skipnz
  1509  06A4  0AF6               	incf	___aldiv@dividend+2,f
  1510  06A5  1903               	skipnz
  1511  06A6  0AF7               	incf	___aldiv@dividend+3,f
  1512  06A7                     l867:	
  1513  06A7  3001               	movlw	1
  1514  06A8  00F8               	movwf	??___aldiv
  1515  06A9  0878               	movf	??___aldiv,w
  1516  06AA  06A1               	xorwf	___aldiv@sign,f
  1517  06AB                     l869:	
  1518  06AB  3000               	movlw	0
  1519  06AC  00A5               	movwf	___aldiv@quotient+3
  1520  06AD  3000               	movlw	0
  1521  06AE  00A4               	movwf	___aldiv@quotient+2
  1522  06AF  3000               	movlw	0
  1523  06B0  00A3               	movwf	___aldiv@quotient+1
  1524  06B1  3000               	movlw	0
  1525  06B2  00A2               	movwf	___aldiv@quotient
  1526  06B3                     l871:	
  1527  06B3  0873               	movf	___aldiv@divisor+3,w
  1528  06B4  0472               	iorwf	___aldiv@divisor+2,w
  1529  06B5  0471               	iorwf	___aldiv@divisor+1,w
  1530  06B6  0470               	iorwf	___aldiv@divisor,w
  1531  06B7  1903               	skipnz
  1532  06B8  2EBA               	goto	u271
  1533  06B9  2EBB               	goto	u270
  1534  06BA                     u271:	
  1535  06BA  2F08               	goto	l891
  1536  06BB                     u270:	
  1537  06BB                     l873:	
  1538  06BB  01A0               	clrf	___aldiv@counter
  1539  06BC  0AA0               	incf	___aldiv@counter,f
  1540  06BD  2ECB               	goto	l877
  1541  06BE                     l875:	
  1542  06BE  3001               	movlw	1
  1543  06BF  00F8               	movwf	??___aldiv
  1544  06C0                     u285:	
  1545  06C0  1003               	clrc
  1546  06C1  0DF0               	rlf	___aldiv@divisor,f
  1547  06C2  0DF1               	rlf	___aldiv@divisor+1,f
  1548  06C3  0DF2               	rlf	___aldiv@divisor+2,f
  1549  06C4  0DF3               	rlf	___aldiv@divisor+3,f
  1550  06C5  0BF8               	decfsz	??___aldiv,f
  1551  06C6  2EC0               	goto	u285
  1552  06C7  3001               	movlw	1
  1553  06C8  00F8               	movwf	??___aldiv
  1554  06C9  0878               	movf	??___aldiv,w
  1555  06CA  07A0               	addwf	___aldiv@counter,f
  1556  06CB                     l877:	
  1557  06CB  1FF3               	btfss	___aldiv@divisor+3,7
  1558  06CC  2ECE               	goto	u291
  1559  06CD  2ECF               	goto	u290
  1560  06CE                     u291:	
  1561  06CE  2EBE               	goto	l875
  1562  06CF                     u290:	
  1563  06CF                     l879:	
  1564  06CF  3001               	movlw	1
  1565  06D0  00F8               	movwf	??___aldiv
  1566  06D1                     u305:	
  1567  06D1  1003               	clrc
  1568  06D2  0DA2               	rlf	___aldiv@quotient,f
  1569  06D3  0DA3               	rlf	___aldiv@quotient+1,f
  1570  06D4  0DA4               	rlf	___aldiv@quotient+2,f
  1571  06D5  0DA5               	rlf	___aldiv@quotient+3,f
  1572  06D6  0BF8               	decfsz	??___aldiv,f
  1573  06D7  2ED1               	goto	u305
  1574  06D8                     l881:	
  1575  06D8  0873               	movf	___aldiv@divisor+3,w
  1576  06D9  0277               	subwf	___aldiv@dividend+3,w
  1577  06DA  1D03               	skipz
  1578  06DB  2EE6               	goto	u315
  1579  06DC  0872               	movf	___aldiv@divisor+2,w
  1580  06DD  0276               	subwf	___aldiv@dividend+2,w
  1581  06DE  1D03               	skipz
  1582  06DF  2EE6               	goto	u315
  1583  06E0  0871               	movf	___aldiv@divisor+1,w
  1584  06E1  0275               	subwf	___aldiv@dividend+1,w
  1585  06E2  1D03               	skipz
  1586  06E3  2EE6               	goto	u315
  1587  06E4  0870               	movf	___aldiv@divisor,w
  1588  06E5  0274               	subwf	___aldiv@dividend,w
  1589  06E6                     u315:	
  1590  06E6  1C03               	skipc
  1591  06E7  2EE9               	goto	u311
  1592  06E8  2EEA               	goto	u310
  1593  06E9                     u311:	
  1594  06E9  2EF9               	goto	l887
  1595  06EA                     u310:	
  1596  06EA                     l883:	
  1597  06EA  0870               	movf	___aldiv@divisor,w
  1598  06EB  02F4               	subwf	___aldiv@dividend,f
  1599  06EC  0871               	movf	___aldiv@divisor+1,w
  1600  06ED  1C03               	skipc
  1601  06EE  0F71               	incfsz	___aldiv@divisor+1,w
  1602  06EF  02F5               	subwf	___aldiv@dividend+1,f
  1603  06F0  0872               	movf	___aldiv@divisor+2,w
  1604  06F1  1C03               	skipc
  1605  06F2  0F72               	incfsz	___aldiv@divisor+2,w
  1606  06F3  02F6               	subwf	___aldiv@dividend+2,f
  1607  06F4  0873               	movf	___aldiv@divisor+3,w
  1608  06F5  1C03               	skipc
  1609  06F6  0F73               	incfsz	___aldiv@divisor+3,w
  1610  06F7  02F7               	subwf	___aldiv@dividend+3,f
  1611  06F8                     l885:	
  1612  06F8  1422               	bsf	___aldiv@quotient,0
  1613  06F9                     l887:	
  1614  06F9  3001               	movlw	1
  1615  06FA                     u325:	
  1616  06FA  1003               	clrc
  1617  06FB  0CF3               	rrf	___aldiv@divisor+3,f
  1618  06FC  0CF2               	rrf	___aldiv@divisor+2,f
  1619  06FD  0CF1               	rrf	___aldiv@divisor+1,f
  1620  06FE  0CF0               	rrf	___aldiv@divisor,f
  1621  06FF  3EFF               	addlw	-1
  1622  0700  1D03               	skipz
  1623  0701  2EFA               	goto	u325
  1624  0702                     l889:	
  1625  0702  3001               	movlw	1
  1626  0703  02A0               	subwf	___aldiv@counter,f
  1627  0704  1D03               	btfss	3,2
  1628  0705  2F07               	goto	u331
  1629  0706  2F08               	goto	u330
  1630  0707                     u331:	
  1631  0707  2ECF               	goto	l879
  1632  0708                     u330:	
  1633  0708                     l891:	
  1634  0708  0821               	movf	___aldiv@sign,w
  1635  0709  1903               	btfsc	3,2
  1636  070A  2F0C               	goto	u341
  1637  070B  2F0D               	goto	u340
  1638  070C                     u341:	
  1639  070C  2F18               	goto	l895
  1640  070D                     u340:	
  1641  070D                     l893:	
  1642  070D  09A2               	comf	___aldiv@quotient,f
  1643  070E  09A3               	comf	___aldiv@quotient+1,f
  1644  070F  09A4               	comf	___aldiv@quotient+2,f
  1645  0710  09A5               	comf	___aldiv@quotient+3,f
  1646  0711  0AA2               	incf	___aldiv@quotient,f
  1647  0712  1903               	skipnz
  1648  0713  0AA3               	incf	___aldiv@quotient+1,f
  1649  0714  1903               	skipnz
  1650  0715  0AA4               	incf	___aldiv@quotient+2,f
  1651  0716  1903               	skipnz
  1652  0717  0AA5               	incf	___aldiv@quotient+3,f
  1653  0718                     l895:	
  1654  0718  0825               	movf	___aldiv@quotient+3,w
  1655  0719  00F3               	movwf	?___aldiv+3
  1656  071A  0824               	movf	___aldiv@quotient+2,w
  1657  071B  00F2               	movwf	?___aldiv+2
  1658  071C  0823               	movf	___aldiv@quotient+1,w
  1659  071D  00F1               	movwf	?___aldiv+1
  1660  071E  0822               	movf	___aldiv@quotient,w
  1661  071F  00F0               	movwf	?___aldiv
  1662  0720                     l284:	
  1663  0720  0008               	return
  1664  0721                     __end_of___aldiv:	
  1665  007E                     btemp	set	126	;btemp
  1666  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     26      26
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_UART_Init
    _UART_Init->___aldiv

Critical Paths under _main in BANK0

    _main->_UART_Init
    _UART_Init->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    1309
                                             11 COMMON     2     2      0
                                             22 BANK0      4     4      0
                          _UART_Init
                          _UART_Read
                         _UART_Write
                            _spiInit
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _UART_Write                                           3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _UART_Read                                            1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           18    14      4     836
                                              9 COMMON     2     2      0
                                              6 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     604
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Init
     ___aldiv
   _UART_Read
   _UART_Write
   _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      D       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      28       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1A      1A       5       32.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      28      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Feb 17 13:06:21 2020

             __CFG_CP$OFF 0000               _SSPSTATbits 0094                        l33 07FA  
                      l36 05D8                        l39 05EB                        l48 05D5  
                      l49 05D6                       l112 05C1                       l105 05FC  
                     l106 0601                       l123 05CA                       l115 05BA  
                     l109 05BB                       l274 0698                       l284 0720  
                     l901 077A                       l911 07EC                       l903 0783  
                     l921 07F7                       l913 07ED                       l905 07DC  
                     l915 07F0                       l907 07DF                       l931 05D1  
                     l861 0687                       l917 07F3                       l909 07E8  
                     l925 05D8                       l941 05F8                       l871 06B3  
                     l863 068B                       l919 07F4                       l927 05DE  
                     l943 05FB                       l935 05ED                       l881 06D8  
                     l873 06BB                       l865 069C                       l929 05CB  
                     l937 05F4                       l857 05BB                       l945 05B6  
                     l961 0602                       l883 06EA                       l875 06BE  
                     l891 0708                       l867 06A7                       l859 0684  
                     l939 05F6                       l947 05C2                       l971 0639  
                     l963 0612                       l893 070D                       l885 06F8  
                     l877 06CB                       l869 06AB                       l949 05C7  
                     l981 0660                       l973 0641                       l965 061F  
                     l895 0718                       l887 06F9                       l879 06CF  
                     l983 0668                       l975 064E                       l967 0628  
                     l889 0702                       l985 066E                       l977 0650  
                     l969 0630                       l899 0721                       l987 0678  
                     l979 0656                       u310 06EA                       u311 06E9  
                     u400 07AC                       u240 05C1                       u305 06D1  
                     u241 05C0                       u330 0708                       u250 068B  
                     u331 0707                       u315 06E6                       u251 068A  
                     u411 07BE                       u340 070D                       u260 069C  
                     u420 07E8                       u412 07BF                       u341 070C  
                     u325 06FA                       u261 069B                       u421 07E7  
                     u413 07C4                       u405 07A7                       u270 06BB  
                     u414 07C5                       u350 0731                       u430 05DE  
                     u271 06BA                       u415 07CA                       u431 05DD  
                     u416 07CB                       u360 074A                       u440 05D1  
                     u441 05D0                       u290 06CF                       u450 05F4  
            __CFG_CPD$OFF 0000                       u291 06CE                       u371 075C  
                     u355 072C                       u507 05E6                       u451 05F3  
                     u380 0783                       u372 075D                       u285 06C0  
                     u381 0782                       u373 0762                       u365 0745  
                     u390 0793                       u374 0763                       u375 0768  
                     u376 0769                       u395 078E                       u477 0634  
                     u487 0662                       u497 067A              __CFG_LVP$OFF 0000  
                    _BRGH 04C2                      _CREN 00C4                      _RCIF 0065  
                    _SPEN 00C7                      _TRMT 04C1                      _TXEN 04C5  
                    _SYNC 04C4              __CFG_WRT$OFF 0000                      _main 0602  
                    btemp 007E                      start 0000             __CFG_IESO$OFF 0000  
         __end_of___aldiv 0721                     ?_main 0070             __CFG_WDTE$OFF 0000  
                   _ANSEL 0188                     _RCREG 001A                     _SPBRG 0099  
                   _PORTA 0005                     _PORTB 0006                     _TRISA 0085  
                   _TRISB 0086                     _TXREG 0019            __CFG_FCMEN$OFF 0000  
             ?_UART_Write 0070        __size_of_UART_Init 00DA        __size_of_UART_Read 000C  
          __CFG_BOREN$OFF 0000           __end_of_spiInit 0602           __end_of_spiRead 05CB  
                   status 0003                     wtemp0 007E            __CFG_MCLRE$OFF 0000  
         __initialization 07FB              __end_of_main 0684                    ??_main 007B  
                  _ANSELH 0189                    _TRISC3 043B                    _TRISC5 043D  
                  _TRISC6 043E                    _TRISC7 043F                    _SSPCON 0014  
                  _SSPBUF 0013            __CFG_PWRTE$OFF 0000         __end_of_UART_Init 07FB  
       __end_of_UART_Read 05D7       __size_of_UART_Write 0015                 ??___aldiv 0078  
        __end_of_spiWrite 05BB                 ??_spiInit 0073                 ??_spiRead 0070  
 __end_of__initialization 07FC            __pcstackCOMMON 0070                __pmaintext 0602  
 __size_of_spiReceiveWait 0007              ??_UART_Write 0070                   _SSPSTAT 0094  
               ?_spiWrite 0070                   ___aldiv 0684        __end_of_UART_Write 05EC  
                 __ptext1 05B5                   __ptext2 05C2                   __ptext3 05BB  
                 __ptext4 05EC                   __ptext5 05D7                   __ptext6 05CB  
                 __ptext7 0721                   __ptext8 0684          ___aldiv@dividend 0074  
                 _valeido 007D                   _spiInit 05EC                   _spiRead 05C2  
    end_of_initialization 07FC          ___aldiv@quotient 0022                ??_spiWrite 0070  
               _UART_Init 0721                 _UART_Read 05CB            UART_Write@data 0072  
             spiWrite@dat 0070            _spiReceiveWait 05BB                ?_UART_Init 0026  
              ?_UART_Read 0070       start_initialization 07FB  __CFG_FOSC$INTRC_NOCLKOUT 0000  
  __end_of_spiReceiveWait 05C2               __pbssCOMMON 007D                 ___latbits 0002  
           __pcstackBANK0 0020           ?_spiReceiveWait 0070                  ?___aldiv 0070  
             ??_UART_Init 002A               ??_UART_Read 0070         __size_of_spiWrite 0006  
                ?_spiInit 0070                  ?_spiRead 0070                UART_Init@x 0079  
         ___aldiv@divisor 0070      spiInit@sTransmitEdge 0072           ___aldiv@counter 0020  
      spiInit@sDataSample 0070                 main@COMPU 0036         UART_Init@baudrate 0026  
        __size_of___aldiv 009D          __size_of_spiInit 0016          __size_of_spiRead 0009  
       __CFG_BOR4V$BOR40V 0000             __size_of_main 0082                  _spiWrite 05B5  
                main@POT1 0038                  main@POT2 0039              spiInit@sType 0073  
       spiInit@sClockIdle 0071          ??_spiReceiveWait 0070              ___aldiv@sign 0021  
              _UART_Write 05D7  
